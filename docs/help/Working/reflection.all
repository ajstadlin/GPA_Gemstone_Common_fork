<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Gemstone.Common">
      <assemblydata version="1.0.7.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Grid Protection Alliance</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © 2020</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GPA Gemstone Common Library</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.7.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.7 -- Release Build</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gemstone</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gemstone.Common</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Gemstone">
      <apidata name="Gemstone" group="namespace" />
      <elements>
        <element api="T:Gemstone.BigEndian" />
        <element api="T:Gemstone.BitMath" />
        <element api="T:Gemstone.Bits" />
        <element api="T:Gemstone.Common" />
        <element api="T:Gemstone.EnabledState" />
        <element api="T:Gemstone.Encoding7Bit" />
        <element api="T:Gemstone.EventArgs`1" />
        <element api="T:Gemstone.EventArgs`2" />
        <element api="T:Gemstone.EventArgs`3" />
        <element api="T:Gemstone.EventArgs`4" />
        <element api="T:Gemstone.LibraryEvents" />
        <element api="T:Gemstone.LittleEndian" />
        <element api="T:Gemstone.NtpTimeTag" />
        <element api="T:Gemstone.NullableWeakReference" />
        <element api="T:Gemstone.BaselineTimeInterval" />
        <element api="T:Gemstone.Ticks" />
        <element api="T:Gemstone.TimeTagBase" />
        <element api="T:Gemstone.UnixTimeTag" />
        <element api="T:Gemstone.USTimeZones" />
        <element api="T:Gemstone.Word" />
      </elements>
    </api>
    <api id="T:Gemstone.BaselineTimeInterval">
      <apidata name="BaselineTimeInterval" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.BaselineTimeInterval.Second" />
        <element api="F:Gemstone.BaselineTimeInterval.Minute" />
        <element api="F:Gemstone.BaselineTimeInterval.Hour" />
        <element api="F:Gemstone.BaselineTimeInterval.Day" />
        <element api="F:Gemstone.BaselineTimeInterval.Month" />
        <element api="F:Gemstone.BaselineTimeInterval.Year" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Day">
      <apidata name="Day" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Hour">
      <apidata name="Hour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Minute">
      <apidata name="Minute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Month">
      <apidata name="Month" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Second">
      <apidata name="Second" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.BaselineTimeInterval.Year">
      <apidata name="Year" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.BigEndian">
      <apidata name="BigEndian" group="type" subgroup="class" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.BigEndian.ToBoolean(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToBoolean(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToChar(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToChar(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToDouble(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToDouble(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToInt16(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToInt16(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToInt32(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToInt32(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToInt64(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToInt64(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToSingle(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToSingle(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToUInt16(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToUInt16(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToUInt32(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToUInt32(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToUInt64(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToUInt64(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.ToDecimal(System.Byte*)" />
        <element api="M:Gemstone.BigEndian.ToDecimal(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.GetBytes``1(``0)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Boolean)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Char)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Double)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Int16)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Int32)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Int64)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Single)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.UInt16)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.UInt32)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.UInt64)" />
        <element api="M:Gemstone.BigEndian.GetBytes(System.Decimal)" />
        <element api="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Boolean,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Char,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Double,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int16,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int64,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Single,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt16,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt32,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt64,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Decimal,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Boolean,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Char,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Double,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int16,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int32,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Int64,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Single,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt16,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt32,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.UInt64,System.Byte*)" />
        <element api="M:Gemstone.BigEndian.CopyBytes(System.Decimal,System.Byte*)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Boolean,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Boolean,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Char,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Char,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Decimal,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Decimal,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Double,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Double,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int16,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int16,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int32,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int32,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int64,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Int64,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Single,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.Single,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt16,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt16,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt32,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt32,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt64,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes(System.UInt64,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte*)" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.BigEndian.CopyBytes``1(``0,System.Byte[],System.Int32)" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Boolean)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Char)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Decimal)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Double)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Int16)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Int32)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Int64)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.Single)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.UInt16)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.UInt32)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes(System.UInt64)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.GetBytes``1(``0)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.BigEndian.GetBytes``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToBoolean(System.Byte*)">
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToBoolean(System.Byte[],System.Int32)">
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToChar(System.Byte*)">
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToChar(System.Byte[],System.Int32)">
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToDecimal(System.Byte*)">
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToDecimal(System.Byte[],System.Int32)">
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToDouble(System.Byte*)">
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToDouble(System.Byte[],System.Int32)">
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt16(System.Byte*)">
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt16(System.Byte[],System.Int32)">
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt32(System.Byte*)">
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt32(System.Byte[],System.Int32)">
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt64(System.Byte*)">
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToInt64(System.Byte[],System.Int32)">
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToSingle(System.Byte*)">
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToSingle(System.Byte[],System.Int32)">
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt16(System.Byte*)">
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt16(System.Byte[],System.Int32)">
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt32(System.Byte*)">
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt32(System.Byte[],System.Int32)">
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt64(System.Byte*)">
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BigEndian.ToUInt64(System.Byte[],System.Int32)">
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BigEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BigEndian" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.BitMath">
      <apidata name="BitMath" group="type" subgroup="class" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.BitMath.IsPowerOfTwo(System.Int32)" />
        <element api="M:Gemstone.BitMath.IsPowerOfTwo(System.Int64)" />
        <element api="M:Gemstone.BitMath.IsPowerOfTwo(System.UInt32)" />
        <element api="M:Gemstone.BitMath.IsPowerOfTwo(System.UInt64)" />
        <element api="M:Gemstone.BitMath.CountBitsSet(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountBitsSet(System.UInt64)" />
        <element api="M:Gemstone.BitMath.CountBitsCleared(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountBitsCleared(System.UInt64)" />
        <element api="M:Gemstone.BitMath.RoundUpToNearestPowerOfTwo(System.UInt64)" />
        <element api="M:Gemstone.BitMath.RoundUpToNearestPowerOfTwo(System.UInt32)" />
        <element api="M:Gemstone.BitMath.RoundDownToNearestPowerOfTwo(System.UInt64)" />
        <element api="M:Gemstone.BitMath.RoundDownToNearestPowerOfTwo(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CreateBitMask(System.Int32)" />
        <element api="M:Gemstone.BitMath.CountTrailingZeros(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountTrailingZeros(System.UInt64)" />
        <element api="M:Gemstone.BitMath.CountLeadingZeros(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountLeadingZeros(System.UInt64)" />
        <element api="M:Gemstone.BitMath.CountTrailingOnes(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountTrailingOnes(System.UInt64)" />
        <element api="M:Gemstone.BitMath.CountLeadingOnes(System.UInt32)" />
        <element api="M:Gemstone.BitMath.CountLeadingOnes(System.UInt64)" />
        <element api="M:Gemstone.BitMath.GetSetBitPositions(System.UInt64)" />
        <element api="M:Gemstone.BitMath.GetSetBitPositions(System.UInt32)" />
        <element api="M:Gemstone.BitMath.GetClearedBitPositions(System.UInt32)" />
        <element api="M:Gemstone.BitMath.GetClearedBitPositions(System.UInt64)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountBitsCleared(System.UInt32)">
      <apidata name="CountBitsCleared" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountBitsCleared(System.UInt64)">
      <apidata name="CountBitsCleared" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountBitsSet(System.UInt32)">
      <apidata name="CountBitsSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountBitsSet(System.UInt64)">
      <apidata name="CountBitsSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountLeadingOnes(System.UInt32)">
      <apidata name="CountLeadingOnes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountLeadingOnes(System.UInt64)">
      <apidata name="CountLeadingOnes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountLeadingZeros(System.UInt32)">
      <apidata name="CountLeadingZeros" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountLeadingZeros(System.UInt64)">
      <apidata name="CountLeadingZeros" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountTrailingOnes(System.UInt32)">
      <apidata name="CountTrailingOnes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountTrailingOnes(System.UInt64)">
      <apidata name="CountTrailingOnes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountTrailingZeros(System.UInt32)">
      <apidata name="CountTrailingZeros" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CountTrailingZeros(System.UInt64)">
      <apidata name="CountTrailingZeros" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.CreateBitMask(System.Int32)">
      <apidata name="CreateBitMask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bitCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.GetClearedBitPositions(System.UInt32)">
      <apidata name="GetClearedBitPositions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.GetClearedBitPositions(System.UInt64)">
      <apidata name="GetClearedBitPositions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.GetSetBitPositions(System.UInt32)">
      <apidata name="GetSetBitPositions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.GetSetBitPositions(System.UInt64)">
      <apidata name="GetSetBitPositions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.IsPowerOfTwo(System.Int32)">
      <apidata name="IsPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.IsPowerOfTwo(System.Int64)">
      <apidata name="IsPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.IsPowerOfTwo(System.UInt32)">
      <apidata name="IsPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.IsPowerOfTwo(System.UInt64)">
      <apidata name="IsPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.RoundDownToNearestPowerOfTwo(System.UInt32)">
      <apidata name="RoundDownToNearestPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.RoundDownToNearestPowerOfTwo(System.UInt64)">
      <apidata name="RoundDownToNearestPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.RoundUpToNearestPowerOfTwo(System.UInt32)">
      <apidata name="RoundUpToNearestPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitMath.RoundUpToNearestPowerOfTwo(System.UInt64)">
      <apidata name="RoundUpToNearestPowerOfTwo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitMath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.BitMath" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Bits">
      <apidata name="Bits" group="type" subgroup="enumeration" />
      <sourceContext file="Gemstone/Bits.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.UInt64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Gemstone.Bits.Nil" />
        <element api="F:Gemstone.Bits.Bit00" />
        <element api="F:Gemstone.Bits.Bit01" />
        <element api="F:Gemstone.Bits.Bit02" />
        <element api="F:Gemstone.Bits.Bit03" />
        <element api="F:Gemstone.Bits.Bit04" />
        <element api="F:Gemstone.Bits.Bit05" />
        <element api="F:Gemstone.Bits.Bit06" />
        <element api="F:Gemstone.Bits.Bit07" />
        <element api="F:Gemstone.Bits.Bit08" />
        <element api="F:Gemstone.Bits.Bit09" />
        <element api="F:Gemstone.Bits.Bit10" />
        <element api="F:Gemstone.Bits.Bit11" />
        <element api="F:Gemstone.Bits.Bit12" />
        <element api="F:Gemstone.Bits.Bit13" />
        <element api="F:Gemstone.Bits.Bit14" />
        <element api="F:Gemstone.Bits.Bit15" />
        <element api="F:Gemstone.Bits.Bit16" />
        <element api="F:Gemstone.Bits.Bit17" />
        <element api="F:Gemstone.Bits.Bit18" />
        <element api="F:Gemstone.Bits.Bit19" />
        <element api="F:Gemstone.Bits.Bit20" />
        <element api="F:Gemstone.Bits.Bit21" />
        <element api="F:Gemstone.Bits.Bit22" />
        <element api="F:Gemstone.Bits.Bit23" />
        <element api="F:Gemstone.Bits.Bit24" />
        <element api="F:Gemstone.Bits.Bit25" />
        <element api="F:Gemstone.Bits.Bit26" />
        <element api="F:Gemstone.Bits.Bit27" />
        <element api="F:Gemstone.Bits.Bit28" />
        <element api="F:Gemstone.Bits.Bit29" />
        <element api="F:Gemstone.Bits.Bit30" />
        <element api="F:Gemstone.Bits.Bit31" />
        <element api="F:Gemstone.Bits.Bit32" />
        <element api="F:Gemstone.Bits.Bit33" />
        <element api="F:Gemstone.Bits.Bit34" />
        <element api="F:Gemstone.Bits.Bit35" />
        <element api="F:Gemstone.Bits.Bit36" />
        <element api="F:Gemstone.Bits.Bit37" />
        <element api="F:Gemstone.Bits.Bit38" />
        <element api="F:Gemstone.Bits.Bit39" />
        <element api="F:Gemstone.Bits.Bit40" />
        <element api="F:Gemstone.Bits.Bit41" />
        <element api="F:Gemstone.Bits.Bit42" />
        <element api="F:Gemstone.Bits.Bit43" />
        <element api="F:Gemstone.Bits.Bit44" />
        <element api="F:Gemstone.Bits.Bit45" />
        <element api="F:Gemstone.Bits.Bit46" />
        <element api="F:Gemstone.Bits.Bit47" />
        <element api="F:Gemstone.Bits.Bit48" />
        <element api="F:Gemstone.Bits.Bit49" />
        <element api="F:Gemstone.Bits.Bit50" />
        <element api="F:Gemstone.Bits.Bit51" />
        <element api="F:Gemstone.Bits.Bit52" />
        <element api="F:Gemstone.Bits.Bit53" />
        <element api="F:Gemstone.Bits.Bit54" />
        <element api="F:Gemstone.Bits.Bit55" />
        <element api="F:Gemstone.Bits.Bit56" />
        <element api="F:Gemstone.Bits.Bit57" />
        <element api="F:Gemstone.Bits.Bit58" />
        <element api="F:Gemstone.Bits.Bit59" />
        <element api="F:Gemstone.Bits.Bit60" />
        <element api="F:Gemstone.Bits.Bit61" />
        <element api="F:Gemstone.Bits.Bit62" />
        <element api="F:Gemstone.Bits.Bit63" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Gemstone.Bits.Bit00">
      <apidata name="Bit00" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit01">
      <apidata name="Bit01" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit02">
      <apidata name="Bit02" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit03">
      <apidata name="Bit03" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit04">
      <apidata name="Bit04" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit05">
      <apidata name="Bit05" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit06">
      <apidata name="Bit06" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit07">
      <apidata name="Bit07" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit08">
      <apidata name="Bit08" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit09">
      <apidata name="Bit09" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit10">
      <apidata name="Bit10" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit11">
      <apidata name="Bit11" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit12">
      <apidata name="Bit12" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit13">
      <apidata name="Bit13" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>8192</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit14">
      <apidata name="Bit14" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>16384</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit15">
      <apidata name="Bit15" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>32768</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit16">
      <apidata name="Bit16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit17">
      <apidata name="Bit17" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit18">
      <apidata name="Bit18" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit19">
      <apidata name="Bit19" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit20">
      <apidata name="Bit20" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit21">
      <apidata name="Bit21" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2097152</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit22">
      <apidata name="Bit22" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4194304</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit23">
      <apidata name="Bit23" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>8388608</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit24">
      <apidata name="Bit24" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit25">
      <apidata name="Bit25" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>33554432</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit26">
      <apidata name="Bit26" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>67108864</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit27">
      <apidata name="Bit27" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>134217728</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit28">
      <apidata name="Bit28" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>268435456</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit29">
      <apidata name="Bit29" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>536870912</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit30">
      <apidata name="Bit30" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit31">
      <apidata name="Bit31" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2147483648</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit32">
      <apidata name="Bit32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4294967296</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit33">
      <apidata name="Bit33" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>8589934592</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit34">
      <apidata name="Bit34" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>17179869184</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit35">
      <apidata name="Bit35" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>34359738368</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit36">
      <apidata name="Bit36" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>68719476736</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit37">
      <apidata name="Bit37" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>137438953472</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit38">
      <apidata name="Bit38" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>274877906944</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit39">
      <apidata name="Bit39" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>549755813888</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit40">
      <apidata name="Bit40" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1099511627776</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit41">
      <apidata name="Bit41" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2199023255552</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit42">
      <apidata name="Bit42" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4398046511104</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit43">
      <apidata name="Bit43" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>8796093022208</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit44">
      <apidata name="Bit44" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>17592186044416</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit45">
      <apidata name="Bit45" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>35184372088832</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit46">
      <apidata name="Bit46" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>70368744177664</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit47">
      <apidata name="Bit47" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>140737488355328</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit48">
      <apidata name="Bit48" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>281474976710656</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit49">
      <apidata name="Bit49" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>562949953421312</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit50">
      <apidata name="Bit50" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1125899906842624</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit51">
      <apidata name="Bit51" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2251799813685248</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit52">
      <apidata name="Bit52" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4503599627370496</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit53">
      <apidata name="Bit53" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>9007199254740992</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit54">
      <apidata name="Bit54" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>18014398509481984</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit55">
      <apidata name="Bit55" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>36028797018963968</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit56">
      <apidata name="Bit56" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>72057594037927936</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit57">
      <apidata name="Bit57" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>144115188075855872</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit58">
      <apidata name="Bit58" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>288230376151711744</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit59">
      <apidata name="Bit59" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>576460752303423488</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit60">
      <apidata name="Bit60" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>1152921504606846976</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit61">
      <apidata name="Bit61" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>2305843009213693952</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit62">
      <apidata name="Bit62" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>4611686018427387904</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Bit63">
      <apidata name="Bit63" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>9223372036854775808</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Bits.Nil">
      <apidata name="Nil" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Bits.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Bits" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Common">
      <apidata name="Common" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Common.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.Common.IsPosixEnvironment" />
        <element api="F:Gemstone.Common.IsMono" />
        <element api="M:Gemstone.Common.IIf``1(System.Boolean,``0,``0)" />
        <element api="M:Gemstone.Common.CreateArray``1(System.Int32)" />
        <element api="M:Gemstone.Common.CreateArray``1(System.Int32,``0)" />
        <element api="M:Gemstone.Common.TypeConvertToString(System.Object)" />
        <element api="M:Gemstone.Common.TypeConvertToString(System.Object,System.Globalization.CultureInfo)" />
        <element api="M:Gemstone.Common.TypeConvertFromString(System.String,System.Type)" />
        <element api="M:Gemstone.Common.TypeConvertFromString(System.String,System.Type,System.Globalization.CultureInfo)" />
        <element api="M:Gemstone.Common.IsDefaultValue(System.Object)" />
        <element api="M:Gemstone.Common.IsReference(System.Object)" />
        <element api="M:Gemstone.Common.IsNonStringReference(System.Object)" />
        <element api="M:Gemstone.Common.IsNumericType(System.TypeCode)" />
        <element api="M:Gemstone.Common.IsNumericType(System.Type)" />
        <element api="M:Gemstone.Common.IsNumericType``1" />
        <element api="M:Gemstone.Common.IsNumericType(System.Object)" />
        <element api="M:Gemstone.Common.IsNumeric(System.Object)" />
        <element api="M:Gemstone.Common.Min``1(``0[])" />
        <element api="M:Gemstone.Common.Max``1(``0[])" />
        <element api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
        <element api="M:Gemstone.Common.GetOSPlatformID" />
        <element api="M:Gemstone.Common.GetOSProductName" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.CreateArray``1(System.Int32)">
      <apidata name="CreateArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.Common.CreateArray``1(System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.CreateArray``1(System.Int32,``0)">
      <apidata name="CreateArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="initialValue">
          <template name="T" index="0" api="M:Gemstone.Common.CreateArray``1(System.Int32,``0)" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.Common.CreateArray``1(System.Int32,``0)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.GetOSPlatformID">
      <apidata name="GetOSPlatformID" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.PlatformID" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.GetOSProductName">
      <apidata name="GetOSProductName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IIf``1(System.Boolean,``0,``0)">
      <apidata name="IIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="truePart">
          <template name="T" index="0" api="M:Gemstone.Common.IIf``1(System.Boolean,``0,``0)" />
        </parameter>
        <parameter name="falsePart">
          <template name="T" index="0" api="M:Gemstone.Common.IIf``1(System.Boolean,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Common.IIf``1(System.Boolean,``0,``0)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsDefaultValue(System.Object)">
      <apidata name="IsDefaultValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Common.IsMono">
      <apidata name="IsMono" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNonStringReference(System.Object)">
      <apidata name="IsNonStringReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNumeric(System.Object)">
      <apidata name="IsNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNumericType``1">
      <apidata name="IsNumericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNumericType(System.Object)">
      <apidata name="IsNumericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNumericType(System.Type)">
      <apidata name="IsNumericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsNumericType(System.TypeCode)">
      <apidata name="IsNumericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeCode">
          <type api="T:System.TypeCode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Common.IsPosixEnvironment">
      <apidata name="IsPosixEnvironment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.IsReference(System.Object)">
      <apidata name="IsReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.Max``1(``0[])">
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="itemList" params="true">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.Common.Max``1(``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Common.Max``1(``0[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.Mid``1(``0,``0,``0)">
      <apidata name="Mid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value1">
          <template name="T" index="0" api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
        </parameter>
        <parameter name="value2">
          <template name="T" index="0" api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
        </parameter>
        <parameter name="value3">
          <template name="T" index="0" api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Common.Mid``1(``0,``0,``0)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.Min``1(``0[])">
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="itemList" params="true">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.Common.Min``1(``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Common.Min``1(``0[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.TypeConvertFromString(System.String,System.Type)">
      <apidata name="TypeConvertFromString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.TypeConvertFromString(System.String,System.Type,System.Globalization.CultureInfo)">
      <apidata name="TypeConvertFromString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.TypeConvertToString(System.Object)">
      <apidata name="TypeConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Common.TypeConvertToString(System.Object,System.Globalization.CultureInfo)">
      <apidata name="TypeConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Common.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Common" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.EnabledState">
      <apidata name="EnabledState" group="type" subgroup="enumeration" />
      <sourceContext file="Gemstone/EnabledState.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.EnabledState.Auto" />
        <element api="F:Gemstone.EnabledState.On" />
        <element api="F:Gemstone.EnabledState.Off" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="F:Gemstone.EnabledState.Auto">
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnabledState.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.EnabledState" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EnabledState" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.EnabledState.Off">
      <apidata name="Off" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnabledState.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.EnabledState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EnabledState" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.EnabledState.On">
      <apidata name="On" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnabledState.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.EnabledState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EnabledState" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Encoding7Bit">
      <apidata name="Encoding7Bit" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Encoding7Bit.GetSizeInt15(System.Int16)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureInt15(System.Byte*)" />
        <element api="M:Gemstone.Encoding7Bit.Measure15(System.Byte*,System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.Measure15(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte*,System.Int16)" />
        <element api="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte*,System.Int32@,System.Int16)" />
        <element api="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte[],System.Int32@,System.Int16)" />
        <element api="M:Gemstone.Encoding7Bit.WriteInt15(System.Action{System.Byte},System.Int16)" />
        <element api="M:Gemstone.Encoding7Bit.ReadInt15(System.Byte*,System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadInt15(System.Byte[],System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadInt15(System.IO.Stream)" />
        <element api="M:Gemstone.Encoding7Bit.ReadInt15(System.Func{System.Byte})" />
        <element api="M:Gemstone.Encoding7Bit.GetSize(System.UInt32)" />
        <element api="M:Gemstone.Encoding7Bit.GetSize(System.UInt64)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte*)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte*,System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.UInt32)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.Int32@,System.UInt32)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte[],System.Int32@,System.UInt32)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Action{System.Byte},System.UInt32)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.UInt64)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.Int32@,System.UInt64)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Byte[],System.Int32@,System.UInt64)" />
        <element api="M:Gemstone.Encoding7Bit.Write(System.Action{System.Byte},System.UInt64)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt32(System.Byte*,System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt32(System.Byte[],System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt32(System.IO.Stream)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt32(System.Func{System.Byte})" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte*)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte*,System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt64(System.Byte*,System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt64(System.Byte[],System.Int32@)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt64(System.IO.Stream)" />
        <element api="M:Gemstone.Encoding7Bit.ReadUInt64(System.Func{System.Byte})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.GetSize(System.UInt32)">
      <apidata name="GetSize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.GetSize(System.UInt64)">
      <apidata name="GetSize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.GetSizeInt15(System.Int16)">
      <apidata name="GetSizeInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Measure15(System.Byte*,System.Int32)">
      <apidata name="Measure15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Measure15(System.Byte[],System.Int32)">
      <apidata name="Measure15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureInt15(System.Byte*)">
      <apidata name="MeasureInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte*)">
      <apidata name="MeasureUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte*,System.Int32)">
      <apidata name="MeasureUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt32(System.Byte[],System.Int32)">
      <apidata name="MeasureUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte*)">
      <apidata name="MeasureUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte*,System.Int32)">
      <apidata name="MeasureUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.MeasureUInt64(System.Byte[],System.Int32)">
      <apidata name="MeasureUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadInt15(System.Byte*,System.Int32@)">
      <apidata name="ReadInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadInt15(System.Byte[],System.Int32@)">
      <apidata name="ReadInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadInt15(System.Func{System.Byte})">
      <apidata name="ReadInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadInt15(System.IO.Stream)">
      <apidata name="ReadInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt32(System.Byte*,System.Int32@)">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt32(System.Byte[],System.Int32@)">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt32(System.Func{System.Byte})">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt32(System.IO.Stream)">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt64(System.Byte*,System.Int32@)">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt64(System.Byte[],System.Int32@)">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt64(System.Func{System.Byte})">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.ReadUInt64(System.IO.Stream)">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Action{System.Byte},System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Action{System.Byte},System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.Int32@,System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.Int32@,System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte*,System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte[],System.Int32@,System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.Write(System.Byte[],System.Int32@,System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.WriteInt15(System.Action{System.Byte},System.Int16)">
      <apidata name="WriteInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte*,System.Int16)">
      <apidata name="WriteInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte*,System.Int32@,System.Int16)">
      <apidata name="WriteInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Encoding7Bit.WriteInt15(System.Byte[],System.Int32@,System.Int16)">
      <apidata name="WriteInt15" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Encoding7Bit.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Encoding7Bit" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.EventArgs`1">
      <apidata name="EventArgs" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:Gemstone.EventArgs`1.Argument" />
        <element api="M:Gemstone.EventArgs`1.#ctor" />
        <element api="M:Gemstone.EventArgs`1.#ctor(`0)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`1.#ctor(`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <parameters>
        <parameter name="argument">
          <template name="T" index="0" api="T:Gemstone.EventArgs`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`1.Argument">
      <apidata name="Argument" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:Gemstone.EventArgs`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.EventArgs`2">
      <apidata name="EventArgs" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="F:Gemstone.EventArgs`2.Argument1" />
        <element api="F:Gemstone.EventArgs`2.Argument2" />
        <element api="M:Gemstone.EventArgs`2.#ctor" />
        <element api="M:Gemstone.EventArgs`2.#ctor(`0,`1)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`2.#ctor(`0,`1)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <parameters>
        <parameter name="argument1">
          <template name="T1" index="0" api="T:Gemstone.EventArgs`2" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="T:Gemstone.EventArgs`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`2.Argument1">
      <apidata name="Argument1" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T1" index="0" api="T:Gemstone.EventArgs`2" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`2.Argument2">
      <apidata name="Argument2" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T2" index="1" api="T:Gemstone.EventArgs`2" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.EventArgs`3">
      <apidata name="EventArgs" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="F:Gemstone.EventArgs`3.Argument1" />
        <element api="F:Gemstone.EventArgs`3.Argument2" />
        <element api="F:Gemstone.EventArgs`3.Argument3" />
        <element api="M:Gemstone.EventArgs`3.#ctor" />
        <element api="M:Gemstone.EventArgs`3.#ctor(`0,`1,`2)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`3.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`3" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`3.#ctor(`0,`1,`2)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <parameters>
        <parameter name="argument1">
          <template name="T1" index="0" api="T:Gemstone.EventArgs`3" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="T:Gemstone.EventArgs`3" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="T:Gemstone.EventArgs`3" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`3" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`3.Argument1">
      <apidata name="Argument1" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T1" index="0" api="T:Gemstone.EventArgs`3" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`3" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`3.Argument2">
      <apidata name="Argument2" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T2" index="1" api="T:Gemstone.EventArgs`3" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`3" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`3.Argument3">
      <apidata name="Argument3" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T3" index="2" api="T:Gemstone.EventArgs`3" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`3" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.EventArgs`4">
      <apidata name="EventArgs" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="F:Gemstone.EventArgs`4.Argument1" />
        <element api="F:Gemstone.EventArgs`4.Argument2" />
        <element api="F:Gemstone.EventArgs`4.Argument3" />
        <element api="F:Gemstone.EventArgs`4.Argument4" />
        <element api="M:Gemstone.EventArgs`4.#ctor" />
        <element api="M:Gemstone.EventArgs`4.#ctor(`0,`1,`2,`3)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`4.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.EventArgs`4.#ctor(`0,`1,`2,`3)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <parameters>
        <parameter name="argument1">
          <template name="T1" index="0" api="T:Gemstone.EventArgs`4" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="T:Gemstone.EventArgs`4" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="T:Gemstone.EventArgs`4" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="T:Gemstone.EventArgs`4" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`4.Argument1">
      <apidata name="Argument1" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T1" index="0" api="T:Gemstone.EventArgs`4" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`4.Argument2">
      <apidata name="Argument2" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T2" index="1" api="T:Gemstone.EventArgs`4" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`4.Argument3">
      <apidata name="Argument3" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T3" index="2" api="T:Gemstone.EventArgs`4" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.EventArgs`4.Argument4">
      <apidata name="Argument4" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/EventArgs.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T4" index="3" api="T:Gemstone.EventArgs`4" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.EventArgs`4" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.LibraryEvents">
      <apidata name="LibraryEvents" group="type" subgroup="class" />
      <sourceContext file="Gemstone/LibraryEvents.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:Gemstone.LibraryEvents.SuppressedException" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="E:Gemstone.LibraryEvents.SuppressedException">
      <apidata name="SuppressedException" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LibraryEvents.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SuppressedException" />
      <remover name="remove_SuppressedException" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.UnhandledExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.UnhandledExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LibraryEvents" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.LittleEndian">
      <apidata name="LittleEndian" group="type" subgroup="class" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.LittleEndian.ToBoolean(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToBoolean(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToChar(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToChar(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToDouble(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToDouble(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToInt16(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToInt16(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToInt32(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToInt32(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToInt64(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToInt64(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToSingle(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToSingle(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToUInt16(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToUInt16(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToUInt32(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToUInt32(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToUInt64(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToUInt64(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.ToDecimal(System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.ToDecimal(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.GetBytes``1(``0)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Boolean)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Char)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Double)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Int16)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Int32)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Int64)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Single)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.UInt16)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.UInt32)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.UInt64)" />
        <element api="M:Gemstone.LittleEndian.GetBytes(System.Decimal)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Boolean,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Char,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Double,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int16,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int64,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Single,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt16,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt32,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt64,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Decimal,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Boolean,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Char,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Double,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int16,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int32,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Int64,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Single,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt16,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt32,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.UInt64,System.Byte*)" />
        <element api="M:Gemstone.LittleEndian.CopyBytes(System.Decimal,System.Byte*)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Boolean,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Boolean,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Char,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Char,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Decimal,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Decimal,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Double,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Double,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int16,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int16,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int32,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int32,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int64,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Int64,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Single,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.Single,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt16,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt16,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt32,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt32,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt64,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes(System.UInt64,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte*)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte*)" />
        </parameter>
        <parameter name="destination">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte[],System.Int32)">
      <apidata name="CopyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.LittleEndian.CopyBytes``1(``0,System.Byte[],System.Int32)" />
        </parameter>
        <parameter name="destinationArray">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="destinationIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Boolean)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Char)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Decimal)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Double)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Int16)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Int32)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Int64)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.Single)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.UInt16)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.UInt32)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes(System.UInt64)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.GetBytes``1(``0)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IConvertible" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.LittleEndian.GetBytes``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToBoolean(System.Byte*)">
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToBoolean(System.Byte[],System.Int32)">
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToChar(System.Byte*)">
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToChar(System.Byte[],System.Int32)">
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToDecimal(System.Byte*)">
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToDecimal(System.Byte[],System.Int32)">
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToDouble(System.Byte*)">
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToDouble(System.Byte[],System.Int32)">
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt16(System.Byte*)">
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt16(System.Byte[],System.Int32)">
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt32(System.Byte*)">
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt32(System.Byte[],System.Int32)">
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt64(System.Byte*)">
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToInt64(System.Byte[],System.Int32)">
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToSingle(System.Byte*)">
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToSingle(System.Byte[],System.Int32)">
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt16(System.Byte*)">
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt16(System.Byte[],System.Int32)">
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt32(System.Byte*)">
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt32(System.Byte[],System.Int32)">
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt64(System.Byte*)">
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.LittleEndian.ToUInt64(System.Byte[],System.Int32)">
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/LittleEndian.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.LittleEndian" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.NtpTimeTag">
      <apidata name="NtpTimeTag" group="type" subgroup="class" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Gemstone.TimeTagBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.NtpTimeTag.BaseTicks" />
        <element api="F:Gemstone.NtpTimeTag.AlternateBaseTicks" />
        <element api="M:Gemstone.NtpTimeTag.#ctor(System.Decimal)" />
        <element api="M:Gemstone.NtpTimeTag.#ctor(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.NtpTimeTag.#ctor(System.UInt64)" />
        <element api="M:Gemstone.NtpTimeTag.#ctor(Gemstone.Ticks)" />
        <element api="M:Gemstone.NtpTimeTag.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(System.Decimal)" />
        <element api="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(Gemstone.Ticks)" />
        <element api="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(System.UInt32)" />
        <element api="M:Gemstone.NtpTimeTag.FromTicks(Gemstone.Ticks)" />
        <element api="P:Gemstone.NtpTimeTag.Timestamp" />
        <element api="M:Gemstone.TimeTagBase.ToDateTime" />
        <element api="M:Gemstone.TimeTagBase.ToString" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.GetHashCode" />
        <element api="M:Gemstone.TimeTagBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:Gemstone.TimeTagBase.Value" />
        <element api="P:Gemstone.TimeTagBase.BaseDateOffsetTicks" />
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.#ctor(Gemstone.Ticks)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.#ctor(System.Decimal)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.#ctor(System.UInt32,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="fraction">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.#ctor(System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.NtpTimeTag.AlternateBaseTicks">
      <apidata name="AlternateBaseTicks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.NtpTimeTag.BaseTicks">
      <apidata name="BaseTicks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.FromTicks(Gemstone.Ticks)">
      <apidata name="FromTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(Gemstone.Ticks)">
      <apidata name="GetBaseDateOffsetTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(System.Decimal)">
      <apidata name="GetBaseDateOffsetTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NtpTimeTag.GetBaseDateOffsetTicks(System.UInt32)">
      <apidata name="GetBaseDateOffsetTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.NtpTimeTag.Timestamp">
      <apidata name="Timestamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/NtpTimeTag.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Timestamp" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.NullableWeakReference">
      <apidata name="NullableWeakReference" group="type" subgroup="class" />
      <sourceContext file="Gemstone/NullableWeakReference.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.WeakReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.NullableWeakReference.#ctor(System.Object)" />
        <element api="M:Gemstone.NullableWeakReference.Clear" />
        <element api="P:Gemstone.NullableWeakReference.IsAlive" />
        <element api="P:Gemstone.NullableWeakReference.Target" />
        <element api="M:System.WeakReference.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <implements>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.WeakReference" ref="true" />
          </containers>
        </element>
        <element api="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.WeakReference" ref="true" />
          </containers>
        </element>
        <element api="P:System.WeakReference.TrackResurrection">
          <apidata name="TrackResurrection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TrackResurrection" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.WeakReference" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.NullableWeakReference.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/NullableWeakReference.cs" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NullableWeakReference" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.NullableWeakReference.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/NullableWeakReference.cs" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NullableWeakReference" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.NullableWeakReference.IsAlive">
      <apidata name="IsAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/NullableWeakReference.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.WeakReference.IsAlive">
          <type api="T:System.WeakReference" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NullableWeakReference" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.NullableWeakReference.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/NullableWeakReference.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.WeakReference.Target">
          <type api="T:System.WeakReference" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.NullableWeakReference" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Ticks">
      <apidata name="Ticks" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Ticks" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Ticks" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Ticks.PerSecond" />
        <element api="F:Gemstone.Ticks.PerMillisecond" />
        <element api="F:Gemstone.Ticks.PerMicrosecond" />
        <element api="F:Gemstone.Ticks.PerMinute" />
        <element api="F:Gemstone.Ticks.PerHour" />
        <element api="F:Gemstone.Ticks.PerDay" />
        <element api="F:Gemstone.Ticks.Value" />
        <element api="F:Gemstone.Ticks.MaxValue" />
        <element api="F:Gemstone.Ticks.MinValue" />
        <element api="M:Gemstone.Ticks.#ctor(System.Int64)" />
        <element api="M:Gemstone.Ticks.#ctor(System.DateTime)" />
        <element api="M:Gemstone.Ticks.#ctor(System.TimeSpan)" />
        <element api="M:Gemstone.Ticks.ToDays" />
        <element api="M:Gemstone.Ticks.ToHours" />
        <element api="M:Gemstone.Ticks.ToMinutes" />
        <element api="M:Gemstone.Ticks.ToSeconds" />
        <element api="M:Gemstone.Ticks.ToSeconds(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.ToMilliseconds" />
        <element api="M:Gemstone.Ticks.ToMilliseconds(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.ToMicroseconds" />
        <element api="M:Gemstone.Ticks.ToMicroseconds(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.UtcTimeIsValid(System.Double,System.Double)" />
        <element api="M:Gemstone.Ticks.UtcTimeIsValid(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.LocalTimeIsValid(System.Double,System.Double)" />
        <element api="M:Gemstone.Ticks.LocalTimeIsValid(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.TimeIsValid(Gemstone.Ticks,System.Double,System.Double)" />
        <element api="M:Gemstone.Ticks.TimeIsValid(Gemstone.Ticks,Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.DistanceBeyondSecond" />
        <element api="M:Gemstone.Ticks.BaselinedTimestamp(Gemstone.BaselineTimeInterval)" />
        <element api="M:Gemstone.Ticks.ToString" />
        <element api="M:Gemstone.Ticks.ToString(System.String)" />
        <element api="M:Gemstone.Ticks.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Ticks.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Ticks.ToElapsedTimeString" />
        <element api="M:Gemstone.Ticks.ToElapsedTimeString(System.Int32,System.Double)" />
        <element api="M:Gemstone.Ticks.ToElapsedTimeString(System.Int32,System.String[],System.Double)" />
        <element api="M:Gemstone.Ticks.CompareTo(System.Object)" />
        <element api="M:Gemstone.Ticks.CompareTo(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.CompareTo(System.DateTime)" />
        <element api="M:Gemstone.Ticks.CompareTo(System.TimeSpan)" />
        <element api="M:Gemstone.Ticks.CompareTo(System.Int64)" />
        <element api="M:Gemstone.Ticks.Equals(System.Object)" />
        <element api="M:Gemstone.Ticks.Equals(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.Equals(System.DateTime)" />
        <element api="M:Gemstone.Ticks.Equals(System.TimeSpan)" />
        <element api="M:Gemstone.Ticks.Equals(System.Int64)" />
        <element api="M:Gemstone.Ticks.GetHashCode" />
        <element api="M:Gemstone.Ticks.GetTypeCode" />
        <element api="M:Gemstone.Ticks.op_Equality(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Inequality(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_LessThan(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_LessThanOrEqual(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_GreaterThan(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_GreaterThanOrEqual(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Implicit(System.Int64)~Gemstone.Ticks" />
        <element api="M:Gemstone.Ticks.op_Implicit(System.DateTime)~Gemstone.Ticks" />
        <element api="M:Gemstone.Ticks.op_Implicit(System.TimeSpan)~Gemstone.Ticks" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.TimeTagBase)~Gemstone.Ticks" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.Int64" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.DateTime" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.TimeSpan" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~Gemstone.NtpTimeTag" />
        <element api="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~Gemstone.UnixTimeTag" />
        <element api="M:Gemstone.Ticks.op_True(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_False(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_OnesComplement(Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_BitwiseAnd(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_BitwiseOr(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_ExclusiveOr(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_RightShift(Gemstone.Ticks,System.Int32)" />
        <element api="M:Gemstone.Ticks.op_LeftShift(Gemstone.Ticks,System.Int32)" />
        <element api="M:Gemstone.Ticks.op_Modulus(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Addition(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Subtraction(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Multiply(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Division(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.op_Exponent(Gemstone.Ticks,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.FromSeconds(System.Double)" />
        <element api="M:Gemstone.Ticks.FromMilliseconds(System.Double)" />
        <element api="M:Gemstone.Ticks.FromMicroseconds(System.Double)" />
        <element api="M:Gemstone.Ticks.Parse(System.String)" />
        <element api="M:Gemstone.Ticks.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Ticks.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Ticks.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Ticks.TryParse(System.String,Gemstone.Ticks@)" />
        <element api="M:Gemstone.Ticks.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Ticks@)" />
        <element api="M:Gemstone.Ticks.SubsecondDistribution(System.Int32)" />
        <element api="M:Gemstone.Ticks.MillisecondDistribution(System.Int32)" />
        <element api="M:Gemstone.Ticks.MicrosecondDistribution(System.Int32)" />
        <element api="M:Gemstone.Ticks.AlignToSubsecondDistribution(Gemstone.Ticks,System.Int32,System.Int64)" />
        <element api="M:Gemstone.Ticks.AlignToMillisecondDistribution(Gemstone.Ticks,System.Int32)" />
        <element api="M:Gemstone.Ticks.AlignToMicrosecondDistribution(Gemstone.Ticks,System.Int32)" />
        <element api="M:Gemstone.Ticks.RoundToSubsecondDistribution(Gemstone.Ticks,System.Int32)" />
        <element api="M:Gemstone.Ticks.RoundToSecondDistribution(Gemstone.Ticks,System.Double,Gemstone.Ticks)" />
        <element api="M:Gemstone.Ticks.ToSecondDistribution(Gemstone.Ticks,System.Double,Gemstone.Ticks,System.Int32)" />
        <element api="P:Gemstone.Ticks.SystemTimer" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.#ctor(System.DateTime)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.#ctor(System.Int64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.AlignToMicrosecondDistribution(Gemstone.Ticks,System.Int32)">
      <apidata name="AlignToMicrosecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.AlignToMillisecondDistribution(Gemstone.Ticks,System.Int32)">
      <apidata name="AlignToMillisecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.AlignToSubsecondDistribution(Gemstone.Ticks,System.Int32,System.Int64)">
      <apidata name="AlignToSubsecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeResolution">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.BaselinedTimestamp(Gemstone.BaselineTimeInterval)">
      <apidata name="BaselinedTimestamp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interval">
          <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.CompareTo(Gemstone.Ticks)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Ticks" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.CompareTo(System.DateTime)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.CompareTo(System.Int64)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.CompareTo(System.TimeSpan)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.DistanceBeyondSecond">
      <apidata name="DistanceBeyondSecond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Equals(Gemstone.Ticks)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Ticks" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Equals(System.DateTime)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Equals(System.Int64)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Equals(System.TimeSpan)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.FromMicroseconds(System.Double)">
      <apidata name="FromMicroseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.FromMilliseconds(System.Double)">
      <apidata name="FromMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.FromSeconds(System.Double)">
      <apidata name="FromSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.LocalTimeIsValid(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="LocalTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lagTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.LocalTimeIsValid(System.Double,System.Double)">
      <apidata name="LocalTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.MicrosecondDistribution(System.Int32)">
      <apidata name="MicrosecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.MillisecondDistribution(System.Int32)">
      <apidata name="MillisecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Addition(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_BitwiseAnd(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="BitwiseAnd" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_BitwiseOr(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="BitwiseOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Division(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Equality(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_ExclusiveOr(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="ExclusiveOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Exponent(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Ticks.op_False(Gemstone.Ticks)">
      <apidata name="False" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_GreaterThan(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_GreaterThanOrEqual(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.Int64">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.DateTime">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~System.TimeSpan">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~Gemstone.NtpTimeTag">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.NtpTimeTag" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.Ticks)~Gemstone.UnixTimeTag">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(Gemstone.TimeTagBase)~Gemstone.Ticks">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(System.DateTime)~Gemstone.Ticks">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(System.Int64)~Gemstone.Ticks">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Implicit(System.TimeSpan)~Gemstone.Ticks">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Inequality(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_LeftShift(Gemstone.Ticks,System.Int32)">
      <apidata name="LeftShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="shifts">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_LessThan(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_LessThanOrEqual(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Modulus(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Multiply(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_OnesComplement(Gemstone.Ticks)">
      <apidata name="OnesComplement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_RightShift(Gemstone.Ticks,System.Int32)">
      <apidata name="RightShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="shifts">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_Subtraction(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.op_True(Gemstone.Ticks)">
      <apidata name="True" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerDay">
      <apidata name="PerDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>864000000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerHour">
      <apidata name="PerHour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>36000000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerMicrosecond">
      <apidata name="PerMicrosecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerMillisecond">
      <apidata name="PerMillisecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>10000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerMinute">
      <apidata name="PerMinute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>600000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.PerSecond">
      <apidata name="PerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>10000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.RoundToSecondDistribution(Gemstone.Ticks,System.Double,Gemstone.Ticks)">
      <apidata name="RoundToSecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="Baseline">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.RoundToSubsecondDistribution(Gemstone.Ticks,System.Int32)">
      <apidata name="RoundToSubsecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.SubsecondDistribution(System.Int32)">
      <apidata name="SubsecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gemstone.Ticks" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="P:Gemstone.Ticks.SystemTimer">
      <apidata name="SystemTimer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SystemTimer" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.TimeIsValid(Gemstone.Ticks,Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="TimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="currentTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="lagTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.TimeIsValid(Gemstone.Ticks,System.Double,System.Double)">
      <apidata name="TimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="currentTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToDays">
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToElapsedTimeString">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToElapsedTimeString(System.Int32,System.Double)">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="secondPrecision">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToElapsedTimeString(System.Int32,System.String[],System.Double)">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="secondPrecision">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToHours">
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToMicroseconds">
      <apidata name="ToMicroseconds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToMicroseconds(Gemstone.Ticks)">
      <apidata name="ToMicroseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToMilliseconds">
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToMilliseconds(Gemstone.Ticks)">
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToMinutes">
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToSecondDistribution(Gemstone.Ticks,System.Double,Gemstone.Ticks,System.Int32)">
      <apidata name="ToSecondDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="baseline">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="tolerance">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToSeconds">
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToSeconds(Gemstone.Ticks)">
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.TryParse(System.String,Gemstone.Ticks@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Ticks" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Ticks@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Ticks" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.UtcTimeIsValid(Gemstone.Ticks,Gemstone.Ticks)">
      <apidata name="UtcTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lagTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Ticks.UtcTimeIsValid(System.Double,System.Double)">
      <apidata name="UtcTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Ticks.Value">
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Ticks.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Ticks" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.TimeTagBase">
      <apidata name="TimeTagBase" group="type" subgroup="class" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gemstone.NtpTimeTag" ref="true" />
          <type api="T:Gemstone.UnixTimeTag" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.TimeTagBase" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.TimeTagBase" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IFormattable" ref="true" />
      </implements>
      <elements>
        <element api="F:Gemstone.TimeTagBase.DefaultFormat" />
        <element api="M:Gemstone.TimeTagBase.#ctor(System.Int64,System.Decimal)" />
        <element api="M:Gemstone.TimeTagBase.#ctor(System.Int64,Gemstone.Ticks)" />
        <element api="M:Gemstone.TimeTagBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Gemstone.TimeTagBase.ToDateTime" />
        <element api="M:Gemstone.TimeTagBase.ToString" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.GetHashCode" />
        <element api="M:Gemstone.TimeTagBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Gemstone.TimeTagBase.op_Equality(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_Equality(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_Equality(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.op_Inequality(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_Inequality(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_Inequality(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThan(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThan(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThan(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThanOrEqual(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThanOrEqual(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_LessThanOrEqual(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThan(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThan(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThan(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(Gemstone.TimeTagBase,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(System.DateTime,Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(Gemstone.TimeTagBase,System.DateTime)" />
        <element api="P:Gemstone.TimeTagBase.Value" />
        <element api="P:Gemstone.TimeTagBase.BaseDateOffsetTicks" />
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.#ctor(System.Int64,Gemstone.Ticks)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <parameters>
        <parameter name="baseDateOffsetTicks">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.#ctor(System.Int64,System.Decimal)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <parameters>
        <parameter name="baseDateOffsetTicks">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="seconds">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.TimeTagBase.BaseDateOffsetTicks">
      <apidata name="BaseDateOffsetTicks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_BaseDateOffsetTicks" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.CompareTo(Gemstone.TimeTagBase)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.TimeTagBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.CompareTo(System.DateTime)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.TimeTagBase.DefaultFormat">
      <apidata name="DefaultFormat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>yyyy-MM-dd HH:mm:ss.fff</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.Equals(Gemstone.TimeTagBase)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.TimeTagBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.Equals(System.DateTime)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Equality(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Equality(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Equality(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThan(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThan(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThan(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_GreaterThanOrEqual(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Inequality(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Inequality(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_Inequality(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThan(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThan(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThan(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThanOrEqual(Gemstone.TimeTagBase,Gemstone.TimeTagBase)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThanOrEqual(Gemstone.TimeTagBase,System.DateTime)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.op_LessThanOrEqual(System.DateTime,Gemstone.TimeTagBase)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.TimeTagBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.ToDateTime">
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.TimeTagBase.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.TimeTagBase.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/TimeTagBase.cs" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.TimeTagBase" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.UnixTimeTag">
      <apidata name="UnixTimeTag" group="type" subgroup="class" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Gemstone.TimeTagBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.UnixTimeTag.BaseTicks" />
        <element api="M:Gemstone.UnixTimeTag.#ctor(System.Decimal)" />
        <element api="M:Gemstone.UnixTimeTag.#ctor(System.UInt32)" />
        <element api="M:Gemstone.UnixTimeTag.#ctor(Gemstone.Ticks)" />
        <element api="M:Gemstone.UnixTimeTag.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Gemstone.TimeTagBase.ToDateTime" />
        <element api="M:Gemstone.TimeTagBase.ToString" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.CompareTo(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.Object)" />
        <element api="M:Gemstone.TimeTagBase.Equals(Gemstone.TimeTagBase)" />
        <element api="M:Gemstone.TimeTagBase.Equals(System.DateTime)" />
        <element api="M:Gemstone.TimeTagBase.GetHashCode" />
        <element api="M:Gemstone.TimeTagBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:Gemstone.TimeTagBase.Value" />
        <element api="P:Gemstone.TimeTagBase.BaseDateOffsetTicks" />
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.UnixTimeTag.#ctor(Gemstone.Ticks)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.UnixTimeTag.#ctor(System.Decimal)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.UnixTimeTag.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.UnixTimeTag.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.UnixTimeTag.BaseTicks">
      <apidata name="BaseTicks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/UnixTimeTag.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.UnixTimeTag" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.USTimeZones">
      <apidata name="USTimeZones" group="type" subgroup="class" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Gemstone.USTimeZones.Atlantic" />
        <element api="P:Gemstone.USTimeZones.Eastern" />
        <element api="P:Gemstone.USTimeZones.Central" />
        <element api="P:Gemstone.USTimeZones.Mountain" />
        <element api="P:Gemstone.USTimeZones.Pacific" />
        <element api="P:Gemstone.USTimeZones.Alaskan" />
        <element api="P:Gemstone.USTimeZones.Hawaiian" />
        <element api="P:Gemstone.USTimeZones.WestPacific" />
        <element api="P:Gemstone.USTimeZones.Samoa" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Alaskan">
      <apidata name="Alaskan" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Alaskan" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Atlantic">
      <apidata name="Atlantic" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Atlantic" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Central">
      <apidata name="Central" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Central" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Eastern">
      <apidata name="Eastern" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Eastern" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Hawaiian">
      <apidata name="Hawaiian" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Hawaiian" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Mountain">
      <apidata name="Mountain" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mountain" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Pacific">
      <apidata name="Pacific" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Pacific" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.Samoa">
      <apidata name="Samoa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Samoa" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.USTimeZones.WestPacific">
      <apidata name="WestPacific" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/USTimeZones.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WestPacific" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.USTimeZones" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Word">
      <apidata name="Word" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Word.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Word.MakeWord(System.Byte,System.Byte)" />
        <element api="M:Gemstone.Word.MakeDoubleWord(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.Word.MakeQuadWord(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
      </containers>
    </api>
    <api id="M:Gemstone.Word.MakeDoubleWord(System.UInt16,System.UInt16)">
      <apidata name="MakeDoubleWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Word.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="high">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="low">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Word" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Word.MakeQuadWord(System.UInt32,System.UInt32)">
      <apidata name="MakeQuadWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Word.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="high">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="low">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Word" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Word.MakeWord(System.Byte,System.Byte)">
      <apidata name="MakeWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Word.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="high">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="low">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone" />
        <type api="T:Gemstone.Word" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.ActionExtensions">
      <apidata name="Gemstone.ActionExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.ActionExtensions.ActionExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.ActionExtensions.ActionExtensions">
      <apidata name="ActionExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ActionExtensions/ActionExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action,System.Int32,System.Threading.CancellationToken,System.Action{System.Exception})" />
        <element api="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action{System.Threading.CancellationToken},System.Int32,System.Threading.CancellationToken,System.Action{System.Exception})" />
        <element api="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action,System.Int32,System.Action{System.Exception})" />
        <element api="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action{System.Threading.CancellationToken},System.Int32,System.Action{System.Exception})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ActionExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action,System.Int32,System.Action{System.Exception})">
      <apidata name="DelayAndExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ActionExtensions/ActionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="delay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exceptionAction" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ActionExtensions" />
        <type api="T:Gemstone.ActionExtensions.ActionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action,System.Int32,System.Threading.CancellationToken,System.Action{System.Exception})">
      <apidata name="DelayAndExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ActionExtensions/ActionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="delay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="exceptionAction" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ActionExtensions" />
        <type api="T:Gemstone.ActionExtensions.ActionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action{System.Threading.CancellationToken},System.Int32,System.Action{System.Exception})">
      <apidata name="DelayAndExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ActionExtensions/ActionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exceptionAction" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ActionExtensions" />
        <type api="T:Gemstone.ActionExtensions.ActionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ActionExtensions.ActionExtensions.DelayAndExecute(System.Action{System.Threading.CancellationToken},System.Int32,System.Threading.CancellationToken,System.Action{System.Exception})">
      <apidata name="DelayAndExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ActionExtensions/ActionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="exceptionAction" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ActionExtensions" />
        <type api="T:Gemstone.ActionExtensions.ActionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.ArrayExtensions">
      <apidata name="Gemstone.ArrayExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.ArrayExtensions.ArrayExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.ArrayExtensions.ArrayExtensions">
      <apidata name="ArrayExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.ValidateParameters``1(``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.BlockCopy``1(``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],System.Int32,System.Int32,``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[][])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[][])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],``0[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.Byte[])" />
        <element api="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.IO.BinaryReader)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.BlockCopy``1(``0[],System.Int32,System.Int32)">
      <apidata name="BlockCopy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.BlockCopy``1(``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.BlockCopy``1(``0[],System.Int32,System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other3">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other3">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="other4">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine(System.Byte[][])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffers">
          <arrayOf rank="1">
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],System.Int32,System.Int32,``0[],System.Int32,System.Int32)">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],System.Int32,System.Int32,``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="sourceOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sourceCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="other">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],System.Int32,System.Int32,``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="otherOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="otherCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],System.Int32,System.Int32,``0[],System.Int32,System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[])" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[])" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other3">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[])" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other1">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other2">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other3">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other4">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[],``0[],``0[],``0[],``0[])" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[][])">
      <apidata name="Combine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arrays">
          <arrayOf rank="1">
            <arrayOf rank="1">
              <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[][])" />
            </arrayOf>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.Combine``1(``0[][])" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="sourceOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="other">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="otherOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],``0[])">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],``0[])" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="other">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.CompareTo``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[])">
      <apidata name="IndexOfSequence" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[])" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="sequenceToFind">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32)">
      <apidata name="IndexOfSequence" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="sequenceToFind">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32,System.Int32)">
      <apidata name="IndexOfSequence" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32,System.Int32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="sequenceToFind">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.IndexOfSequence``1(``0[],``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.Byte[])">
      <apidata name="ReadStructure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.Byte[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.IO.BinaryReader)">
      <apidata name="ReadStructure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.BinaryReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.ReadStructure``1(System.IO.BinaryReader)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ArrayExtensions.ArrayExtensions.ValidateParameters``1(``0[],System.Int32,System.Int32)">
      <apidata name="ValidateParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ArrayExtensions/ArrayExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.ArrayExtensions.ArrayExtensions.ValidateParameters``1(``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ArrayExtensions" />
        <type api="T:Gemstone.ArrayExtensions.ArrayExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.BitExtensions">
      <apidata name="Gemstone.BitExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.BitExtensions.BitExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.BitExtensions.BitExtensions">
      <apidata name="BitExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitVal(System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.SByte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Byte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.SByte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Byte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,System.SByte,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,System.Byte,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,System.Int16,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,System.UInt16,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,System.UInt32,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,System.Int64,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,Gemstone.Bits,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,System.UInt64,System.Boolean)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.SByte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Byte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.SByte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Byte,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt16,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt32,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt64,Gemstone.Bits)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.SByte,Gemstone.Bits,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.SByte,System.SByte,System.SByte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Byte,Gemstone.Bits,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Byte,System.Byte,System.Byte)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int16,Gemstone.Bits,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int16,System.Int16,System.Int16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt16,Gemstone.Bits,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt16,System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int32,Gemstone.Bits,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt32,Gemstone.Bits,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt32,System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int64,Gemstone.Bits,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int64,System.Int64,System.Int64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt64,Gemstone.Bits,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt64,System.UInt64,System.UInt64)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Byte,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.SByte,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int16,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt16,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int64,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt64,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Byte,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.SByte,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int16,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt16,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt32,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int64,System.Int32)" />
        <element api="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt64,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Byte,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int16,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int32,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.Int64,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.SByte,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt16,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt32,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotL(System.UInt64,System.Int32)">
      <apidata name="BitRotL" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Byte,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int16,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int32,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.Int64,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.SByte,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt16,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt32,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitRotR(System.UInt64,System.Int32)">
      <apidata name="BitRotR" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="rotations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.BitVal(System.Int32)">
      <apidata name="BitVal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Bits" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,System.Byte)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Byte,System.Byte,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,System.Int16)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int16,System.Int16,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,System.Int32)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int32,System.Int32,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,System.Int64)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.Int64,System.Int64,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,System.SByte)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.SByte,System.SByte,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,System.UInt16)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt16,System.UInt16,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,System.UInt32)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt32,System.UInt32,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,Gemstone.Bits)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,Gemstone.Bits,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,System.UInt64)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.CheckBits(System.UInt64,System.UInt64,System.Boolean)">
      <apidata name="CheckBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="allBits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Byte,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Byte,System.Byte)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int16,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int16,System.Int16)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int32,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int32,System.Int32)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int64,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.Int64,System.Int64)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.SByte,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.SByte,System.SByte)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt16,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt16,System.UInt16)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt32,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt32,System.UInt32)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt64,Gemstone.Bits)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ClearBits(System.UInt64,System.UInt64)">
      <apidata name="ClearBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Byte,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Byte,System.Byte)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int16,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int16,System.Int16)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int32,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int32,System.Int32)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int64,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.Int64,System.Int64)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.SByte,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.SByte,System.SByte)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt16,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt16,System.UInt16)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt32,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt32,System.UInt32)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt64,Gemstone.Bits)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.GetMaskedValue(System.UInt64,System.UInt64)">
      <apidata name="GetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Byte,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Byte,System.Byte)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int16,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int16,System.Int16)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int32,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int32,System.Int32)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int64,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.Int64,System.Int64)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.SByte,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.SByte,System.SByte)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt16,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt16,System.UInt16)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt32,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt32,System.UInt32)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt64,Gemstone.Bits)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetBits(System.UInt64,System.UInt64)">
      <apidata name="SetBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Byte,Gemstone.Bits,System.Byte)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Byte,System.Byte,System.Byte)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int16,Gemstone.Bits,System.Int16)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int16,System.Int16,System.Int16)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int32,Gemstone.Bits,System.Int32)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int32,System.Int32,System.Int32)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int64,Gemstone.Bits,System.Int64)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.Int64,System.Int64,System.Int64)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.SByte,Gemstone.Bits,System.SByte)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.SByte,System.SByte,System.SByte)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt16,Gemstone.Bits,System.UInt16)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt16,System.UInt16,System.UInt16)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt32,Gemstone.Bits,System.UInt32)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt32,System.UInt32,System.UInt32)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt64,Gemstone.Bits,System.UInt64)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.SetMaskedValue(System.UInt64,System.UInt64,System.UInt64)">
      <apidata name="SetMaskedValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bitmask">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Byte,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Byte,System.Byte)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int16,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int16,System.Int16)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int32,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int32,System.Int32)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int64,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.Int64,System.Int64)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.SByte,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.SByte,System.SByte)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt16,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt16,System.UInt16)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt32,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt32,System.UInt32)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt64,Gemstone.Bits)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:Gemstone.Bits" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.BitExtensions.BitExtensions.ToggleBits(System.UInt64,System.UInt64)">
      <apidata name="ToggleBits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/BitExtensions/BitExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="bits">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.BitExtensions" />
        <type api="T:Gemstone.BitExtensions.BitExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.CharExtensions">
      <apidata name="Gemstone.CharExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.CharExtensions.CharExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.CharExtensions.CharExtensions">
      <apidata name="CharExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.CharExtensions.CharExtensions.RegexEncode(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.IsWordTerminator(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.IsNumeric(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.IsAnyOf(System.Char,System.Collections.Generic.IEnumerable{System.Char})" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.IsInRange(System.Char,System.Char,System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.ToLower(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.ToUpper(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.IsHex(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.ConvertHexToInt(System.Char)" />
        <element api="M:Gemstone.CharExtensions.CharExtensions.ConvertHexToBitArray(System.Char)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.ConvertHexToBitArray(System.Char)">
      <apidata name="ConvertHexToBitArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.BitArray" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.ConvertHexToInt(System.Char)">
      <apidata name="ConvertHexToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.IsAnyOf(System.Char,System.Collections.Generic.IEnumerable{System.Char})">
      <apidata name="IsAnyOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="testChars">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.IsHex(System.Char)">
      <apidata name="IsHex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.IsInRange(System.Char,System.Char,System.Char)">
      <apidata name="IsInRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startOfRange">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="endOfRange">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.IsNumeric(System.Char)">
      <apidata name="IsNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.IsWordTerminator(System.Char)">
      <apidata name="IsWordTerminator" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.RegexEncode(System.Char)">
      <apidata name="RegexEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.ToLower(System.Char)">
      <apidata name="ToLower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.CharExtensions.CharExtensions.ToUpper(System.Char)">
      <apidata name="ToUpper" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/CharExtensions/CharExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.CharExtensions" />
        <type api="T:Gemstone.CharExtensions.CharExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Collections">
      <apidata name="Gemstone.Collections" group="namespace" />
      <elements>
        <element api="T:Gemstone.Collections.IPagedList" />
        <element api="T:Gemstone.Collections.PagedList`1" />
      </elements>
    </api>
    <api id="T:Gemstone.Collections.IPagedList">
      <apidata name="IPagedList" group="type" subgroup="interface" />
      <sourceContext file="Gemstone/Collections/IPagedList.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </implementors>
      <elements>
        <element api="P:Gemstone.Collections.IPagedList.TotalCount" />
        <element api="P:Gemstone.Collections.IPagedList.PageCount" />
        <element api="P:Gemstone.Collections.IPagedList.Page" />
        <element api="P:Gemstone.Collections.IPagedList.PageSize" />
        <element api="M:System.Collections.IList.Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.IList.IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.IList.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.IList.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ICollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ICollection.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ICollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ICollection.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ICollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ICollection.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ICollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.DispIdAttribute" ref="true" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-4</value>
              </argument>
            </attribute>
          </attributes>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.IPagedList.Page">
      <apidata name="Page" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/IPagedList.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Page" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.IPagedList" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.IPagedList.PageCount">
      <apidata name="PageCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/IPagedList.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PageCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.IPagedList" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.IPagedList.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/IPagedList.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.IPagedList" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.IPagedList.TotalCount">
      <apidata name="TotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/IPagedList.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TotalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.IPagedList" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Collections.PagedList`1">
      <apidata name="PagedList" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gemstone.Collections.IPagedList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gemstone.Collections.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)" />
        <element api="P:Gemstone.Collections.PagedList`1.TotalCount" />
        <element api="P:Gemstone.Collections.PagedList`1.PageCount" />
        <element api="P:Gemstone.Collections.PagedList`1.Page" />
        <element api="P:Gemstone.Collections.PagedList`1.PageSize" />
        <element api="M:System.Collections.Generic.List`1.Add(`0)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AsReadOnly">
          <apidata name="AsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Contains(`0)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <apidata name="ConvertAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TOutput" />
          </templates>
          <parameters>
            <parameter name="converter">
              <type api="T:System.Converter`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                  <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <apidata name="Exists" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <apidata name="FindAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <apidata name="FindLast" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <apidata name="ForEach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.List`1.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <apidata name="RemoveAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparison">
              <type api="T:System.Comparison`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrimExcess">
          <apidata name="TrimExcess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <apidata name="TrueForAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity" />
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
              <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="RemoveWhere" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
          </templates>
          <parameters>
            <parameter name="shouldRemove">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.Collections.CollectionExtensions" />
            <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
      </containers>
    </api>
    <api id="M:Gemstone.Collections.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gemstone.Collections.PagedList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.PagedList`1.Page">
      <apidata name="Page" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Page" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Collections.IPagedList.Page">
          <type api="T:Gemstone.Collections.IPagedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.PagedList`1.PageCount">
      <apidata name="PageCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_PageCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Collections.IPagedList.PageCount">
          <type api="T:Gemstone.Collections.IPagedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.PagedList`1.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Collections.IPagedList.PageSize">
          <type api="T:Gemstone.Collections.IPagedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Collections.PagedList`1.TotalCount">
      <apidata name="TotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Collections/PagedList.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TotalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Collections.IPagedList.TotalCount">
          <type api="T:Gemstone.Collections.IPagedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections" />
        <type api="T:Gemstone.Collections.PagedList`1" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.Collections.CollectionExtensions">
      <apidata name="Gemstone.Collections.CollectionExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions">
      <apidata name="CollectionExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDictionary(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Any(System.Collections.BitArray,System.Boolean)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.All(System.Collections.BitArray,System.Boolean)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AllParallel``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.Tasks.ParallelOptions)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Median``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.UpdateRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Copy``1(``0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.Char)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.String)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Func{System.String,``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Char,System.Func{System.String,``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.String[],System.Func{System.String,``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0})" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0},System.Int32)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Unscramble``1(System.Collections.Generic.IList{``0},System.Int32)" />
        <element api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.CompareTo``1(``0[],``0[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        </parameter>
        <parameter name="valueFactory">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
        </parameter>
        <parameter name="addValueFactory">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="updateValueFactory">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})">
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
        </parameter>
        <parameter name="addValue">
          <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
        </parameter>
        <parameter name="updateValueFactory">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.All(System.Collections.BitArray,System.Boolean)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.BitArray" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AllParallel``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.Tasks.ParallelOptions)">
      <apidata name="AllParallel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AllParallel``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.Tasks.ParallelOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.AllParallel``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.Tasks.ParallelOptions)" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Any(System.Collections.BitArray,System.Boolean)">
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.BitArray" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.CompareTo``1(``0[],``0[],System.Boolean)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="array1">
          <arrayOf rank="1">
            <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.CompareTo``1(``0[],``0[],System.Boolean)" />
          </arrayOf>
        </parameter>
        <parameter name="array2">
          <arrayOf rank="1">
            <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.CompareTo``1(``0[],``0[],System.Boolean)" />
          </arrayOf>
        </parameter>
        <parameter name="orderIsImportant" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Copy``1(``0[],System.Int32,System.Int32)">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Copy``1(``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Copy``1(``0[],System.Int32,System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)">
      <apidata name="DistinctBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
      <apidata name="GetOrAdd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        </parameter>
        <parameter name="valueFactory">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
      <apidata name="GetOrAdd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
      <apidata name="GetOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
      <apidata name="GetOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
        </parameter>
        <parameter name="defaultValueFactory">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
              <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)">
      <apidata name="GetRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.GetRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Char,System.Func{System.String,``0})">
      <apidata name="LoadDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="destination">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Char,System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delimitedString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="convertFromString">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Char,System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Func{System.String,``0})">
      <apidata name="LoadDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="destination">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delimitedString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="convertFromString">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.String[],System.Func{System.String,``0})">
      <apidata name="LoadDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="destination">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.String[],System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delimitedString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiters">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="convertFromString">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.LoadDelimitedString``1(System.Collections.Generic.IList{``0},System.String,System.String[],System.Func{System.String,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
      <apidata name="Majority" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
      <apidata name="Majority" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Majority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})">
      <apidata name="MajorityBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})">
      <apidata name="MajorityBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MajorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})">
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <apidata name="MaxBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Median``1(System.Collections.Generic.IEnumerable{``0})">
      <apidata name="Median" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Median``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Median``1(System.Collections.Generic.IEnumerable{``0})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])">
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
                  <template name="TValue" index="2" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
        </parameter>
        <parameter name="overwriteExisting">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="others" params="true">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
                <template name="TValue" index="2" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Boolean,System.Collections.Generic.IDictionary{``1,``2}[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])">
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
                  <template name="TValue" index="2" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
        </parameter>
        <parameter name="others" params="true">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
                <template name="TValue" index="2" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Merge``3(``0,System.Collections.Generic.IDictionary{``1,``2}[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})">
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Int32})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <apidata name="MinBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
      <apidata name="Minority" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})">
      <apidata name="Minority" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Minority``1(System.Collections.Generic.IEnumerable{``0},``0,System.Boolean,System.Collections.Generic.IEqualityComparer{``0})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})">
      <apidata name="MinorityBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})">
      <apidata name="MinorityBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="forwardSearch" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="comparer" optional="true">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.MinorityBy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Boolean,System.Collections.Generic.IEqualityComparer{``1})" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})">
      <apidata name="RemoveWhere" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="shouldRemove">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0})">
      <apidata name="Scramble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0},System.Int32)">
      <apidata name="Scramble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Scramble``1(System.Collections.Generic.IList{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0})">
      <apidata name="ToDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.Char)">
      <apidata name="ToDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.Char)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <apidata name="ToDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDelimitedString``1(System.Collections.Generic.IEnumerable{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToDictionary(System.Collections.Specialized.NameValueCollection)">
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)">
      <apidata name="ToPagedList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Collections.PagedList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Unscramble``1(System.Collections.Generic.IList{``0},System.Int32)">
      <apidata name="Unscramble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.Unscramble``1(System.Collections.Generic.IList{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.UpdateRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEnumerable{``0})">
      <apidata name="UpdateRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Collections/CollectionExtensions/CollectionExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.UpdateRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gemstone.Collections.CollectionExtensions.CollectionExtensions.UpdateRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Collections.CollectionExtensions" />
        <type api="T:Gemstone.Collections.CollectionExtensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.ComponentModel.DataAnnotations">
      <apidata name="Gemstone.ComponentModel.DataAnnotations" group="namespace" />
      <elements>
        <element api="T:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.LabelAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute" />
        <element api="T:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute" />
      </elements>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute">
      <apidata name="AcronymValidationAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/AcronymValidationAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.ValidationPattern" />
        <element api="F:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.DefaultErrorMessage" />
        <element api="M:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.#ctor" />
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <apidata name="FormatErrorMessage" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <apidata name="IsValid" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
          <apidata name="MatchTimeoutInMilliseconds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MatchTimeoutInMilliseconds" />
          <setter name="set_MatchTimeoutInMilliseconds" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
          <apidata name="Pattern" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Pattern" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="GetValidationResult" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
          <apidata name="ErrorMessage" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessage" />
          <setter name="set_ErrorMessage" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
          <apidata name="ErrorMessageResourceName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceName" />
          <setter name="set_ErrorMessageResourceName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
          <apidata name="ErrorMessageResourceType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceType" />
          <setter name="set_ErrorMessageResourceType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
          <apidata name="RequiresValidationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_RequiresValidationContext" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
              <field name="Parameter" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/AcronymValidationAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.DefaultErrorMessage">
      <apidata name="DefaultErrorMessage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/AcronymValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Only upper case letters, numbers, '!', '-', '@', '#', '_' , '.' and '$' are allowed.</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute.ValidationPattern">
      <apidata name="ValidationPattern" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/AcronymValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>^[A-Z0-9\-!_\.@#\$]+$</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.AcronymValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute">
      <apidata name="EmailValidationAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/EmailValidationAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.ValidationPattern" />
        <element api="F:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.DefaultErrorMessage" />
        <element api="M:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.#ctor" />
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <apidata name="FormatErrorMessage" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <apidata name="IsValid" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
          <apidata name="MatchTimeoutInMilliseconds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MatchTimeoutInMilliseconds" />
          <setter name="set_MatchTimeoutInMilliseconds" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
          <apidata name="Pattern" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Pattern" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="GetValidationResult" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
          <apidata name="ErrorMessage" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessage" />
          <setter name="set_ErrorMessage" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
          <apidata name="ErrorMessageResourceName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceName" />
          <setter name="set_ErrorMessageResourceName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
          <apidata name="ErrorMessageResourceType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceType" />
          <setter name="set_ErrorMessageResourceType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
          <apidata name="RequiresValidationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_RequiresValidationContext" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
              <field name="Parameter" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/EmailValidationAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.DefaultErrorMessage">
      <apidata name="DefaultErrorMessage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/EmailValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Invalid e-mail address.</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute.ValidationPattern">
      <apidata name="ValidationPattern" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/EmailValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.EmailValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute">
      <apidata name="InitialValueScriptAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/InitialValueScriptAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute.InitialValueScript" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/InitialValueScriptAttribute.cs" />
      <parameters>
        <parameter name="initialValueScript">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute.InitialValueScript">
      <apidata name="InitialValueScript" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/InitialValueScriptAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitialValueScript" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.InitialValueScriptAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute">
      <apidata name="IsDeletedFlagAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/IsDeletedFlagAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute.FieldName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/IsDeletedFlagAttribute.cs" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute.FieldName">
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/IsDeletedFlagAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.IsDeletedFlagAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.LabelAttribute">
      <apidata name="LabelAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/LabelAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ComponentModel.DataAnnotations.LabelAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.ComponentModel.DataAnnotations.LabelAttribute.Label" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.LabelAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/LabelAttribute.cs" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.LabelAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.ComponentModel.DataAnnotations.LabelAttribute.Label">
      <apidata name="Label" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/LabelAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Label" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.LabelAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute">
      <apidata name="PrimaryLabelAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/PrimaryLabelAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute.FieldName" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/PrimaryLabelAttribute.cs" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute.FieldName">
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/PrimaryLabelAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.PrimaryLabelAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute">
      <apidata name="UrlValidationAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/UrlValidationAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.ValidationPattern" />
        <element api="F:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.DefaultErrorMessage" />
        <element api="M:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.#ctor" />
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <apidata name="FormatErrorMessage" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <apidata name="IsValid" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
          <apidata name="MatchTimeoutInMilliseconds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MatchTimeoutInMilliseconds" />
          <setter name="set_MatchTimeoutInMilliseconds" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
          <apidata name="Pattern" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Pattern" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="GetValidationResult" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="validationContext">
              <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
          <apidata name="Validate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
          <apidata name="ErrorMessage" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessage" />
          <setter name="set_ErrorMessage" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
          <apidata name="ErrorMessageResourceName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceName" />
          <setter name="set_ErrorMessageResourceName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
          <apidata name="ErrorMessageResourceType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ErrorMessageResourceType" />
          <setter name="set_ErrorMessageResourceType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
          <apidata name="RequiresValidationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_RequiresValidationContext" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Annotations" module="System.ComponentModel.Annotations" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.DataAnnotations" />
            <type api="T:System.ComponentModel.DataAnnotations.ValidationAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
              <field name="Parameter" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/UrlValidationAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.DefaultErrorMessage">
      <apidata name="DefaultErrorMessage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/UrlValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Invalid URL.</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute.ValidationPattern">
      <apidata name="ValidationPattern" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/ComponentModel/DataAnnotations/UrlValidationAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>^(?:(?:[a-zA-Z][a-zA-Z0-9.+-]*:\/\/)?[a-zA-Z0-9][a-zA-Z0-9.-]*(?::[0-9]+)?(?:\/[^ "]*)?|mailto:[a-zA-Z0-9!#$%&amp;'*+-\/=?^_`{|}~][a-zA-Z0-9!#$%&amp;'*+-\/=?^_`{|}~.]*@[a-zA-Z0-9][a-zA-Z0-9.-]*)$</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.ComponentModel.DataAnnotations" />
        <type api="T:Gemstone.ComponentModel.DataAnnotations.UrlValidationAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.Console">
      <apidata name="Gemstone.Console" group="namespace" />
      <elements>
        <element api="T:Gemstone.Console.Command" />
        <element api="T:Gemstone.Console.CommandException" />
        <element api="T:Gemstone.Console.CommandResponse" />
      </elements>
    </api>
    <api id="T:Gemstone.Console.Command">
      <apidata name="Command" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Console.Command.Execute(System.String,System.String,System.Int32)" />
        <element api="M:Gemstone.Console.Command.Execute(System.String,System.String,System.String@,System.String@,System.Int32@)" />
        <element api="M:Gemstone.Console.Command.Execute(System.String,System.String,System.String@,System.String@,System.Boolean@,System.Int32@,System.Int32)" />
        <element api="M:Gemstone.Console.Command.ShellEncode(System.String)" />
        <element api="M:Gemstone.Console.Command.ShellDecode(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Console.Command.Execute(System.String,System.String,System.Int32)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Console.CommandResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.Command" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.Command.Execute(System.String,System.String,System.String@,System.String@,System.Boolean@,System.Int32@,System.Int32)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standardOutput" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="standardError" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="processCompleted" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="exitCode" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.Command" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.Command.Execute(System.String,System.String,System.String@,System.String@,System.Int32@)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standardOutput" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="standardError" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="exitCode" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.Command" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.Command.ShellDecode(System.String)">
      <apidata name="ShellDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.Command" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Console.Command.ShellEncode(System.String)">
      <apidata name="ShellEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Console/Command.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.Command" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gemstone.Console.CommandException">
      <apidata name="CommandException" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Console/CommandException.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Console.CommandException.#ctor" />
        <element api="M:Gemstone.Console.CommandException.#ctor(System.String,System.Boolean,System.Int32,System.Exception)" />
        <element api="P:Gemstone.Console.CommandException.ProcessCompleted" />
        <element api="P:Gemstone.Console.CommandException.ExitCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.CommandException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Console/CommandException.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandException" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.CommandException.#ctor(System.String,System.Boolean,System.Int32,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Console/CommandException.cs" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="processCompleted">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="exitCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="innerException" optional="true">
          <type api="T:System.Exception" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandException" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Console.CommandException.ExitCode">
      <apidata name="ExitCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Console/CommandException.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExitCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandException" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Console.CommandException.ProcessCompleted">
      <apidata name="ProcessCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Console/CommandException.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProcessCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandException" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Console.CommandResponse">
      <apidata name="CommandResponse" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Console/CommandResponse.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Console.CommandResponse.#ctor(System.String,System.Int32)" />
        <element api="P:Gemstone.Console.CommandResponse.StandardOutput" />
        <element api="P:Gemstone.Console.CommandResponse.ExitCode" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
      </containers>
    </api>
    <api id="M:Gemstone.Console.CommandResponse.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Console/CommandResponse.cs" />
      <parameters>
        <parameter name="standardOutput">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exitCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Console.CommandResponse.ExitCode">
      <apidata name="ExitCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Console/CommandResponse.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExitCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Console.CommandResponse.StandardOutput">
      <apidata name="StandardOutput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Console/CommandResponse.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StandardOutput" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Console" />
        <type api="T:Gemstone.Console.CommandResponse" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.DateTimeExtensions">
      <apidata name="Gemstone.DateTimeExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.DateTimeExtensions.DateTimeExtensions">
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UtcTimeIsValid(System.DateTime,System.Double,System.Double)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeIsValid(System.DateTime,System.Double,System.Double)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeIsValid(System.DateTime,System.DateTime,System.Double,System.Double)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.DistanceBeyondSecond(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.BaselinedTimestamp(System.DateTime,Gemstone.BaselineTimeInterval)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToEasternTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToCentralTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToMountainTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToPacificTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToUniversalTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeTo(System.DateTime,System.String)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeTo(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToEasternTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToCentralTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToMountainTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToPacificTime(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeTo(System.DateTime,System.String)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeTo(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeZoneToTimeZone(System.DateTime,System.String,System.String)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeZoneToTimeZone(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.AbbreviatedMonthName(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.MonthName(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.AbbreviatedWeekdayName(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.ShortWeekdayName(System.DateTime)" />
        <element api="M:Gemstone.DateTimeExtensions.DateTimeExtensions.WeekdayName(System.DateTime)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.AbbreviatedMonthName(System.DateTime)">
      <apidata name="AbbreviatedMonthName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.AbbreviatedWeekdayName(System.DateTime)">
      <apidata name="AbbreviatedWeekdayName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.BaselinedTimestamp(System.DateTime,Gemstone.BaselineTimeInterval)">
      <apidata name="BaselinedTimestamp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="interval">
          <type api="T:Gemstone.BaselineTimeInterval" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.DistanceBeyondSecond(System.DateTime)">
      <apidata name="DistanceBeyondSecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeIsValid(System.DateTime,System.Double,System.Double)">
      <apidata name="LocalTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeTo(System.DateTime,System.String)">
      <apidata name="LocalTimeTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZoneStandardName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeTo(System.DateTime,System.TimeZoneInfo)">
      <apidata name="LocalTimeTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToCentralTime(System.DateTime)">
      <apidata name="LocalTimeToCentralTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToEasternTime(System.DateTime)">
      <apidata name="LocalTimeToEasternTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToMountainTime(System.DateTime)">
      <apidata name="LocalTimeToMountainTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToPacificTime(System.DateTime)">
      <apidata name="LocalTimeToPacificTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.LocalTimeToUniversalTime(System.DateTime)">
      <apidata name="LocalTimeToUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.MonthName(System.DateTime)">
      <apidata name="MonthName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.ShortWeekdayName(System.DateTime)">
      <apidata name="ShortWeekdayName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeIsValid(System.DateTime,System.DateTime,System.Double,System.Double)">
      <apidata name="TimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="testTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="currentTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeZoneToTimeZone(System.DateTime,System.String,System.String)">
      <apidata name="TimeZoneToTimeZone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="sourceTimeZoneStandardName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationTimeZoneStandardName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.TimeZoneToTimeZone(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <apidata name="TimeZoneToTimeZone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="sourceTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeTo(System.DateTime,System.String)">
      <apidata name="UniversalTimeTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZoneStandardName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeTo(System.DateTime,System.TimeZoneInfo)">
      <apidata name="UniversalTimeTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToCentralTime(System.DateTime)">
      <apidata name="UniversalTimeToCentralTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToEasternTime(System.DateTime)">
      <apidata name="UniversalTimeToEasternTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToMountainTime(System.DateTime)">
      <apidata name="UniversalTimeToMountainTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UniversalTimeToPacificTime(System.DateTime)">
      <apidata name="UniversalTimeToPacificTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="universalTimestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.UtcTimeIsValid(System.DateTime,System.Double,System.Double)">
      <apidata name="UtcTimeIsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="utcTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lagTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="leadTime">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.DateTimeExtensions.DateTimeExtensions.WeekdayName(System.DateTime)">
      <apidata name="WeekdayName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/DateTimeExtensions/DateTimeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timestamp">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.DateTimeExtensions" />
        <type api="T:Gemstone.DateTimeExtensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.EnumExtensions">
      <apidata name="Gemstone.EnumExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.EnumExtensions.EnumExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.EnumExtensions.EnumExtensions">
      <apidata name="EnumExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetDescription(System.Enum)" />
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" />
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueByDescription(System.String,System.Type,System.Boolean)" />
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueByName(System.String,System.Type,System.Boolean)" />
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetFormattedName(System.Enum)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetDescription(System.Enum)">
      <apidata name="GetDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumeration">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueByDescription(System.String,System.Type,System.Boolean)">
      <apidata name="GetEnumValueByDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ignoreCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueByName(System.String,System.Type,System.Boolean)">
      <apidata name="GetEnumValueByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ignoreCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)">
      <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)">
      <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EnumExtensions.EnumExtensions.GetFormattedName(System.Enum)">
      <apidata name="GetFormattedName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EnumExtensions/EnumExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumeration">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EnumExtensions" />
        <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.EventHandlerExtensions">
      <apidata name="Gemstone.EventHandlerExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions">
      <apidata name="EventHandlerExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0,System.Boolean)" />
        <element api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception},System.Object,``0,System.Boolean)" />
        <element api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
        <element api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception},System.Object,``0,System.Boolean)" />
        <element api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception},System.Object,``0,System.Boolean)">
      <apidata name="SafeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEventArgs" />
      </templates>
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception},System.Object,``0,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exceptionHandler">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception},System.Object,``0,System.Boolean)" />
        </parameter>
        <parameter name="parallel" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
        <type api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)">
      <apidata name="SafeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEventArgs" />
      </templates>
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exceptionHandler">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
              <type api="T:System.EventHandler`1" ref="true">
                <specialization>
                  <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
        </parameter>
        <parameter name="parallel" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
        <type api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception},System.Object,``0,System.Boolean)">
      <apidata name="SafeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEventArgs" />
      </templates>
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception},System.Object,``0,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="eventLock">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="exceptionHandler">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception},System.Object,``0,System.Boolean)" />
        </parameter>
        <parameter name="parallel" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
        <type api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)">
      <apidata name="SafeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEventArgs" />
      </templates>
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="eventLock">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="exceptionHandler">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
              <type api="T:System.EventHandler`1" ref="true">
                <specialization>
                  <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,System.Action{System.Exception,System.EventHandler{``0}},System.Object,``0,System.Boolean)" />
        </parameter>
        <parameter name="parallel" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
        <type api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0,System.Boolean)">
      <apidata name="SafeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/EventHandlerExtensions/EventHandlerExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEventArgs" />
      </templates>
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <template name="TEventArgs" index="0" api="M:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0,System.Boolean)" />
        </parameter>
        <parameter name="parallel" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.EventHandlerExtensions" />
        <type api="T:Gemstone.EventHandlerExtensions.EventHandlerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.GuidExtensions">
      <apidata name="Gemstone.GuidExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.GuidExtensions.GuidExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.GuidExtensions.GuidExtensions">
      <apidata name="GuidExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid,System.Byte*)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte[])" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte*)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianBytes(System.Guid)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.CopyLittleEndianBytes(System.Guid,System.Byte[],System.Int32)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.CopyLittleEndianBytes(System.Guid,System.Byte*)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte[])" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte[],System.Int32)" />
        <element api="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte*)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.CopyLittleEndianBytes(System.Guid,System.Byte*)">
      <apidata name="CopyLittleEndianBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.CopyLittleEndianBytes(System.Guid,System.Byte[],System.Int32)">
      <apidata name="CopyLittleEndianBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianBytes(System.Guid)">
      <apidata name="ToLittleEndianBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte*)">
      <apidata name="ToLittleEndianGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte[])">
      <apidata name="ToLittleEndianGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToLittleEndianGuid(System.Byte[],System.Int32)">
      <apidata name="ToLittleEndianGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid)">
      <apidata name="ToRfcBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid,System.Byte*)">
      <apidata name="ToRfcBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcBytes(System.Guid,System.Byte[],System.Int32)">
      <apidata name="ToRfcBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte*)">
      <apidata name="ToRfcGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <pointerTo>
            <type api="T:System.Byte" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte[])">
      <apidata name="ToRfcGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.GuidExtensions.GuidExtensions.ToRfcGuid(System.Byte[],System.Int32)">
      <apidata name="ToRfcGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/GuidExtensions/GuidExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.GuidExtensions" />
        <type api="T:Gemstone.GuidExtensions.GuidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Identity">
      <apidata name="Gemstone.Identity" group="namespace" />
      <elements>
        <element api="T:Gemstone.Identity.UserInfo" />
      </elements>
    </api>
    <api id="T:Gemstone.Identity.UserInfo">
      <apidata name="UserInfo" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Identity.UserInfo.#ctor(System.String)" />
        <element api="P:Gemstone.Identity.UserInfo.Domain" />
        <element api="P:Gemstone.Identity.UserInfo.UserName" />
        <element api="P:Gemstone.Identity.UserInfo.LoginID" />
        <element api="P:Gemstone.Identity.UserInfo.LdapID" />
        <element api="P:Gemstone.Identity.UserInfo.CurrentUserID" />
        <element api="P:Gemstone.Identity.UserInfo.CurrentUserInfo" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
      </containers>
    </api>
    <api id="M:Gemstone.Identity.UserInfo.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <parameters>
        <parameter name="loginID">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.CurrentUserID">
      <apidata name="CurrentUserID" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentUserID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.CurrentUserInfo">
      <apidata name="CurrentUserInfo" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentUserInfo" />
      <returns>
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.Domain">
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.LdapID">
      <apidata name="LdapID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LdapID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.LoginID">
      <apidata name="LoginID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoginID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Identity.UserInfo.UserName">
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Identity/UserInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Identity" />
        <type api="T:Gemstone.Identity.UserInfo" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.IO">
      <apidata name="Gemstone.IO" group="namespace" />
      <elements>
        <element api="T:Gemstone.IO.BlockAllocatedMemoryStream" />
        <element api="T:Gemstone.IO.FilePath" />
      </elements>
    </api>
    <api id="T:Gemstone.IO.BlockAllocatedMemoryStream">
      <apidata name="BlockAllocatedMemoryStream" group="type" subgroup="class" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Byte[])" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Int32)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Dispose(System.Boolean)" />
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Clear" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.SetLength(System.Int64)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.ReadByte" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.WriteByte(System.Byte)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.ToArray" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.ReadFrom(System.IO.Stream,System.Int64)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.WriteTo(System.IO.Stream)" />
        <element api="M:Gemstone.IO.BlockAllocatedMemoryStream.Flush" />
        <element api="P:Gemstone.IO.BlockAllocatedMemoryStream.CanRead" />
        <element api="P:Gemstone.IO.BlockAllocatedMemoryStream.CanSeek" />
        <element api="P:Gemstone.IO.BlockAllocatedMemoryStream.CanWrite" />
        <element api="P:Gemstone.IO.BlockAllocatedMemoryStream.Length" />
        <element api="P:Gemstone.IO.BlockAllocatedMemoryStream.Position" />
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.FlushAsync">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Do not call or override this method.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream,System.Int64,System.Byte[])" source="extension">
          <apidata name="CopyTo" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="length">
              <type api="T:System.Int64" ref="false" />
            </parameter>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStream(System.IO.Stream)" source="extension">
          <apidata name="ReadStream" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteObject(System.IO.Stream,System.Object)" source="extension">
          <apidata name="WriteObject" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadObject(System.IO.Stream)" source="extension">
          <apidata name="ReadObject" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNextByte(System.IO.Stream)" source="extension">
          <apidata name="ReadNextByte" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Byte" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBoolean(System.IO.Stream)" source="extension">
          <apidata name="ReadBoolean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Boolean)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.SByte)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.SByte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSByte(System.IO.Stream)" source="extension">
          <apidata name="ReadSByte" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.SByte" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int16)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Int16" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt16)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.UInt16" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Char)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Char" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt16(System.IO.Stream)" source="extension">
          <apidata name="ReadInt16" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Int16" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt16(System.IO.Stream)" source="extension">
          <apidata name="ReadUInt16" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.UInt16" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadChar(System.IO.Stream)" source="extension">
          <apidata name="ReadChar" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Char" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int32)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt32)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Single)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Single" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32(System.IO.Stream)" source="extension">
          <apidata name="ReadInt32" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt32(System.IO.Stream)" source="extension">
          <apidata name="ReadUInt32" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.UInt32" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSingle(System.IO.Stream)" source="extension">
          <apidata name="ReadSingle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int64)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Int64" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt64)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.UInt64" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Double)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Double" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.DateTime)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt64(System.IO.Stream)" source="extension">
          <apidata name="ReadInt64" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDouble(System.IO.Stream)" source="extension">
          <apidata name="ReadDouble" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt64(System.IO.Stream)" source="extension">
          <apidata name="ReadUInt64" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.UInt64" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDateTime(System.IO.Stream)" source="extension">
          <apidata name="ReadDateTime" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.DateTime" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Decimal)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Decimal" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Guid)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Guid" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDecimal(System.IO.Stream)" source="extension">
          <apidata name="ReadDecimal" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadGuid(System.IO.Stream)" source="extension">
          <apidata name="ReadGuid" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte[])" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteWithLength(System.IO.Stream,System.Byte[])" source="extension">
          <apidata name="WriteWithLength" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream)" source="extension">
          <apidata name="ReadBytes" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream,System.Int32)" source="extension">
          <apidata name="ReadBytes" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="length">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadAll(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" source="extension">
          <apidata name="ReadAll" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="position">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="length">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.String)" source="extension">
          <apidata name="Write" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.String})" source="extension">
          <apidata name="WriteCollection" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.Int32})" source="extension">
          <apidata name="WriteCollection" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteNullable(System.IO.Stream,System.String)" source="extension">
          <apidata name="WriteNullable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Read7BitUInt32(System.IO.Stream)" source="extension">
          <apidata name="Read7BitUInt32" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.UInt32" ref="false" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadString(System.IO.Stream)" source="extension">
          <apidata name="ReadString" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNullableString(System.IO.Stream)" source="extension">
          <apidata name="ReadNullableString" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStringCollection(System.IO.Stream)" source="extension">
          <apidata name="ReadStringCollection" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32Collection(System.IO.Stream)" source="extension">
          <apidata name="ReadInt32Collection" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.IO.StreamExtensions" />
            <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.IO.BlockAllocatedMemoryStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.IO.BlockAllocatedMemoryStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.IO.BlockAllocatedMemoryStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.IO.BlockAllocatedMemoryStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.IO.BlockAllocatedMemoryStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.ReadByte">
      <apidata name="ReadByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.ReadByte">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.ReadFrom(System.IO.Stream,System.Int64)">
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.ToArray">
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.WriteByte(System.Byte)">
      <apidata name="WriteByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.WriteByte(System.Byte)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.BlockAllocatedMemoryStream.WriteTo(System.IO.Stream)">
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/IO/BlockAllocatedMemoryStream.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.BlockAllocatedMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.IO.FilePath">
      <apidata name="FilePath" group="type" subgroup="class" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.IO.FilePath.GetAvailableFreeSpace(System.String,System.Int64@,System.Int64@)" />
        <element api="M:Gemstone.IO.FilePath.InApplicationPath(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetCommonApplicationDataFolder" />
        <element api="M:Gemstone.IO.FilePath.GetApplicationDataFolder" />
        <element api="M:Gemstone.IO.FilePath.GetAbsolutePath(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetUniqueFilePath(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetUniqueFilePathWithBinarySearch(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetDirectories(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})" />
        <element api="M:Gemstone.IO.FilePath.EnumerateDirectories(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})" />
        <element api="M:Gemstone.IO.FilePath.GetFiles(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})" />
        <element api="M:Gemstone.IO.FilePath.EnumerateFiles(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})" />
        <element api="M:Gemstone.IO.FilePath.ValidatePathName(System.String)" />
        <element api="M:Gemstone.IO.FilePath.IsFilePatternMatch(System.String[],System.String,System.Boolean)" />
        <element api="M:Gemstone.IO.FilePath.IsFilePatternMatch(System.String,System.String,System.Boolean)" />
        <element api="M:Gemstone.IO.FilePath.IsValidFileName(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetValidFileName(System.String,System.Char)" />
        <element api="M:Gemstone.IO.FilePath.GetValidFilePath(System.String,System.Char)" />
        <element api="M:Gemstone.IO.FilePath.GetFileName(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetExtension(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetFileNameWithoutExtension(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetFileLength(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetFileList(System.String,System.Action{System.Exception})" />
        <element api="M:Gemstone.IO.FilePath.GetFilePatternRegularExpression(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetDirectoryName(System.String)" />
        <element api="M:Gemstone.IO.FilePath.GetLastDirectoryName(System.String)" />
        <element api="M:Gemstone.IO.FilePath.AddPathSuffix(System.String)" />
        <element api="M:Gemstone.IO.FilePath.RemovePathSuffix(System.String)" />
        <element api="M:Gemstone.IO.FilePath.DropPathRoot(System.String)" />
        <element api="M:Gemstone.IO.FilePath.TrimFileName(System.String,System.Int32)" />
        <element api="M:Gemstone.IO.FilePath.GetFileLock``1(System.String,System.Func{System.String,``0},System.Double,System.Int32)" />
        <element api="M:Gemstone.IO.FilePath.TryGetReadLock(System.String)" />
        <element api="M:Gemstone.IO.FilePath.TryGetReadLockExclusive(System.String)" />
        <element api="M:Gemstone.IO.FilePath.TryGetWriteLock(System.String)" />
        <element api="M:Gemstone.IO.FilePath.WaitForReadLock(System.String)" />
        <element api="M:Gemstone.IO.FilePath.WaitForReadLock(System.String,System.Double)" />
        <element api="M:Gemstone.IO.FilePath.WaitForReadLockExclusive(System.String)" />
        <element api="M:Gemstone.IO.FilePath.WaitForReadLockExclusive(System.String,System.Double)" />
        <element api="M:Gemstone.IO.FilePath.WaitForWriteLock(System.String)" />
        <element api="M:Gemstone.IO.FilePath.WaitForWriteLock(System.String,System.Double)" />
        <element api="M:Gemstone.IO.FilePath.WaitTillExists(System.String)" />
        <element api="M:Gemstone.IO.FilePath.WaitTillExists(System.String,System.Double)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.AddPathSuffix(System.String)">
      <apidata name="AddPathSuffix" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.DropPathRoot(System.String)">
      <apidata name="DropPathRoot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.EnumerateDirectories(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})">
      <apidata name="EnumerateDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </argument>
        </parameter>
        <parameter name="searchOption" optional="true">
          <type api="T:System.IO.SearchOption" ref="false" />
          <argument>
            <type api="T:System.IO.SearchOption" ref="false" />
            <enumValue>
              <field name="AllDirectories" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="exceptionHandler" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.EnumerateFiles(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})">
      <apidata name="EnumerateFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </argument>
        </parameter>
        <parameter name="searchOption" optional="true">
          <type api="T:System.IO.SearchOption" ref="false" />
          <argument>
            <type api="T:System.IO.SearchOption" ref="false" />
            <enumValue>
              <field name="AllDirectories" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="exceptionHandler" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetAbsolutePath(System.String)">
      <apidata name="GetAbsolutePath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetApplicationDataFolder">
      <apidata name="GetApplicationDataFolder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetAvailableFreeSpace(System.String,System.Int64@,System.Int64@)">
      <apidata name="GetAvailableFreeSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pathName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="freeSpace" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="totalSize" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetCommonApplicationDataFolder">
      <apidata name="GetCommonApplicationDataFolder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetDirectories(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})">
      <apidata name="GetDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </argument>
        </parameter>
        <parameter name="searchOption" optional="true">
          <type api="T:System.IO.SearchOption" ref="false" />
          <argument>
            <type api="T:System.IO.SearchOption" ref="false" />
            <enumValue>
              <field name="AllDirectories" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="exceptionHandler" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetDirectoryName(System.String)">
      <apidata name="GetDirectoryName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetExtension(System.String)">
      <apidata name="GetExtension" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFileLength(System.String)">
      <apidata name="GetFileLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFileList(System.String,System.Action{System.Exception})">
      <apidata name="GetFileList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exceptionHandler" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFileLock``1(System.String,System.Func{System.String,``0},System.Double,System.Int32)">
      <apidata name="GetFileLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lockFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="T" index="0" api="M:Gemstone.IO.FilePath.GetFileLock``1(System.String,System.Func{System.String,``0},System.Double,System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="secondsToWait" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>5</value>
          </argument>
        </parameter>
        <parameter name="retryMilliseconds" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>200</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.IO.FilePath.GetFileLock``1(System.String,System.Func{System.String,``0},System.Double,System.Int32)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFileName(System.String)">
      <apidata name="GetFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFileNameWithoutExtension(System.String)">
      <apidata name="GetFileNameWithoutExtension" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFilePatternRegularExpression(System.String)">
      <apidata name="GetFilePatternRegularExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileSpec">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetFiles(System.String,System.String,System.IO.SearchOption,System.Action{System.Exception})">
      <apidata name="GetFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </argument>
        </parameter>
        <parameter name="searchOption" optional="true">
          <type api="T:System.IO.SearchOption" ref="false" />
          <argument>
            <type api="T:System.IO.SearchOption" ref="false" />
            <enumValue>
              <field name="AllDirectories" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="exceptionHandler" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetLastDirectoryName(System.String)">
      <apidata name="GetLastDirectoryName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetUniqueFilePath(System.String)">
      <apidata name="GetUniqueFilePath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="originalFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetUniqueFilePathWithBinarySearch(System.String)">
      <apidata name="GetUniqueFilePathWithBinarySearch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="originalFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetValidFileName(System.String,System.Char)">
      <apidata name="GetValidFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replaceWithCharacter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>_</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.GetValidFilePath(System.String,System.Char)">
      <apidata name="GetValidFilePath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replaceWithCharacter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>_</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.InApplicationPath(System.String)">
      <apidata name="InApplicationPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.IsFilePatternMatch(System.String,System.String,System.Boolean)">
      <apidata name="IsFilePatternMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileSpec">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.IsFilePatternMatch(System.String[],System.String,System.Boolean)">
      <apidata name="IsFilePatternMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileSpecs">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.IsValidFileName(System.String)">
      <apidata name="IsValidFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.RemovePathSuffix(System.String)">
      <apidata name="RemovePathSuffix" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.TrimFileName(System.String,System.Int32)">
      <apidata name="TrimFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.TryGetReadLock(System.String)">
      <apidata name="TryGetReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.TryGetReadLockExclusive(System.String)">
      <apidata name="TryGetReadLockExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.TryGetWriteLock(System.String)">
      <apidata name="TryGetWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.ValidatePathName(System.String)">
      <apidata name="ValidatePathName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForReadLock(System.String)">
      <apidata name="WaitForReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForReadLock(System.String,System.Double)">
      <apidata name="WaitForReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="secondsToWait">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForReadLockExclusive(System.String)">
      <apidata name="WaitForReadLockExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForReadLockExclusive(System.String,System.Double)">
      <apidata name="WaitForReadLockExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="secondsToWait">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForWriteLock(System.String)">
      <apidata name="WaitForWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitForWriteLock(System.String,System.Double)">
      <apidata name="WaitForWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="secondsToWait">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitTillExists(System.String)">
      <apidata name="WaitTillExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.IO.FilePath.WaitTillExists(System.String,System.Double)">
      <apidata name="WaitTillExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/FilePath.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="secondsToWait">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO" />
        <type api="T:Gemstone.IO.FilePath" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.IO.StreamExtensions">
      <apidata name="Gemstone.IO.StreamExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.IO.StreamExtensions.StreamExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.IO.StreamExtensions.StreamExtensions">
      <apidata name="StreamExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream,System.Int64,System.Byte[])" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStream(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteObject(System.IO.Stream,System.Object)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadObject(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Boolean)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.SByte)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int16)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt16)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Char)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int32)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt32)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Single)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int64)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt64)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Double)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.DateTime)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Decimal)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Guid)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte[])" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.String)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNextByte(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBoolean(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSByte(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt16(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt16(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadChar(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt32(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSingle(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt64(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDouble(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt64(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDateTime(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDecimal(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadGuid(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteWithLength(System.IO.Stream,System.Byte[])" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream,System.Int32)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadAll(System.IO.Stream,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.String})" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.Int32})" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteNullable(System.IO.Stream,System.String)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.Read7BitUInt32(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadString(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNullableString(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStringCollection(System.IO.Stream)" />
        <element api="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32Collection(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream,System.Int64,System.Byte[])">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Read7BitUInt32(System.IO.Stream)">
      <apidata name="Read7BitUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadAll(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
      <apidata name="ReadAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBoolean(System.IO.Stream)">
      <apidata name="ReadBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream)">
      <apidata name="ReadBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadBytes(System.IO.Stream,System.Int32)">
      <apidata name="ReadBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadChar(System.IO.Stream)">
      <apidata name="ReadChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDateTime(System.IO.Stream)">
      <apidata name="ReadDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDecimal(System.IO.Stream)">
      <apidata name="ReadDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadDouble(System.IO.Stream)">
      <apidata name="ReadDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadGuid(System.IO.Stream)">
      <apidata name="ReadGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt16(System.IO.Stream)">
      <apidata name="ReadInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32(System.IO.Stream)">
      <apidata name="ReadInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt32Collection(System.IO.Stream)">
      <apidata name="ReadInt32Collection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadInt64(System.IO.Stream)">
      <apidata name="ReadInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNextByte(System.IO.Stream)">
      <apidata name="ReadNextByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadNullableString(System.IO.Stream)">
      <apidata name="ReadNullableString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadObject(System.IO.Stream)">
      <apidata name="ReadObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSByte(System.IO.Stream)">
      <apidata name="ReadSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadSingle(System.IO.Stream)">
      <apidata name="ReadSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStream(System.IO.Stream)">
      <apidata name="ReadStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadString(System.IO.Stream)">
      <apidata name="ReadString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadStringCollection(System.IO.Stream)">
      <apidata name="ReadStringCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt16(System.IO.Stream)">
      <apidata name="ReadUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt32(System.IO.Stream)">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.ReadUInt64(System.IO.Stream)">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Boolean)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Byte[])">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Char)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.DateTime)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Decimal)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Double)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Guid)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int16)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Int64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.SByte)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.Single)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt16)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.Write(System.IO.Stream,System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.Int32})">
      <apidata name="WriteCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteCollection(System.IO.Stream,System.Collections.Generic.ICollection{System.String})">
      <apidata name="WriteCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteNullable(System.IO.Stream,System.String)">
      <apidata name="WriteNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteObject(System.IO.Stream,System.Object)">
      <apidata name="WriteObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.IO.StreamExtensions.StreamExtensions.WriteWithLength(System.IO.Stream,System.Byte[])">
      <apidata name="WriteWithLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/IO/StreamExtensions/StreamExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.IO.StreamExtensions" />
        <type api="T:Gemstone.IO.StreamExtensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Reflection">
      <apidata name="Gemstone.Reflection" group="namespace" />
      <elements>
        <element api="T:Gemstone.Reflection.AppDomainTypeLookup" />
        <element api="T:Gemstone.Reflection.AssemblyInfo" />
        <element api="T:Gemstone.Reflection.AssemblyLoadedVersionNumber" />
      </elements>
    </api>
    <api id="T:Gemstone.Reflection.AppDomainTypeLookup">
      <apidata name="AppDomainTypeLookup" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/AppDomainTypeLookup.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.AppDomainTypeLookup.#ctor" />
        <element api="M:Gemstone.Reflection.AppDomainTypeLookup.FindTypes" />
        <element api="P:Gemstone.Reflection.AppDomainTypeLookup.HasChanged" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AppDomainTypeLookup.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Reflection/AppDomainTypeLookup.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AppDomainTypeLookup" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AppDomainTypeLookup.FindTypes">
      <apidata name="FindTypes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AppDomainTypeLookup.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AppDomainTypeLookup" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AppDomainTypeLookup.HasChanged">
      <apidata name="HasChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AppDomainTypeLookup.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AppDomainTypeLookup" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Reflection.AssemblyInfo">
      <apidata name="AssemblyInfo" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyInfo.GetAttributes" />
        <element api="M:Gemstone.Reflection.AssemblyInfo.GetCustomAttribute(System.Type)" />
        <element api="M:Gemstone.Reflection.AssemblyInfo.GetEmbeddedResource(System.String)" />
        <element api="M:Gemstone.Reflection.AssemblyInfo.FindType(System.String)" />
        <element api="M:Gemstone.Reflection.AssemblyInfo.LoadAssemblyFromResource(System.String)" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Assembly" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Title" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Description" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Company" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Product" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Copyright" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Trademark" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Configuration" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.DelaySign" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.InformationalVersion" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.KeyFile" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.CultureName" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.SatelliteContractVersion" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.ComCompatibleVersion" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.ComVisible" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Debuggable" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Guid" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.CLSCompliant" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Location" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.CodeBase" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.FullName" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Name" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.Version" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.ImageRuntimeVersion" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.GACLoaded" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.BuildDate" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.RootNamespace" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.CallingAssembly" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.EntryAssembly" />
        <element api="P:Gemstone.Reflection.AssemblyInfo.ExecutingAssembly" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <parameters>
        <parameter name="assemblyInstance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Assembly">
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.BuildDate">
      <apidata name="BuildDate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuildDate" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.CallingAssembly">
      <apidata name="CallingAssembly" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallingAssembly" />
      <returns>
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.CLSCompliant">
      <apidata name="CLSCompliant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CLSCompliant" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.CodeBase">
      <apidata name="CodeBase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CodeBase" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.ComCompatibleVersion">
      <apidata name="ComCompatibleVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComCompatibleVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Company">
      <apidata name="Company" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Company" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.ComVisible">
      <apidata name="ComVisible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComVisible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Configuration">
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Copyright">
      <apidata name="Copyright" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Copyright" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.CultureName">
      <apidata name="CultureName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CultureName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Debuggable">
      <apidata name="Debuggable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Debuggable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.DelaySign">
      <apidata name="DelaySign" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DelaySign" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.EntryAssembly">
      <apidata name="EntryAssembly" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryAssembly" />
      <returns>
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.ExecutingAssembly">
      <apidata name="ExecutingAssembly" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutingAssembly" />
      <returns>
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.FindType(System.String)">
      <apidata name="FindType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.FullName">
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.GACLoaded">
      <apidata name="GACLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GACLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.GetAttributes">
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.GetCustomAttribute(System.Type)">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.CustomAttributeData" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.GetEmbeddedResource(System.String)">
      <apidata name="GetEmbeddedResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="resourceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Guid">
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Guid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.ImageRuntimeVersion">
      <apidata name="ImageRuntimeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImageRuntimeVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.InformationalVersion">
      <apidata name="InformationalVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InformationalVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.KeyFile">
      <apidata name="KeyFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyInfo.LoadAssemblyFromResource(System.String)">
      <apidata name="LoadAssemblyFromResource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Location">
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Location" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Product">
      <apidata name="Product" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Product" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.RootNamespace">
      <apidata name="RootNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RootNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.SatelliteContractVersion">
      <apidata name="SatelliteContractVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SatelliteContractVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Trademark">
      <apidata name="Trademark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Trademark" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyInfo.Version">
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Reflection/AssemblyInfo.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Reflection.AssemblyLoadedVersionNumber">
      <apidata name="AssemblyLoadedVersionNumber" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/AssemblyLoadedVersionNumber.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Gemstone.Reflection.AssemblyLoadedVersionNumber.VersionNumber" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
      </containers>
    </api>
    <api id="P:Gemstone.Reflection.AssemblyLoadedVersionNumber.VersionNumber">
      <apidata name="VersionNumber" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyLoadedVersionNumber.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VersionNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection" />
        <type api="T:Gemstone.Reflection.AssemblyLoadedVersionNumber" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.Reflection.AssemblyExtensions">
      <apidata name="Gemstone.Reflection.AssemblyExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions">
      <apidata name="AssemblyExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ShortName(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.GetEmbeddedResource(System.Reflection.Assembly,System.String)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Title(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Description(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Company(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Product(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Copyright(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Trademark(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Configuration(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.DelaySign(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.InformationalVersion(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.KeyFile(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.CultureName(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.SatelliteContractVersion(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ComCompatibleVersion(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ComVisible(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Debuggable(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Guid(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.CLSCompliant(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.BuildDate(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.RootNamespace(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.GetAttributes(System.Reflection.Assembly)" />
        <element api="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.TryLoadAllReferences(System.Reflection.Assembly)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.BuildDate(System.Reflection.Assembly)">
      <apidata name="BuildDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.CLSCompliant(System.Reflection.Assembly)">
      <apidata name="CLSCompliant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ComCompatibleVersion(System.Reflection.Assembly)">
      <apidata name="ComCompatibleVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Company(System.Reflection.Assembly)">
      <apidata name="Company" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ComVisible(System.Reflection.Assembly)">
      <apidata name="ComVisible" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Configuration(System.Reflection.Assembly)">
      <apidata name="Configuration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Copyright(System.Reflection.Assembly)">
      <apidata name="Copyright" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.CultureName(System.Reflection.Assembly)">
      <apidata name="CultureName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Debuggable(System.Reflection.Assembly)">
      <apidata name="Debuggable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.DelaySign(System.Reflection.Assembly)">
      <apidata name="DelaySign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Description(System.Reflection.Assembly)">
      <apidata name="Description" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.GetAttributes(System.Reflection.Assembly)">
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.GetEmbeddedResource(System.Reflection.Assembly,System.String)">
      <apidata name="GetEmbeddedResource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="resourceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Guid(System.Reflection.Assembly)">
      <apidata name="Guid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.InformationalVersion(System.Reflection.Assembly)">
      <apidata name="InformationalVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.KeyFile(System.Reflection.Assembly)">
      <apidata name="KeyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Product(System.Reflection.Assembly)">
      <apidata name="Product" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.RootNamespace(System.Reflection.Assembly)">
      <apidata name="RootNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.SatelliteContractVersion(System.Reflection.Assembly)">
      <apidata name="SatelliteContractVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.ShortName(System.Reflection.Assembly)">
      <apidata name="ShortName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Title(System.Reflection.Assembly)">
      <apidata name="Title" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.Trademark(System.Reflection.Assembly)">
      <apidata name="Trademark" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions.TryLoadAllReferences(System.Reflection.Assembly)">
      <apidata name="TryLoadAllReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/AssemblyExtensions/AssemblyExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.AssemblyExtensions" />
        <type api="T:Gemstone.Reflection.AssemblyExtensions.AssemblyExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Reflection.MemberInfoExtensions">
      <apidata name="Gemstone.Reflection.MemberInfoExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions">
      <apidata name="MemberInfoExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.GetFriendlyClassName``1(``0)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.AttributeExists``2(``0)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``2(``0,``1@)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.Type,System.Attribute@)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.String,System.Attribute@)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``2(``0,``1[]@)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.Type,System.Attribute[]@)" />
        <element api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.String,System.Attribute[]@)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.AttributeExists``2(``0)">
      <apidata name="AttributeExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.AttributeExists``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.GetFriendlyClassName``1(``0)">
      <apidata name="GetFriendlyClassName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.GetFriendlyClassName``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.String,System.Attribute@)">
      <apidata name="TryGetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.String,System.Attribute@)" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <type api="T:System.Attribute" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.Type,System.Attribute@)">
      <apidata name="TryGetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``1(``0,System.Type,System.Attribute@)" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <type api="T:System.Attribute" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``2(``0,``1@)">
      <apidata name="TryGetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``2(``0,``1@)" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <template name="TAttribute" index="1" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttribute``2(``0,``1@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.String,System.Attribute[]@)">
      <apidata name="TryGetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.String,System.Attribute[]@)" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributes" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Attribute" ref="true" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.Type,System.Attribute[]@)">
      <apidata name="TryGetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``1(``0,System.Type,System.Attribute[]@)" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Attribute" ref="true" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``2(``0,``1[]@)">
      <apidata name="TryGetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MemberInfoExtensions/MemberInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMemberInfo">
          <constrained>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </constrained>
        </template>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <template name="TMemberInfo" index="0" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``2(``0,``1[]@)" />
        </parameter>
        <parameter name="attributes" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <template name="TAttribute" index="1" api="M:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions.TryGetAttributes``2(``0,``1[]@)" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MemberInfoExtensions" />
        <type api="T:Gemstone.Reflection.MemberInfoExtensions.MemberInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Reflection.MethodBaseExtensions">
      <apidata name="Gemstone.Reflection.MethodBaseExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions">
      <apidata name="MethodBaseExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/MethodBaseExtensions/MethodBaseExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions.GetFriendlyMethodName(System.Reflection.MethodBase)" />
        <element api="M:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions.GetFriendlyMethodNameWithClass(System.Reflection.MethodBase)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodBaseExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions.GetFriendlyMethodName(System.Reflection.MethodBase)">
      <apidata name="GetFriendlyMethodName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodBaseExtensions/MethodBaseExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodBaseExtensions" />
        <type api="T:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions.GetFriendlyMethodNameWithClass(System.Reflection.MethodBase)">
      <apidata name="GetFriendlyMethodNameWithClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodBaseExtensions/MethodBaseExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodBaseExtensions" />
        <type api="T:Gemstone.Reflection.MethodBaseExtensions.MethodBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Reflection.MethodInfoExtensions">
      <apidata name="Gemstone.Reflection.MethodInfoExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions">
      <apidata name="MethodInfoExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``1(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``2(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``3(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``1(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``2(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``3(System.Reflection.MethodInfo)" />
        <element api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction(System.Reflection.MethodInfo)">
      <apidata name="CreateAction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``1(System.Reflection.MethodInfo)">
      <apidata name="CreateAction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Action`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``1(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``2(System.Reflection.MethodInfo)">
      <apidata name="CreateAction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Action`3" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``2(System.Reflection.MethodInfo)" />
            <template name="T2" index="1" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``2(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``3(System.Reflection.MethodInfo)">
      <apidata name="CreateAction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Action`4" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``3(System.Reflection.MethodInfo)" />
            <template name="T2" index="1" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``3(System.Reflection.MethodInfo)" />
            <template name="T3" index="2" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateAction``3(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``1(System.Reflection.MethodInfo)">
      <apidata name="CreateFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="TResult" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``1(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``2(System.Reflection.MethodInfo)">
      <apidata name="CreateFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`3" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``2(System.Reflection.MethodInfo)" />
            <template name="TResult" index="1" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``2(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``3(System.Reflection.MethodInfo)">
      <apidata name="CreateFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`4" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``3(System.Reflection.MethodInfo)" />
            <template name="T2" index="1" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``3(System.Reflection.MethodInfo)" />
            <template name="TResult" index="2" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``3(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)">
      <apidata name="CreateFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Reflection/MethodInfoExtensions/MethodInfoExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Func`5" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <template name="T1" index="0" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)" />
            <template name="T2" index="1" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)" />
            <template name="T3" index="2" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)" />
            <template name="TResult" index="3" api="M:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions.CreateFunc``4(System.Reflection.MethodInfo)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Reflection.MethodInfoExtensions" />
        <type api="T:Gemstone.Reflection.MethodInfoExtensions.MethodInfoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Security.Cryptography">
      <apidata name="Gemstone.Security.Cryptography" group="namespace" />
      <elements>
        <element api="T:Gemstone.Security.Cryptography.CharacterGroup" />
        <element api="T:Gemstone.Security.Cryptography.Cipher" />
        <element api="T:Gemstone.Security.Cryptography.PasswordGenerator" />
        <element api="T:Gemstone.Security.Cryptography.Random" />
      </elements>
    </api>
    <api id="T:Gemstone.Security.Cryptography.CharacterGroup">
      <apidata name="CharacterGroup" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor" />
        <element api="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor(System.String)" />
        <element api="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor(System.String,System.Int32)" />
        <element api="P:Gemstone.Security.Cryptography.CharacterGroup.Characters" />
        <element api="P:Gemstone.Security.Cryptography.CharacterGroup.MinOccurrence" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <parameters>
        <parameter name="characters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.CharacterGroup.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <parameters>
        <parameter name="characters">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minOccurrence">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.CharacterGroup.Characters">
      <apidata name="Characters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Characters" />
      <setter name="set_Characters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.CharacterGroup.MinOccurrence">
      <apidata name="MinOccurrence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/CharacterGroup.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinOccurrence" />
      <setter name="set_MinOccurrence" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Security.Cryptography.Cipher">
      <apidata name="Cipher" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Security.Cryptography.Cipher.#ctor" />
        <element api="M:Gemstone.Security.Cryptography.Cipher.CreateSHA1" />
        <element api="M:Gemstone.Security.Cryptography.Cipher.CreateSHA256" />
        <element api="M:Gemstone.Security.Cryptography.Cipher.CreateSHA384" />
        <element api="M:Gemstone.Security.Cryptography.Cipher.CreateSHA512" />
        <element api="M:Gemstone.Security.Cryptography.Cipher.CreateAes" />
        <element api="P:Gemstone.Security.Cryptography.Cipher.SystemAllowsManagedEncryption" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.CreateAes">
      <apidata name="CreateAes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.CreateSHA1">
      <apidata name="CreateSHA1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.SHA1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.CreateSHA256">
      <apidata name="CreateSHA256" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.SHA256" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.CreateSHA384">
      <apidata name="CreateSHA384" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.SHA384" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Cipher.CreateSHA512">
      <apidata name="CreateSHA512" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.SHA512" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Cipher.SystemAllowsManagedEncryption">
      <apidata name="SystemAllowsManagedEncryption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/Cipher.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SystemAllowsManagedEncryption" />
      <setter name="set_SystemAllowsManagedEncryption" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Security.Cryptography.PasswordGenerator">
      <apidata name="PasswordGenerator" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.Security.Cryptography.PasswordGenerator.DefaultCharacterGroups" />
        <element api="F:Gemstone.Security.Cryptography.PasswordGenerator.Default" />
        <element api="M:Gemstone.Security.Cryptography.PasswordGenerator.#ctor" />
        <element api="M:Gemstone.Security.Cryptography.PasswordGenerator.#ctor(System.Collections.Generic.IEnumerable{Gemstone.Security.Cryptography.CharacterGroup})" />
        <element api="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword" />
        <element api="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword(System.Int32)" />
        <element api="P:Gemstone.Security.Cryptography.PasswordGenerator.CharacterGroups" />
        <element api="P:Gemstone.Security.Cryptography.PasswordGenerator.AllCharacters" />
        <element api="P:Gemstone.Security.Cryptography.PasswordGenerator.MinLength" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.PasswordGenerator.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.PasswordGenerator.#ctor(System.Collections.Generic.IEnumerable{Gemstone.Security.Cryptography.CharacterGroup})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <parameters>
        <parameter name="characterGroups">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.PasswordGenerator.AllCharacters">
      <apidata name="AllCharacters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllCharacters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.PasswordGenerator.CharacterGroups">
      <apidata name="CharacterGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CharacterGroups" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Security.Cryptography.PasswordGenerator.Default">
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Security.Cryptography.PasswordGenerator.DefaultCharacterGroups">
      <apidata name="DefaultCharacterGroups" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Security.Cryptography.CharacterGroup" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword">
      <apidata name="GeneratePassword" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword(System.Int32)">
      <apidata name="GeneratePassword" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.PasswordGenerator.GeneratePassword(System.Int32,System.Int32)">
      <apidata name="GeneratePassword" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.PasswordGenerator.MinLength">
      <apidata name="MinLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Security/Cryptography/PasswordGenerator.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.PasswordGenerator" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Security.Cryptography.Random">
      <apidata name="Random" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Security.Cryptography.Random.Between(System.Double,System.Double)" />
        <element api="M:Gemstone.Security.Cryptography.Random.GetBytes(System.Byte[])" />
        <element api="M:Gemstone.Security.Cryptography.Random.ByteBetween(System.Byte,System.Byte)" />
        <element api="M:Gemstone.Security.Cryptography.Random.Int16Between(System.Int16,System.Int16)" />
        <element api="M:Gemstone.Security.Cryptography.Random.UInt16Between(System.UInt16,System.UInt16)" />
        <element api="M:Gemstone.Security.Cryptography.Random.Int32Between(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Security.Cryptography.Random.UInt32Between(System.UInt32,System.UInt32)" />
        <element api="M:Gemstone.Security.Cryptography.Random.Int64Between(System.Int64,System.Int64)" />
        <element api="M:Gemstone.Security.Cryptography.Random.UInt64Between(System.UInt64,System.UInt64)" />
        <element api="P:Gemstone.Security.Cryptography.Random.Number" />
        <element api="P:Gemstone.Security.Cryptography.Random.Decimal" />
        <element api="P:Gemstone.Security.Cryptography.Random.Boolean" />
        <element api="P:Gemstone.Security.Cryptography.Random.Byte" />
        <element api="P:Gemstone.Security.Cryptography.Random.Int16" />
        <element api="P:Gemstone.Security.Cryptography.Random.UInt16" />
        <element api="P:Gemstone.Security.Cryptography.Random.Int32" />
        <element api="P:Gemstone.Security.Cryptography.Random.UInt32" />
        <element api="P:Gemstone.Security.Cryptography.Random.Int64" />
        <element api="P:Gemstone.Security.Cryptography.Random.UInt64" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.Between(System.Double,System.Double)">
      <apidata name="Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Boolean">
      <apidata name="Boolean" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Boolean" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Byte">
      <apidata name="Byte" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Byte" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.ByteBetween(System.Byte,System.Byte)">
      <apidata name="ByteBetween" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Decimal">
      <apidata name="Decimal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Decimal" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.GetBytes(System.Byte[])">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Int16">
      <apidata name="Int16" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int16" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.Int16Between(System.Int16,System.Int16)">
      <apidata name="Int16Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Int32">
      <apidata name="Int32" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int32" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.Int32Between(System.Int32,System.Int32)">
      <apidata name="Int32Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Int64">
      <apidata name="Int64" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.Int64Between(System.Int64,System.Int64)">
      <apidata name="Int64Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.Number">
      <apidata name="Number" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Number" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.UInt16">
      <apidata name="UInt16" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UInt16" />
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.UInt16Between(System.UInt16,System.UInt16)">
      <apidata name="UInt16Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.UInt32">
      <apidata name="UInt32" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UInt32" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.UInt32Between(System.UInt32,System.UInt32)">
      <apidata name="UInt32Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Security.Cryptography.Random.UInt64">
      <apidata name="UInt64" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UInt64" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Security.Cryptography.Random.UInt64Between(System.UInt64,System.UInt64)">
      <apidata name="UInt64Between" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/Random.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startNumber">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="stopNumber">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography" />
        <type api="T:Gemstone.Security.Cryptography.Random" ref="true" />
      </containers>
    </api>
    <api id="N:Gemstone.Security.Cryptography.HashAlgorithmExtensions">
      <apidata name="Gemstone.Security.Cryptography.HashAlgorithmExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Security.Cryptography.HashAlgorithmExtensions.HashAlgorithmExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Security.Cryptography.HashAlgorithmExtensions.HashAlgorithmExtensions">
      <apidata name="HashAlgorithmExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/HashAlgorithmExtensions/HashAlgorithmExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Security.Cryptography.HashAlgorithmExtensions.HashAlgorithmExtensions.GetStringHash(System.Security.Cryptography.HashAlgorithm,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.HashAlgorithmExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Security.Cryptography.HashAlgorithmExtensions.HashAlgorithmExtensions.GetStringHash(System.Security.Cryptography.HashAlgorithm,System.String)">
      <apidata name="GetStringHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/HashAlgorithmExtensions/HashAlgorithmExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.HashAlgorithmExtensions" />
        <type api="T:Gemstone.Security.Cryptography.HashAlgorithmExtensions.HashAlgorithmExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions">
      <apidata name="Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions">
      <apidata name="SymmetricAlgorithmExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Security/Cryptography/SymmetricAlgorithmExtensions/SymmetricAlgorithmExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Encrypt(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Encrypt(System.Security.Cryptography.SymmetricAlgorithm,System.IO.Stream,System.IO.Stream,System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Decrypt(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])" />
        <element api="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Decrypt(System.Security.Cryptography.SymmetricAlgorithm,System.IO.Stream,System.IO.Stream,System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Decrypt(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/SymmetricAlgorithmExtensions/SymmetricAlgorithmExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" />
        <type api="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Decrypt(System.Security.Cryptography.SymmetricAlgorithm,System.IO.Stream,System.IO.Stream,System.Byte[],System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/SymmetricAlgorithmExtensions/SymmetricAlgorithmExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" />
        <type api="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Encrypt(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/SymmetricAlgorithmExtensions/SymmetricAlgorithmExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" />
        <type api="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions.Encrypt(System.Security.Cryptography.SymmetricAlgorithm,System.IO.Stream,System.IO.Stream,System.Byte[],System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Security/Cryptography/SymmetricAlgorithmExtensions/SymmetricAlgorithmExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions" />
        <type api="T:Gemstone.Security.Cryptography.SymmetricAlgorithmExtensions.SymmetricAlgorithmExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.StringExtensions">
      <apidata name="Gemstone.StringExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.StringExtensions.StringExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.StringExtensions.StringExtensions">
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.StringExtensions.StringExtensions.GetComparer(System.StringComparison)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ParseBoolean(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String,System.Globalization.CultureInfo)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType(System.String,System.Type)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType(System.String,System.Type,System.Globalization.CultureInfo)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorEmptyString``1(``0,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorWhiteSpace``1(``0,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToStream(System.String,System.Text.Encoding)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToStreamAsync(System.String,System.Text.Encoding)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.GetSegments(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.JoinKeyValuePairs(System.Collections.Generic.IDictionary{System.String,System.String},System.Char,System.Char,System.Char,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ParseKeyValuePairs(System.String,System.Char,System.Char,System.Char,System.Char,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.NotEmpty(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.NotEmpty(System.String,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceCharacters(System.String,System.Char,System.Func{System.Char,System.Boolean})" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveCharacters(System.String,System.Func{System.Char,System.Boolean})" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveCharacter(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveWhiteSpace(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceWhiteSpace(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveControlCharacters(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceControlCharacters(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceControlCharacters(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveCrLfs(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceCrLfs(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicates(System.String,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveNull(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicateWhiteSpace(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicateWhiteSpace(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveInvalidFileNameCharacters(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceInvalidFileNameCharacters(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.QuoteWrap(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.CharCount(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllDigits(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllNumbers(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllUpper(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllLower(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllLetters(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllLetters(System.String,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllLettersOrDigits(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IsAllLettersOrDigits(System.String,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RegexDecode(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.Base64Encode(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.Base64Decode(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToSecureString(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToTitleCase(System.String,System.Globalization.CultureInfo)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToPascalCase(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ToCamelCase(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.TruncateLeft(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.TruncateRight(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.CenterText(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.CenterText(System.String,System.Int32,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.ReplaceCaseInsensitive(System.String,System.String,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.Char,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.Char,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.Reverse(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Char,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.TrimWithEllipsisMiddle(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.TrimWithEllipsisEnd(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.UriEncode(System.String)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingString(System.String,System.String,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingString(System.String,System.Char,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingZeros(System.String,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveTrailingString(System.String,System.String,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.RemoveTrailingString(System.String,System.Char,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.SubstringEnd(System.String,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.SubstringPrevious(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.String,System.Int32,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.Char,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.Func{System.Char,System.Boolean},System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Char,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Char[],System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Func{System.Char,System.Boolean},System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Char[],System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Char,System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Func{System.Char,System.Boolean},System.Int32)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.StringCount(System.String,System.String,System.Int32,System.Boolean)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.QuoteUnwrap(System.String,System.Char)" />
        <element api="M:Gemstone.StringExtensions.StringExtensions.QuoteUnwrap(System.String,System.Char[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.Base64Decode(System.String)">
      <apidata name="Base64Decode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.Base64Encode(System.String)">
      <apidata name="Base64Encode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.CenterText(System.String,System.Int32)">
      <apidata name="CenterText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.CenterText(System.String,System.Int32,System.Char)">
      <apidata name="CenterText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="paddingCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.CharCount(System.String,System.Char)">
      <apidata name="CharCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterToCount">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String)">
      <apidata name="ConvertToType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String,System.Globalization.CultureInfo)">
      <apidata name="ConvertToType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ConvertToType``1(System.String,System.Globalization.CultureInfo)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ConvertToType(System.String,System.Type)">
      <apidata name="ConvertToType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ConvertToType(System.String,System.Type,System.Globalization.CultureInfo)">
      <apidata name="ConvertToType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.Char)">
      <apidata name="EnsureEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.Char,System.Boolean)">
      <apidata name="EnsureEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="removeRepeatingChar">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureEnd(System.String,System.String)">
      <apidata name="EnsureEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.Char)">
      <apidata name="EnsureStart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.Char,System.Boolean)">
      <apidata name="EnsureStart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="removeRepeatingChar">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.EnsureStart(System.String,System.String)">
      <apidata name="EnsureStart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.GetComparer(System.StringComparison)">
      <apidata name="GetComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comparison">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.StringComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.GetSegments(System.String,System.Int32)">
      <apidata name="GetSegments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="segmentSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Char,System.Int32)">
      <apidata name="IndexOfNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Char[],System.Int32)">
      <apidata name="IndexOfNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="anyOf">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfNot(System.String,System.Func{System.Char,System.Boolean},System.Int32)">
      <apidata name="IndexOfNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterTestFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.Char,System.Int32)">
      <apidata name="IndexOfPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.Func{System.Char,System.Boolean},System.Int32)">
      <apidata name="IndexOfPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterTestFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPrevious(System.String,System.String,System.Int32,System.Boolean)">
      <apidata name="IndexOfPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Char,System.Int32)">
      <apidata name="IndexOfPreviousNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Char[],System.Int32)">
      <apidata name="IndexOfPreviousNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="anyOf">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfPreviousNot(System.String,System.Func{System.Char,System.Boolean},System.Int32)">
      <apidata name="IndexOfPreviousNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterTestFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String)">
      <apidata name="IndexOfRepeatedChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Char)">
      <apidata name="IndexOfRepeatedChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterToFind">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Char,System.Int32)">
      <apidata name="IndexOfRepeatedChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterToFind">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IndexOfRepeatedChar(System.String,System.Int32)">
      <apidata name="IndexOfRepeatedChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllDigits(System.String)">
      <apidata name="IsAllDigits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllLetters(System.String)">
      <apidata name="IsAllLetters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllLetters(System.String,System.Boolean)">
      <apidata name="IsAllLetters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignorePunctuation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllLettersOrDigits(System.String)">
      <apidata name="IsAllLettersOrDigits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllLettersOrDigits(System.String,System.Boolean)">
      <apidata name="IsAllLettersOrDigits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignorePunctuation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllLower(System.String)">
      <apidata name="IsAllLower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllNumbers(System.String)">
      <apidata name="IsAllNumbers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.IsAllUpper(System.String)">
      <apidata name="IsAllUpper" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.JoinKeyValuePairs(System.Collections.Generic.IDictionary{System.String,System.String},System.Char,System.Char,System.Char,System.Char)">
      <apidata name="JoinKeyValuePairs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pairs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parameterDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>;</value>
          </argument>
        </parameter>
        <parameter name="keyValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>=</value>
          </argument>
        </parameter>
        <parameter name="startValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>{</value>
          </argument>
        </parameter>
        <parameter name="endValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>}</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.NotEmpty(System.String)">
      <apidata name="NotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="testValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.NotEmpty(System.String,System.String)">
      <apidata name="NotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="testValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nonEmptyReturnValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ParseBoolean(System.String)">
      <apidata name="ParseBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ParseKeyValuePairs(System.String,System.Char,System.Char,System.Char,System.Char,System.Boolean)">
      <apidata name="ParseKeyValuePairs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>;</value>
          </argument>
        </parameter>
        <parameter name="keyValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>=</value>
          </argument>
        </parameter>
        <parameter name="startValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>{</value>
          </argument>
        </parameter>
        <parameter name="endValueDelimiter" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>}</value>
          </argument>
        </parameter>
        <parameter name="ignoreDuplicateKeys" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.QuoteUnwrap(System.String,System.Char)">
      <apidata name="QuoteUnwrap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quoteChar" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>"</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.QuoteUnwrap(System.String,System.Char[])">
      <apidata name="QuoteUnwrap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quoteChars">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.QuoteWrap(System.String,System.Char)">
      <apidata name="QuoteWrap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quoteChar" optional="true">
          <type api="T:System.Char" ref="false" />
          <argument>
            <type api="T:System.Char" ref="false" />
            <value>"</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RegexDecode(System.String)">
      <apidata name="RegexDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveCharacter(System.String,System.Char)">
      <apidata name="RemoveCharacter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterToRemove">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveCharacters(System.String,System.Func{System.Char,System.Boolean})">
      <apidata name="RemoveCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characterTestFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveControlCharacters(System.String)">
      <apidata name="RemoveControlCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveCrLfs(System.String)">
      <apidata name="RemoveCrLfs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicates(System.String,System.String)">
      <apidata name="RemoveDuplicates" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="duplicatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicateWhiteSpace(System.String)">
      <apidata name="RemoveDuplicateWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveDuplicateWhiteSpace(System.String,System.Char)">
      <apidata name="RemoveDuplicateWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="spacingCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveInvalidFileNameCharacters(System.String)">
      <apidata name="RemoveInvalidFileNameCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingString(System.String,System.Char,System.Boolean)">
      <apidata name="RemoveLeadingString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="charToRemove">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingString(System.String,System.String,System.Boolean)">
      <apidata name="RemoveLeadingString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="stringToRemove">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveLeadingZeros(System.String,System.Boolean)">
      <apidata name="RemoveLeadingZeros" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="AssureParseDouble" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveNull(System.String)">
      <apidata name="RemoveNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveTrailingString(System.String,System.Char,System.Boolean)">
      <apidata name="RemoveTrailingString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="charToRemove">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveTrailingString(System.String,System.String,System.Boolean)">
      <apidata name="RemoveTrailingString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="stringToRemove">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.RemoveWhiteSpace(System.String)">
      <apidata name="RemoveWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceCaseInsensitive(System.String,System.String,System.String)">
      <apidata name="ReplaceCaseInsensitive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fromText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceCharacters(System.String,System.Char,System.Func{System.Char,System.Boolean})">
      <apidata name="ReplaceCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacementCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="characterTestFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceControlCharacters(System.String)">
      <apidata name="ReplaceControlCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceControlCharacters(System.String,System.Char)">
      <apidata name="ReplaceControlCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacementCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceCrLfs(System.String,System.Char)">
      <apidata name="ReplaceCrLfs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacementCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceInvalidFileNameCharacters(System.String,System.Char)">
      <apidata name="ReplaceInvalidFileNameCharacters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacementCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ReplaceWhiteSpace(System.String,System.Char)">
      <apidata name="ReplaceWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacementCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.Reverse(System.String)">
      <apidata name="Reverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.StringCount(System.String,System.String,System.Int32,System.Boolean)">
      <apidata name="StringCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
        <parameter name="matchCase" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.SubstringEnd(System.String,System.Int32)">
      <apidata name="SubstringEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.SubstringPrevious(System.String,System.Int32,System.Int32)">
      <apidata name="SubstringPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToCamelCase(System.String)">
      <apidata name="ToCamelCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorEmptyString``1(``0,System.String)">
      <apidata name="ToNonNullNorEmptyString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorEmptyString``1(``0,System.String)" />
        </parameter>
        <parameter name="nonNullNorEmptyValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value> </value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorWhiteSpace``1(``0,System.String)">
      <apidata name="ToNonNullNorWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullNorWhiteSpace``1(``0,System.String)" />
        </parameter>
        <parameter name="nonNullNorWhiteSpaceValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString(System.String)">
      <apidata name="ToNonNullString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0)">
      <apidata name="ToNonNullString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0,System.String)">
      <apidata name="ToNonNullString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Gemstone.StringExtensions.StringExtensions.ToNonNullString``1(``0,System.String)" />
        </parameter>
        <parameter name="nonNullValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToPascalCase(System.String)">
      <apidata name="ToPascalCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToSecureString(System.String)">
      <apidata name="ToSecureString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.SecureString" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToStream(System.String,System.Text.Encoding)">
      <apidata name="ToStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" optional="true">
          <type api="T:System.Text.Encoding" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToStreamAsync(System.String,System.Text.Encoding)">
      <apidata name="ToStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" optional="true">
          <type api="T:System.Text.Encoding" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.ToTitleCase(System.String,System.Globalization.CultureInfo)">
      <apidata name="ToTitleCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture" optional="true">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.TrimWithEllipsisEnd(System.String,System.Int32)">
      <apidata name="TrimWithEllipsisEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.TrimWithEllipsisMiddle(System.String,System.Int32)">
      <apidata name="TrimWithEllipsisMiddle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.TruncateLeft(System.String,System.Int32)">
      <apidata name="TruncateLeft" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.TruncateRight(System.String,System.Int32)">
      <apidata name="TruncateRight" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.StringExtensions.StringExtensions.UriEncode(System.String)">
      <apidata name="UriEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/StringExtensions/StringExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.StringExtensions" />
        <type api="T:Gemstone.StringExtensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.TimeSpanExtensions">
      <apidata name="Gemstone.TimeSpanExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.TimeSpanExtensions.TimeSpanExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.TimeSpanExtensions.TimeSpanExtensions">
      <apidata name="TimeSpanExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/TimeSpanExtensions/TimeSpanExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.TimeSpanExtensions.TimeSpanExtensions.ToElapsedTimeString(System.TimeSpan,System.Int32,System.Double)" />
        <element api="M:Gemstone.TimeSpanExtensions.TimeSpanExtensions.ToElapsedTimeString(System.TimeSpan,System.Int32,System.String[],System.Double)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TimeSpanExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TimeSpanExtensions.TimeSpanExtensions.ToElapsedTimeString(System.TimeSpan,System.Int32,System.Double)">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TimeSpanExtensions/TimeSpanExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="secondPrecision" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TimeSpanExtensions" />
        <type api="T:Gemstone.TimeSpanExtensions.TimeSpanExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TimeSpanExtensions.TimeSpanExtensions.ToElapsedTimeString(System.TimeSpan,System.Int32,System.String[],System.Double)">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TimeSpanExtensions/TimeSpanExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="secondPrecision" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </parameter>
        <parameter name="timeNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TimeSpanExtensions" />
        <type api="T:Gemstone.TimeSpanExtensions.TimeSpanExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.TypeExtensions">
      <apidata name="Gemstone.TypeExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.TypeExtensions.TypeExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.TypeExtensions.TypeExtensions">
      <apidata name="TypeExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.IsNumeric(System.Type)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.GetFriendlyClassName(System.Type)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.GetRootType(System.Type)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.Boolean)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.String)" />
        <element api="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.String,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.GetFriendlyClassName(System.Type)">
      <apidata name="GetFriendlyClassName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.GetRootType(System.Type)">
      <apidata name="GetRootType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.IsNumeric(System.Type)">
      <apidata name="IsNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type)">
      <apidata name="LoadImplementations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.Boolean)">
      <apidata name="LoadImplementations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="excludeAbstractTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.String)">
      <apidata name="LoadImplementations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binariesDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.TypeExtensions.TypeExtensions.LoadImplementations(System.Type,System.String,System.Boolean,System.Boolean)">
      <apidata name="LoadImplementations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/TypeExtensions/TypeExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binariesDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="excludeAbstractTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="validateReferences" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.TypeExtensions" />
        <type api="T:Gemstone.TypeExtensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Units">
      <apidata name="Gemstone.Units" group="namespace" />
      <elements>
        <element api="T:Gemstone.Units.AngleUnit" />
        <element api="T:Gemstone.Units.Angle" />
        <element api="T:Gemstone.Units.ChargeUnit" />
        <element api="T:Gemstone.Units.Charge" />
        <element api="T:Gemstone.Units.CurrentUnit" />
        <element api="T:Gemstone.Units.Current" />
        <element api="T:Gemstone.Units.EnergyUnit" />
        <element api="T:Gemstone.Units.Energy" />
        <element api="T:Gemstone.Units.LengthUnit" />
        <element api="T:Gemstone.Units.Length" />
        <element api="T:Gemstone.Units.MassUnit" />
        <element api="T:Gemstone.Units.Mass" />
        <element api="T:Gemstone.Units.PowerUnit" />
        <element api="T:Gemstone.Units.Power" />
        <element api="T:Gemstone.Units.SI" />
        <element api="T:Gemstone.Units.SI2" />
        <element api="T:Gemstone.Units.SpeedUnit" />
        <element api="T:Gemstone.Units.Speed" />
        <element api="T:Gemstone.Units.TemperatureUnit" />
        <element api="T:Gemstone.Units.Temperature" />
        <element api="T:Gemstone.Units.TimeUnit" />
        <element api="T:Gemstone.Units.Time" />
        <element api="T:Gemstone.Units.VoltageUnit" />
        <element api="T:Gemstone.Units.Voltage" />
        <element api="T:Gemstone.Units.VolumeUnit" />
        <element api="T:Gemstone.Units.Volume" />
      </elements>
    </api>
    <api id="T:Gemstone.Units.Angle">
      <apidata name="Angle" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Angle" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Angle" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Angle.MaxValue" />
        <element api="F:Gemstone.Units.Angle.MinValue" />
        <element api="M:Gemstone.Units.Angle.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Angle.ToDegrees" />
        <element api="M:Gemstone.Units.Angle.ToGrads" />
        <element api="M:Gemstone.Units.Angle.ToArcMinutes" />
        <element api="M:Gemstone.Units.Angle.ToArcSeconds" />
        <element api="M:Gemstone.Units.Angle.ToAngularMil" />
        <element api="M:Gemstone.Units.Angle.ConvertTo(Gemstone.Units.AngleUnit)" />
        <element api="M:Gemstone.Units.Angle.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Angle.CompareTo(Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Angle.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Angle.Equals(Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Angle.GetHashCode" />
        <element api="M:Gemstone.Units.Angle.ToString" />
        <element api="M:Gemstone.Units.Angle.ToString(System.String)" />
        <element api="M:Gemstone.Units.Angle.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Angle.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Angle.Parse(System.String)" />
        <element api="M:Gemstone.Units.Angle.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Angle.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Angle.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Angle.TryParse(System.String,Gemstone.Units.Angle@)" />
        <element api="M:Gemstone.Units.Angle.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Angle@)" />
        <element api="M:Gemstone.Units.Angle.GetTypeCode" />
        <element api="M:Gemstone.Units.Angle.op_Equality(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Inequality(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_LessThan(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_LessThanOrEqual(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_GreaterThan(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_GreaterThanOrEqual(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Implicit(System.Double)~Gemstone.Units.Angle" />
        <element api="M:Gemstone.Units.Angle.op_Implicit(Gemstone.Units.Angle)~System.Double" />
        <element api="M:Gemstone.Units.Angle.op_Modulus(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Addition(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Subtraction(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Multiply(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Division(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.op_Exponent(Gemstone.Units.Angle,Gemstone.Units.Angle)" />
        <element api="M:Gemstone.Units.Angle.FromDegrees(System.Double)" />
        <element api="M:Gemstone.Units.Angle.FromGrads(System.Double)" />
        <element api="M:Gemstone.Units.Angle.FromArcMinutes(System.Double)" />
        <element api="M:Gemstone.Units.Angle.FromArcSeconds(System.Double)" />
        <element api="M:Gemstone.Units.Angle.FromAngularMil(System.Double)" />
        <element api="M:Gemstone.Units.Angle.ConvertFrom(System.Double,Gemstone.Units.AngleUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.CompareTo(Gemstone.Units.Angle)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Angle" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ConvertFrom(System.Double,Gemstone.Units.AngleUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.AngleUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ConvertTo(Gemstone.Units.AngleUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.AngleUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Equals(Gemstone.Units.Angle)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Angle" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.FromAngularMil(System.Double)">
      <apidata name="FromAngularMil" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.FromArcMinutes(System.Double)">
      <apidata name="FromArcMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.FromArcSeconds(System.Double)">
      <apidata name="FromArcSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.FromDegrees(System.Double)">
      <apidata name="FromDegrees" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.FromGrads(System.Double)">
      <apidata name="FromGrads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Angle.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Angle.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Addition(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Division(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Equality(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Exponent(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Angle.op_GreaterThan(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_GreaterThanOrEqual(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Implicit(Gemstone.Units.Angle)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Implicit(System.Double)~Gemstone.Units.Angle">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Inequality(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_LessThan(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_LessThanOrEqual(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Modulus(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Multiply(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.op_Subtraction(Gemstone.Units.Angle,Gemstone.Units.Angle)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Angle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToAngularMil">
      <apidata name="ToAngularMil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToArcMinutes">
      <apidata name="ToArcMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToArcSeconds">
      <apidata name="ToArcSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToDegrees">
      <apidata name="ToDegrees" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToGrads">
      <apidata name="ToGrads" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.TryParse(System.String,Gemstone.Units.Angle@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Angle" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Angle.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Angle@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Angle.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Angle" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Angle" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.AngleUnit">
      <apidata name="AngleUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.AngleUnit.Radians" />
        <element api="F:Gemstone.Units.AngleUnit.Degrees" />
        <element api="F:Gemstone.Units.AngleUnit.Grads" />
        <element api="F:Gemstone.Units.AngleUnit.ArcMinutes" />
        <element api="F:Gemstone.Units.AngleUnit.ArcSeconds" />
        <element api="F:Gemstone.Units.AngleUnit.AngularMil" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.AngularMil">
      <apidata name="AngularMil" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.ArcMinutes">
      <apidata name="ArcMinutes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.ArcSeconds">
      <apidata name="ArcSeconds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.Degrees">
      <apidata name="Degrees" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.Grads">
      <apidata name="Grads" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.AngleUnit.Radians">
      <apidata name="Radians" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.AngleUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Charge">
      <apidata name="Charge" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Charge" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Charge" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Charge.MaxValue" />
        <element api="F:Gemstone.Units.Charge.MinValue" />
        <element api="M:Gemstone.Units.Charge.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Charge.ToAmpereHours" />
        <element api="M:Gemstone.Units.Charge.ToAbcoulombs" />
        <element api="M:Gemstone.Units.Charge.ToStatcoulombs" />
        <element api="M:Gemstone.Units.Charge.ToAtomicUnitsOfCharge" />
        <element api="M:Gemstone.Units.Charge.ToFaraday" />
        <element api="M:Gemstone.Units.Charge.ConvertTo(Gemstone.Units.ChargeUnit)" />
        <element api="M:Gemstone.Units.Charge.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Charge.CompareTo(Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Charge.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Charge.Equals(Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Charge.GetHashCode" />
        <element api="M:Gemstone.Units.Charge.ToString" />
        <element api="M:Gemstone.Units.Charge.ToString(System.String)" />
        <element api="M:Gemstone.Units.Charge.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Charge.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Charge.Parse(System.String)" />
        <element api="M:Gemstone.Units.Charge.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Charge.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Charge.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Charge.TryParse(System.String,Gemstone.Units.Charge@)" />
        <element api="M:Gemstone.Units.Charge.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Charge@)" />
        <element api="M:Gemstone.Units.Charge.GetTypeCode" />
        <element api="M:Gemstone.Units.Charge.op_Equality(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Inequality(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_LessThan(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_LessThanOrEqual(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_GreaterThan(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_GreaterThanOrEqual(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Implicit(System.Double)~Gemstone.Units.Charge" />
        <element api="M:Gemstone.Units.Charge.op_Implicit(Gemstone.Units.Charge)~System.Double" />
        <element api="M:Gemstone.Units.Charge.op_Modulus(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Addition(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Subtraction(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Multiply(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Division(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.op_Exponent(Gemstone.Units.Charge,Gemstone.Units.Charge)" />
        <element api="M:Gemstone.Units.Charge.FromAmpereHours(System.Double)" />
        <element api="M:Gemstone.Units.Charge.FromAbcoulombs(System.Double)" />
        <element api="M:Gemstone.Units.Charge.FromStatcoulombs(System.Double)" />
        <element api="M:Gemstone.Units.Charge.FromAtomicUnitsOfCharge(System.Double)" />
        <element api="M:Gemstone.Units.Charge.FromFaraday(System.Double)" />
        <element api="M:Gemstone.Units.Charge.ConvertFrom(System.Double,Gemstone.Units.ChargeUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.CompareTo(Gemstone.Units.Charge)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Charge" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ConvertFrom(System.Double,Gemstone.Units.ChargeUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ConvertTo(Gemstone.Units.ChargeUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Equals(Gemstone.Units.Charge)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Charge" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.FromAbcoulombs(System.Double)">
      <apidata name="FromAbcoulombs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.FromAmpereHours(System.Double)">
      <apidata name="FromAmpereHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.FromAtomicUnitsOfCharge(System.Double)">
      <apidata name="FromAtomicUnitsOfCharge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.FromFaraday(System.Double)">
      <apidata name="FromFaraday" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.FromStatcoulombs(System.Double)">
      <apidata name="FromStatcoulombs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Charge.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Charge.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Addition(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Division(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Equality(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Exponent(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Charge.op_GreaterThan(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_GreaterThanOrEqual(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Implicit(Gemstone.Units.Charge)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Implicit(System.Double)~Gemstone.Units.Charge">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Inequality(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_LessThan(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_LessThanOrEqual(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Modulus(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Multiply(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.op_Subtraction(Gemstone.Units.Charge,Gemstone.Units.Charge)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Charge" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToAbcoulombs">
      <apidata name="ToAbcoulombs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToAmpereHours">
      <apidata name="ToAmpereHours" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToAtomicUnitsOfCharge">
      <apidata name="ToAtomicUnitsOfCharge" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToFaraday">
      <apidata name="ToFaraday" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToStatcoulombs">
      <apidata name="ToStatcoulombs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.TryParse(System.String,Gemstone.Units.Charge@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Charge" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Charge.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Charge@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Charge.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Charge" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.ChargeUnit">
      <apidata name="ChargeUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.ChargeUnit.Coulombs" />
        <element api="F:Gemstone.Units.ChargeUnit.AmpereHours" />
        <element api="F:Gemstone.Units.ChargeUnit.Abcoulombs" />
        <element api="F:Gemstone.Units.ChargeUnit.Statcoulombs" />
        <element api="F:Gemstone.Units.ChargeUnit.AtomicUnitsOfCharge" />
        <element api="F:Gemstone.Units.ChargeUnit.Faraday" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.Abcoulombs">
      <apidata name="Abcoulombs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.AmpereHours">
      <apidata name="AmpereHours" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.AtomicUnitsOfCharge">
      <apidata name="AtomicUnitsOfCharge" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.Coulombs">
      <apidata name="Coulombs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.Faraday">
      <apidata name="Faraday" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.ChargeUnit.Statcoulombs">
      <apidata name="Statcoulombs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.ChargeUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Current">
      <apidata name="Current" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Current" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Current" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Current.MaxValue" />
        <element api="F:Gemstone.Units.Current.MinValue" />
        <element api="M:Gemstone.Units.Current.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Current.ToAbamperes" />
        <element api="M:Gemstone.Units.Current.ToStatamperes" />
        <element api="M:Gemstone.Units.Current.ConvertTo(Gemstone.Units.CurrentUnit)" />
        <element api="M:Gemstone.Units.Current.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Current.CompareTo(Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Current.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Current.Equals(Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Current.GetHashCode" />
        <element api="M:Gemstone.Units.Current.ToString" />
        <element api="M:Gemstone.Units.Current.ToString(System.String)" />
        <element api="M:Gemstone.Units.Current.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Current.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Current.Parse(System.String)" />
        <element api="M:Gemstone.Units.Current.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Current.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Current.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Current.TryParse(System.String,Gemstone.Units.Current@)" />
        <element api="M:Gemstone.Units.Current.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Current@)" />
        <element api="M:Gemstone.Units.Current.GetTypeCode" />
        <element api="M:Gemstone.Units.Current.op_Equality(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Inequality(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_LessThan(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_LessThanOrEqual(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_GreaterThan(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_GreaterThanOrEqual(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Implicit(System.Double)~Gemstone.Units.Current" />
        <element api="M:Gemstone.Units.Current.op_Implicit(Gemstone.Units.Current)~System.Double" />
        <element api="M:Gemstone.Units.Current.op_Modulus(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Addition(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Subtraction(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Multiply(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Division(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.op_Exponent(Gemstone.Units.Current,Gemstone.Units.Current)" />
        <element api="M:Gemstone.Units.Current.FromAbamperes(System.Double)" />
        <element api="M:Gemstone.Units.Current.FromStatamperes(System.Double)" />
        <element api="M:Gemstone.Units.Current.ConvertFrom(System.Double,Gemstone.Units.CurrentUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.CompareTo(Gemstone.Units.Current)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Current" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ConvertFrom(System.Double,Gemstone.Units.CurrentUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ConvertTo(Gemstone.Units.CurrentUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Equals(Gemstone.Units.Current)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Current" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.FromAbamperes(System.Double)">
      <apidata name="FromAbamperes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.FromStatamperes(System.Double)">
      <apidata name="FromStatamperes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Current.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Current.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Addition(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Division(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Equality(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Exponent(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Current.op_GreaterThan(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_GreaterThanOrEqual(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Implicit(Gemstone.Units.Current)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Implicit(System.Double)~Gemstone.Units.Current">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Inequality(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_LessThan(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_LessThanOrEqual(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Modulus(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Multiply(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.op_Subtraction(Gemstone.Units.Current,Gemstone.Units.Current)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Current" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Current" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToAbamperes">
      <apidata name="ToAbamperes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToStatamperes">
      <apidata name="ToStatamperes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.TryParse(System.String,Gemstone.Units.Current@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Current" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Current.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Current@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Current.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Current" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Current" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.CurrentUnit">
      <apidata name="CurrentUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.CurrentUnit.Amperes" />
        <element api="F:Gemstone.Units.CurrentUnit.Abamperes" />
        <element api="F:Gemstone.Units.CurrentUnit.Statamperes" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.CurrentUnit.Abamperes">
      <apidata name="Abamperes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.CurrentUnit.Amperes">
      <apidata name="Amperes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.CurrentUnit.Statamperes">
      <apidata name="Statamperes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.CurrentUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Energy">
      <apidata name="Energy" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Energy" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Energy" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Energy.MaxValue" />
        <element api="F:Gemstone.Units.Energy.MinValue" />
        <element api="M:Gemstone.Units.Energy.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Energy.ToCoulombs(Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Energy.ToWattHours" />
        <element api="M:Gemstone.Units.Energy.ToBTU" />
        <element api="M:Gemstone.Units.Energy.ToCelsiusHeatUnits" />
        <element api="M:Gemstone.Units.Energy.ToLitersAtmosphere" />
        <element api="M:Gemstone.Units.Energy.ToCalories" />
        <element api="M:Gemstone.Units.Energy.ToHorsepowerHours" />
        <element api="M:Gemstone.Units.Energy.ToBarrelsOfOil" />
        <element api="M:Gemstone.Units.Energy.ToTonsOfCoal" />
        <element api="M:Gemstone.Units.Energy.ConvertTo(Gemstone.Units.EnergyUnit)" />
        <element api="M:Gemstone.Units.Energy.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Energy.CompareTo(Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Energy.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Energy.Equals(Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Energy.GetHashCode" />
        <element api="M:Gemstone.Units.Energy.ToString" />
        <element api="M:Gemstone.Units.Energy.ToString(System.String)" />
        <element api="M:Gemstone.Units.Energy.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Energy.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Energy.Parse(System.String)" />
        <element api="M:Gemstone.Units.Energy.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Energy.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Energy.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Energy.TryParse(System.String,Gemstone.Units.Energy@)" />
        <element api="M:Gemstone.Units.Energy.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Energy@)" />
        <element api="M:Gemstone.Units.Energy.GetTypeCode" />
        <element api="M:Gemstone.Units.Energy.op_Equality(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Inequality(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_LessThan(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_LessThanOrEqual(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_GreaterThan(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_GreaterThanOrEqual(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Implicit(System.Double)~Gemstone.Units.Energy" />
        <element api="M:Gemstone.Units.Energy.op_Implicit(Gemstone.Units.Energy)~System.Double" />
        <element api="M:Gemstone.Units.Energy.op_Modulus(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Addition(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Subtraction(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Multiply(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Division(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.op_Exponent(Gemstone.Units.Energy,Gemstone.Units.Energy)" />
        <element api="M:Gemstone.Units.Energy.FromWattHours(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromBTU(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromCelsiusHeatUnits(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromLitersAtmosphere(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromCalories(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromHorsepowerHours(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromBarrelsOfOil(System.Double)" />
        <element api="M:Gemstone.Units.Energy.FromTonOfCoal(System.Double)" />
        <element api="M:Gemstone.Units.Energy.ConvertFrom(System.Double,Gemstone.Units.EnergyUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.CompareTo(Gemstone.Units.Energy)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Energy" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ConvertFrom(System.Double,Gemstone.Units.EnergyUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ConvertTo(Gemstone.Units.EnergyUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Equals(Gemstone.Units.Energy)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Energy" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromBarrelsOfOil(System.Double)">
      <apidata name="FromBarrelsOfOil" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromBTU(System.Double)">
      <apidata name="FromBTU" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromCalories(System.Double)">
      <apidata name="FromCalories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromCelsiusHeatUnits(System.Double)">
      <apidata name="FromCelsiusHeatUnits" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromHorsepowerHours(System.Double)">
      <apidata name="FromHorsepowerHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromLitersAtmosphere(System.Double)">
      <apidata name="FromLitersAtmosphere" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromTonOfCoal(System.Double)">
      <apidata name="FromTonOfCoal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.FromWattHours(System.Double)">
      <apidata name="FromWattHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Energy.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Energy.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Addition(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Division(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Equality(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Exponent(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Energy.op_GreaterThan(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_GreaterThanOrEqual(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Implicit(Gemstone.Units.Energy)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Implicit(System.Double)~Gemstone.Units.Energy">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Inequality(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_LessThan(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_LessThanOrEqual(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Modulus(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Multiply(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.op_Subtraction(Gemstone.Units.Energy,Gemstone.Units.Energy)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Energy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToBarrelsOfOil">
      <apidata name="ToBarrelsOfOil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToBTU">
      <apidata name="ToBTU" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToCalories">
      <apidata name="ToCalories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToCelsiusHeatUnits">
      <apidata name="ToCelsiusHeatUnits" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToCoulombs(Gemstone.Units.Voltage)">
      <apidata name="ToCoulombs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="volts">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Charge" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToHorsepowerHours">
      <apidata name="ToHorsepowerHours" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToLitersAtmosphere">
      <apidata name="ToLitersAtmosphere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToTonsOfCoal">
      <apidata name="ToTonsOfCoal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.ToWattHours">
      <apidata name="ToWattHours" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.TryParse(System.String,Gemstone.Units.Energy@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Energy" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Energy.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Energy@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Energy.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Energy" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Energy" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.EnergyUnit">
      <apidata name="EnergyUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.EnergyUnit.Joules" />
        <element api="F:Gemstone.Units.EnergyUnit.WattHours" />
        <element api="F:Gemstone.Units.EnergyUnit.BTU" />
        <element api="F:Gemstone.Units.EnergyUnit.CelsiusHeatUnits" />
        <element api="F:Gemstone.Units.EnergyUnit.LitersAtmosphere" />
        <element api="F:Gemstone.Units.EnergyUnit.Calories" />
        <element api="F:Gemstone.Units.EnergyUnit.HorsepowerHours" />
        <element api="F:Gemstone.Units.EnergyUnit.BarrelsOfOil" />
        <element api="F:Gemstone.Units.EnergyUnit.TonsOfCoal" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.BarrelsOfOil">
      <apidata name="BarrelsOfOil" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.BTU">
      <apidata name="BTU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.Calories">
      <apidata name="Calories" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.CelsiusHeatUnits">
      <apidata name="CelsiusHeatUnits" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.HorsepowerHours">
      <apidata name="HorsepowerHours" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.Joules">
      <apidata name="Joules" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.LitersAtmosphere">
      <apidata name="LitersAtmosphere" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.TonsOfCoal">
      <apidata name="TonsOfCoal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.EnergyUnit.WattHours">
      <apidata name="WattHours" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.EnergyUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Length">
      <apidata name="Length" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Length" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Length" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Length.MaxValue" />
        <element api="F:Gemstone.Units.Length.MinValue" />
        <element api="M:Gemstone.Units.Length.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Length.ToFeet" />
        <element api="M:Gemstone.Units.Length.ToYards" />
        <element api="M:Gemstone.Units.Length.ToInches" />
        <element api="M:Gemstone.Units.Length.ToMiles" />
        <element api="M:Gemstone.Units.Length.ToLightSeconds" />
        <element api="M:Gemstone.Units.Length.ToUSSurveyFeet" />
        <element api="M:Gemstone.Units.Length.ToUSSurveyMiles" />
        <element api="M:Gemstone.Units.Length.ToNauticalMiles" />
        <element api="M:Gemstone.Units.Length.ConvertTo(Gemstone.Units.LengthUnit)" />
        <element api="M:Gemstone.Units.Length.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Length.CompareTo(Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Length.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Length.Equals(Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Length.GetHashCode" />
        <element api="M:Gemstone.Units.Length.ToString" />
        <element api="M:Gemstone.Units.Length.ToString(System.String)" />
        <element api="M:Gemstone.Units.Length.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Length.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Length.Parse(System.String)" />
        <element api="M:Gemstone.Units.Length.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Length.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Length.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Length.TryParse(System.String,Gemstone.Units.Length@)" />
        <element api="M:Gemstone.Units.Length.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Length@)" />
        <element api="M:Gemstone.Units.Length.GetTypeCode" />
        <element api="M:Gemstone.Units.Length.op_Equality(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Inequality(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_LessThan(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_LessThanOrEqual(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_GreaterThan(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_GreaterThanOrEqual(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Implicit(System.Double)~Gemstone.Units.Length" />
        <element api="M:Gemstone.Units.Length.op_Implicit(Gemstone.Units.Length)~System.Double" />
        <element api="M:Gemstone.Units.Length.op_Modulus(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Addition(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Subtraction(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Multiply(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Division(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.op_Exponent(Gemstone.Units.Length,Gemstone.Units.Length)" />
        <element api="M:Gemstone.Units.Length.FromFeet(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromYards(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromInches(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromMiles(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromLightSeconds(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromUSSurveyFeet(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromUSSurveyMiles(System.Double)" />
        <element api="M:Gemstone.Units.Length.FromNauticalMiles(System.Double)" />
        <element api="M:Gemstone.Units.Length.ConvertFrom(System.Double,Gemstone.Units.LengthUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.CompareTo(Gemstone.Units.Length)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Length" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ConvertFrom(System.Double,Gemstone.Units.LengthUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.LengthUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ConvertTo(Gemstone.Units.LengthUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.LengthUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Equals(Gemstone.Units.Length)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Length" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromFeet(System.Double)">
      <apidata name="FromFeet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromInches(System.Double)">
      <apidata name="FromInches" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromLightSeconds(System.Double)">
      <apidata name="FromLightSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromMiles(System.Double)">
      <apidata name="FromMiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromNauticalMiles(System.Double)">
      <apidata name="FromNauticalMiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromUSSurveyFeet(System.Double)">
      <apidata name="FromUSSurveyFeet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromUSSurveyMiles(System.Double)">
      <apidata name="FromUSSurveyMiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.FromYards(System.Double)">
      <apidata name="FromYards" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Length.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Length.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Addition(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Division(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Equality(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Exponent(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Length.op_GreaterThan(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_GreaterThanOrEqual(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Implicit(Gemstone.Units.Length)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Implicit(System.Double)~Gemstone.Units.Length">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Inequality(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_LessThan(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_LessThanOrEqual(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Modulus(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Multiply(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.op_Subtraction(Gemstone.Units.Length,Gemstone.Units.Length)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Length" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Length" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToFeet">
      <apidata name="ToFeet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToInches">
      <apidata name="ToInches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToLightSeconds">
      <apidata name="ToLightSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToMiles">
      <apidata name="ToMiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToNauticalMiles">
      <apidata name="ToNauticalMiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToUSSurveyFeet">
      <apidata name="ToUSSurveyFeet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToUSSurveyMiles">
      <apidata name="ToUSSurveyMiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.ToYards">
      <apidata name="ToYards" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.TryParse(System.String,Gemstone.Units.Length@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Length" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Length.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Length@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Length.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Length" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Length" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.LengthUnit">
      <apidata name="LengthUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.LengthUnit.Meters" />
        <element api="F:Gemstone.Units.LengthUnit.Feet" />
        <element api="F:Gemstone.Units.LengthUnit.Inches" />
        <element api="F:Gemstone.Units.LengthUnit.Miles" />
        <element api="F:Gemstone.Units.LengthUnit.LightSeconds" />
        <element api="F:Gemstone.Units.LengthUnit.USSurveyFeet" />
        <element api="F:Gemstone.Units.LengthUnit.USSurveyMiles" />
        <element api="F:Gemstone.Units.LengthUnit.NauticalMiles" />
        <element api="F:Gemstone.Units.LengthUnit.Yards" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.Feet">
      <apidata name="Feet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.Inches">
      <apidata name="Inches" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.LightSeconds">
      <apidata name="LightSeconds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.Meters">
      <apidata name="Meters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.Miles">
      <apidata name="Miles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.NauticalMiles">
      <apidata name="NauticalMiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.USSurveyFeet">
      <apidata name="USSurveyFeet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.USSurveyMiles">
      <apidata name="USSurveyMiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.LengthUnit.Yards">
      <apidata name="Yards" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.LengthUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Mass">
      <apidata name="Mass" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Mass" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Mass" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Mass.MaxValue" />
        <element api="F:Gemstone.Units.Mass.MinValue" />
        <element api="M:Gemstone.Units.Mass.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Mass.ToOunces" />
        <element api="M:Gemstone.Units.Mass.ToPounds" />
        <element api="M:Gemstone.Units.Mass.ToMetricPounds" />
        <element api="M:Gemstone.Units.Mass.ToTons" />
        <element api="M:Gemstone.Units.Mass.ToMetricTons" />
        <element api="M:Gemstone.Units.Mass.ToLongTons" />
        <element api="M:Gemstone.Units.Mass.ConvertTo(Gemstone.Units.MassUnit)" />
        <element api="M:Gemstone.Units.Mass.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Mass.CompareTo(Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Mass.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Mass.Equals(Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Mass.GetHashCode" />
        <element api="M:Gemstone.Units.Mass.ToString" />
        <element api="M:Gemstone.Units.Mass.ToString(System.String)" />
        <element api="M:Gemstone.Units.Mass.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Mass.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Mass.Parse(System.String)" />
        <element api="M:Gemstone.Units.Mass.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Mass.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Mass.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Mass.TryParse(System.String,Gemstone.Units.Mass@)" />
        <element api="M:Gemstone.Units.Mass.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Mass@)" />
        <element api="M:Gemstone.Units.Mass.GetTypeCode" />
        <element api="M:Gemstone.Units.Mass.op_Equality(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Inequality(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_LessThan(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_LessThanOrEqual(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_GreaterThan(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_GreaterThanOrEqual(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Implicit(System.Double)~Gemstone.Units.Mass" />
        <element api="M:Gemstone.Units.Mass.op_Implicit(Gemstone.Units.Mass)~System.Double" />
        <element api="M:Gemstone.Units.Mass.op_Modulus(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Addition(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Subtraction(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Multiply(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Division(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.op_Exponent(Gemstone.Units.Mass,Gemstone.Units.Mass)" />
        <element api="M:Gemstone.Units.Mass.FromOunces(System.Double)" />
        <element api="M:Gemstone.Units.Mass.FromPounds(System.Double)" />
        <element api="M:Gemstone.Units.Mass.FromMetricPounds(System.Double)" />
        <element api="M:Gemstone.Units.Mass.FromTons(System.Double)" />
        <element api="M:Gemstone.Units.Mass.FromMetricTons(System.Double)" />
        <element api="M:Gemstone.Units.Mass.FromLongTons(System.Double)" />
        <element api="M:Gemstone.Units.Mass.ConvertFrom(System.Double,Gemstone.Units.MassUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.CompareTo(Gemstone.Units.Mass)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Mass" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ConvertFrom(System.Double,Gemstone.Units.MassUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.MassUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ConvertTo(Gemstone.Units.MassUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.MassUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Equals(Gemstone.Units.Mass)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Mass" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromLongTons(System.Double)">
      <apidata name="FromLongTons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromMetricPounds(System.Double)">
      <apidata name="FromMetricPounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromMetricTons(System.Double)">
      <apidata name="FromMetricTons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromOunces(System.Double)">
      <apidata name="FromOunces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromPounds(System.Double)">
      <apidata name="FromPounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.FromTons(System.Double)">
      <apidata name="FromTons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Mass.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Mass.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Addition(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Division(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Equality(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Exponent(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Mass.op_GreaterThan(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_GreaterThanOrEqual(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Implicit(Gemstone.Units.Mass)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Implicit(System.Double)~Gemstone.Units.Mass">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Inequality(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_LessThan(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_LessThanOrEqual(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Modulus(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Multiply(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.op_Subtraction(Gemstone.Units.Mass,Gemstone.Units.Mass)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Mass" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToLongTons">
      <apidata name="ToLongTons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToMetricPounds">
      <apidata name="ToMetricPounds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToMetricTons">
      <apidata name="ToMetricTons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToOunces">
      <apidata name="ToOunces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToPounds">
      <apidata name="ToPounds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.ToTons">
      <apidata name="ToTons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.TryParse(System.String,Gemstone.Units.Mass@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Mass" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Mass.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Mass@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Mass.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Mass" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Mass" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.MassUnit">
      <apidata name="MassUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.MassUnit.Kilograms" />
        <element api="F:Gemstone.Units.MassUnit.Ounces" />
        <element api="F:Gemstone.Units.MassUnit.Pounds" />
        <element api="F:Gemstone.Units.MassUnit.MetricPounds" />
        <element api="F:Gemstone.Units.MassUnit.Tons" />
        <element api="F:Gemstone.Units.MassUnit.MectricTons" />
        <element api="F:Gemstone.Units.MassUnit.LongTons" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.Kilograms">
      <apidata name="Kilograms" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.LongTons">
      <apidata name="LongTons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.MectricTons">
      <apidata name="MectricTons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.MetricPounds">
      <apidata name="MetricPounds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.Ounces">
      <apidata name="Ounces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.Pounds">
      <apidata name="Pounds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.MassUnit.Tons">
      <apidata name="Tons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.MassUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Power">
      <apidata name="Power" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Power" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Power" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Power.MaxValue" />
        <element api="F:Gemstone.Units.Power.MinValue" />
        <element api="M:Gemstone.Units.Power.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Power.ToHorsepower" />
        <element api="M:Gemstone.Units.Power.ToMetricHorsepower" />
        <element api="M:Gemstone.Units.Power.ToBoilerHorsepower" />
        <element api="M:Gemstone.Units.Power.ToBTUPerSecond" />
        <element api="M:Gemstone.Units.Power.ToCaloriesPerSecond" />
        <element api="M:Gemstone.Units.Power.ToLitersAtmospherePerSecond" />
        <element api="M:Gemstone.Units.Power.ConvertTo(Gemstone.Units.PowerUnit)" />
        <element api="M:Gemstone.Units.Power.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Power.CompareTo(Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Power.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Power.Equals(Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Power.GetHashCode" />
        <element api="M:Gemstone.Units.Power.ToString" />
        <element api="M:Gemstone.Units.Power.ToString(System.String)" />
        <element api="M:Gemstone.Units.Power.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Power.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Power.Parse(System.String)" />
        <element api="M:Gemstone.Units.Power.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Power.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Power.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Power.TryParse(System.String,Gemstone.Units.Power@)" />
        <element api="M:Gemstone.Units.Power.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Power@)" />
        <element api="M:Gemstone.Units.Power.GetTypeCode" />
        <element api="M:Gemstone.Units.Power.op_Equality(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Inequality(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_LessThan(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_LessThanOrEqual(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_GreaterThan(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_GreaterThanOrEqual(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Implicit(System.Double)~Gemstone.Units.Power" />
        <element api="M:Gemstone.Units.Power.op_Implicit(Gemstone.Units.Power)~System.Double" />
        <element api="M:Gemstone.Units.Power.op_Modulus(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Addition(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Subtraction(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Multiply(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Division(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.op_Exponent(Gemstone.Units.Power,Gemstone.Units.Power)" />
        <element api="M:Gemstone.Units.Power.FromHorsepower(System.Double)" />
        <element api="M:Gemstone.Units.Power.FromMetricHorsepower(System.Double)" />
        <element api="M:Gemstone.Units.Power.FromBoilerHorsepower(System.Double)" />
        <element api="M:Gemstone.Units.Power.FromBTUPerSecond(System.Double)" />
        <element api="M:Gemstone.Units.Power.FromCaloriesPerSecond(System.Double)" />
        <element api="M:Gemstone.Units.Power.FromLitersAtmospherePerSecond(System.Double)" />
        <element api="M:Gemstone.Units.Power.ConvertFrom(System.Double,Gemstone.Units.PowerUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.CompareTo(Gemstone.Units.Power)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Power" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ConvertFrom(System.Double,Gemstone.Units.PowerUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.PowerUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ConvertTo(Gemstone.Units.PowerUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.PowerUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Equals(Gemstone.Units.Power)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Power" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromBoilerHorsepower(System.Double)">
      <apidata name="FromBoilerHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromBTUPerSecond(System.Double)">
      <apidata name="FromBTUPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromCaloriesPerSecond(System.Double)">
      <apidata name="FromCaloriesPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromHorsepower(System.Double)">
      <apidata name="FromHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromLitersAtmospherePerSecond(System.Double)">
      <apidata name="FromLitersAtmospherePerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.FromMetricHorsepower(System.Double)">
      <apidata name="FromMetricHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Power.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Power.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Addition(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Division(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Equality(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Exponent(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Power.op_GreaterThan(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_GreaterThanOrEqual(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Implicit(Gemstone.Units.Power)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Implicit(System.Double)~Gemstone.Units.Power">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Inequality(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_LessThan(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_LessThanOrEqual(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Modulus(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Multiply(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.op_Subtraction(Gemstone.Units.Power,Gemstone.Units.Power)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Power" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Power" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToBoilerHorsepower">
      <apidata name="ToBoilerHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToBTUPerSecond">
      <apidata name="ToBTUPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToCaloriesPerSecond">
      <apidata name="ToCaloriesPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToHorsepower">
      <apidata name="ToHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToLitersAtmospherePerSecond">
      <apidata name="ToLitersAtmospherePerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToMetricHorsepower">
      <apidata name="ToMetricHorsepower" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.TryParse(System.String,Gemstone.Units.Power@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Power" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Power.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Power@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Power.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Power" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Power" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.PowerUnit">
      <apidata name="PowerUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.PowerUnit.Watts" />
        <element api="F:Gemstone.Units.PowerUnit.Horsepower" />
        <element api="F:Gemstone.Units.PowerUnit.MetricHorsepower" />
        <element api="F:Gemstone.Units.PowerUnit.BoilerHorsepower" />
        <element api="F:Gemstone.Units.PowerUnit.BTUPerSecond" />
        <element api="F:Gemstone.Units.PowerUnit.CaloriesPerSecond" />
        <element api="F:Gemstone.Units.PowerUnit.LitersAtmospherePerSecond" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.BoilerHorsepower">
      <apidata name="BoilerHorsepower" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.BTUPerSecond">
      <apidata name="BTUPerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.CaloriesPerSecond">
      <apidata name="CaloriesPerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.Horsepower">
      <apidata name="Horsepower" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.LitersAtmospherePerSecond">
      <apidata name="LitersAtmospherePerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.MetricHorsepower">
      <apidata name="MetricHorsepower" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.PowerUnit.Watts">
      <apidata name="Watts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.PowerUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.SI">
      <apidata name="SI" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.Units.SI.Yotta" />
        <element api="F:Gemstone.Units.SI.Zetta" />
        <element api="F:Gemstone.Units.SI.Exa" />
        <element api="F:Gemstone.Units.SI.Peta" />
        <element api="F:Gemstone.Units.SI.Tera" />
        <element api="F:Gemstone.Units.SI.Giga" />
        <element api="F:Gemstone.Units.SI.Mega" />
        <element api="F:Gemstone.Units.SI.Kilo" />
        <element api="F:Gemstone.Units.SI.Hecto" />
        <element api="F:Gemstone.Units.SI.Deca" />
        <element api="F:Gemstone.Units.SI.Deci" />
        <element api="F:Gemstone.Units.SI.Centi" />
        <element api="F:Gemstone.Units.SI.Milli" />
        <element api="F:Gemstone.Units.SI.Micro" />
        <element api="F:Gemstone.Units.SI.Nano" />
        <element api="F:Gemstone.Units.SI.Pico" />
        <element api="F:Gemstone.Units.SI.Femto" />
        <element api="F:Gemstone.Units.SI.Atto" />
        <element api="F:Gemstone.Units.SI.Zepto" />
        <element api="F:Gemstone.Units.SI.Yocto" />
        <element api="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String[],System.Double,System.Double)" />
        <element api="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String,System.Double,System.Double)" />
        <element api="M:Gemstone.Units.SI.ToScaledString(System.Double,System.Int32,System.String,System.String[],System.Double,System.Double)" />
        <element api="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String,System.String[],System.Int32,System.Double,System.Double)" />
        <element api="P:Gemstone.Units.SI.Names" />
        <element api="P:Gemstone.Units.SI.Symbols" />
        <element api="P:Gemstone.Units.SI.Factors" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Atto">
      <apidata name="Atto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-18</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Centi">
      <apidata name="Centi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>0.01</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Deca">
      <apidata name="Deca" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Deci">
      <apidata name="Deci" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>0.1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Exa">
      <apidata name="Exa" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E+18</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI.Factors">
      <apidata name="Factors" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Factors" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Double" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Femto">
      <apidata name="Femto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-15</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Giga">
      <apidata name="Giga" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1000000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Hecto">
      <apidata name="Hecto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>100</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Kilo">
      <apidata name="Kilo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Mega">
      <apidata name="Mega" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Micro">
      <apidata name="Micro" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-06</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Milli">
      <apidata name="Milli" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>0.001</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI.Names">
      <apidata name="Names" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Names" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Nano">
      <apidata name="Nano" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-09</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Peta">
      <apidata name="Peta" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E+15</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Pico">
      <apidata name="Pico" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-12</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI.Symbols">
      <apidata name="Symbols" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Symbols" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Tera">
      <apidata name="Tera" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1000000000000</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI.ToScaledString(System.Double,System.Int32,System.String,System.String[],System.Double,System.Double)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="decimalPlaces">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E-24</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E+24</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String,System.Double,System.Double)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E-24</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E+24</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String,System.String[],System.Int32,System.Double,System.Double)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="decimalPlaces" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E-24</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E+24</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI.ToScaledString(System.Double,System.String,System.String[],System.Double,System.Double)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E-24</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>1E+24</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Yocto">
      <apidata name="Yocto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-24</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Yotta">
      <apidata name="Yotta" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E+24</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Zepto">
      <apidata name="Zepto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-21</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI.Zetta">
      <apidata name="Zetta" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E+21</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.SI2">
      <apidata name="SI2" group="type" subgroup="class" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gemstone.Units.SI2.Exa" />
        <element api="F:Gemstone.Units.SI2.Exbi" />
        <element api="F:Gemstone.Units.SI2.Peta" />
        <element api="F:Gemstone.Units.SI2.Pebi" />
        <element api="F:Gemstone.Units.SI2.Tera" />
        <element api="F:Gemstone.Units.SI2.Tebi" />
        <element api="F:Gemstone.Units.SI2.Giga" />
        <element api="F:Gemstone.Units.SI2.Gibi" />
        <element api="F:Gemstone.Units.SI2.Mega" />
        <element api="F:Gemstone.Units.SI2.Mebi" />
        <element api="F:Gemstone.Units.SI2.Kilo" />
        <element api="F:Gemstone.Units.SI2.Kibi" />
        <element api="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String[],System.Int64,System.Int64)" />
        <element api="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String,System.Int64,System.Int64)" />
        <element api="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.Int32,System.String,System.String[],System.Int64,System.Int64)" />
        <element api="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String,System.String[],System.Int32,System.Int64,System.Int64)" />
        <element api="P:Gemstone.Units.SI2.Names" />
        <element api="P:Gemstone.Units.SI2.Symbols" />
        <element api="P:Gemstone.Units.SI2.IECNames" />
        <element api="P:Gemstone.Units.SI2.IECSymbols" />
        <element api="P:Gemstone.Units.SI2.Factors" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Exa">
      <apidata name="Exa" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1152921504606846976</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Exbi">
      <apidata name="Exbi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1152921504606846976</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI2.Factors">
      <apidata name="Factors" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Factors" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int64" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Gibi">
      <apidata name="Gibi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Giga">
      <apidata name="Giga" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI2.IECNames">
      <apidata name="IECNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IECNames" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI2.IECSymbols">
      <apidata name="IECSymbols" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IECSymbols" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Kibi">
      <apidata name="Kibi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Kilo">
      <apidata name="Kilo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Mebi">
      <apidata name="Mebi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Mega">
      <apidata name="Mega" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI2.Names">
      <apidata name="Names" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Names" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Pebi">
      <apidata name="Pebi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1125899906842624</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Peta">
      <apidata name="Peta" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1125899906842624</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Units.SI2.Symbols">
      <apidata name="Symbols" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Symbols" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Tebi">
      <apidata name="Tebi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1099511627776</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SI2.Tera">
      <apidata name="Tera" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <value>1099511627776</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.Int32,System.String,System.String[],System.Int64,System.Int64)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="decimalPlaces">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1152921504606846976</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String,System.Int64,System.Int64)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1152921504606846976</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String,System.String[],System.Int32,System.Int64,System.Int64)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="decimalPlaces" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1152921504606846976</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.SI2.ToScaledString(System.Int64,System.String,System.String[],System.Int64,System.Int64)">
      <apidata name="ToScaledString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/SI2.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalUnits">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="unitName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="symbolNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
        <parameter name="maximumFactor" optional="true">
          <type api="T:System.Int64" ref="false" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1152921504606846976</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SI2" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Speed">
      <apidata name="Speed" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Speed" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Speed" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Speed.MaxValue" />
        <element api="F:Gemstone.Units.Speed.MinValue" />
        <element api="M:Gemstone.Units.Speed.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Speed.ToMilesPerHour" />
        <element api="M:Gemstone.Units.Speed.ToKilometersPerHour" />
        <element api="M:Gemstone.Units.Speed.ToFeetPerMinute" />
        <element api="M:Gemstone.Units.Speed.ToInchesPerSecond" />
        <element api="M:Gemstone.Units.Speed.ToKnots" />
        <element api="M:Gemstone.Units.Speed.ToMach" />
        <element api="M:Gemstone.Units.Speed.ConvertTo(Gemstone.Units.SpeedUnit)" />
        <element api="M:Gemstone.Units.Speed.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Speed.CompareTo(Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Speed.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Speed.Equals(Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Speed.GetHashCode" />
        <element api="M:Gemstone.Units.Speed.ToString" />
        <element api="M:Gemstone.Units.Speed.ToString(System.String)" />
        <element api="M:Gemstone.Units.Speed.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Speed.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Speed.Parse(System.String)" />
        <element api="M:Gemstone.Units.Speed.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Speed.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Speed.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Speed.TryParse(System.String,Gemstone.Units.Speed@)" />
        <element api="M:Gemstone.Units.Speed.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Speed@)" />
        <element api="M:Gemstone.Units.Speed.GetTypeCode" />
        <element api="M:Gemstone.Units.Speed.op_Equality(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Inequality(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_LessThan(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_LessThanOrEqual(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_GreaterThan(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_GreaterThanOrEqual(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Implicit(System.Double)~Gemstone.Units.Speed" />
        <element api="M:Gemstone.Units.Speed.op_Implicit(Gemstone.Units.Speed)~System.Double" />
        <element api="M:Gemstone.Units.Speed.op_Modulus(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Addition(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Subtraction(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Multiply(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Division(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.op_Exponent(Gemstone.Units.Speed,Gemstone.Units.Speed)" />
        <element api="M:Gemstone.Units.Speed.FromMilesPerHour(System.Double)" />
        <element api="M:Gemstone.Units.Speed.FromKilometersPerHour(System.Double)" />
        <element api="M:Gemstone.Units.Speed.FromFeetPerMinute(System.Double)" />
        <element api="M:Gemstone.Units.Speed.FromInchesPerSecond(System.Double)" />
        <element api="M:Gemstone.Units.Speed.FromKnots(System.Double)" />
        <element api="M:Gemstone.Units.Speed.FromMach(System.Double)" />
        <element api="M:Gemstone.Units.Speed.ConvertFrom(System.Double,Gemstone.Units.SpeedUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.CompareTo(Gemstone.Units.Speed)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Speed" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ConvertFrom(System.Double,Gemstone.Units.SpeedUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ConvertTo(Gemstone.Units.SpeedUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Equals(Gemstone.Units.Speed)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Speed" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromFeetPerMinute(System.Double)">
      <apidata name="FromFeetPerMinute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromInchesPerSecond(System.Double)">
      <apidata name="FromInchesPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromKilometersPerHour(System.Double)">
      <apidata name="FromKilometersPerHour" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromKnots(System.Double)">
      <apidata name="FromKnots" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromMach(System.Double)">
      <apidata name="FromMach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.FromMilesPerHour(System.Double)">
      <apidata name="FromMilesPerHour" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Speed.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Speed.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Addition(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Division(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Equality(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Exponent(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Speed.op_GreaterThan(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_GreaterThanOrEqual(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Implicit(Gemstone.Units.Speed)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Implicit(System.Double)~Gemstone.Units.Speed">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Inequality(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_LessThan(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_LessThanOrEqual(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Modulus(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Multiply(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.op_Subtraction(Gemstone.Units.Speed,Gemstone.Units.Speed)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Speed" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToFeetPerMinute">
      <apidata name="ToFeetPerMinute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToInchesPerSecond">
      <apidata name="ToInchesPerSecond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToKilometersPerHour">
      <apidata name="ToKilometersPerHour" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToKnots">
      <apidata name="ToKnots" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToMach">
      <apidata name="ToMach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToMilesPerHour">
      <apidata name="ToMilesPerHour" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.TryParse(System.String,Gemstone.Units.Speed@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Speed" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Speed.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Speed@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Speed.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Speed" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Speed" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.SpeedUnit">
      <apidata name="SpeedUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.SpeedUnit.MetersPerSecond" />
        <element api="F:Gemstone.Units.SpeedUnit.MilesPerHour" />
        <element api="F:Gemstone.Units.SpeedUnit.KilometersPerHour" />
        <element api="F:Gemstone.Units.SpeedUnit.FeetPerMinute" />
        <element api="F:Gemstone.Units.SpeedUnit.InchesPerSecond" />
        <element api="F:Gemstone.Units.SpeedUnit.Knots" />
        <element api="F:Gemstone.Units.SpeedUnit.Mach" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.FeetPerMinute">
      <apidata name="FeetPerMinute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.InchesPerSecond">
      <apidata name="InchesPerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.KilometersPerHour">
      <apidata name="KilometersPerHour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.Knots">
      <apidata name="Knots" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.Mach">
      <apidata name="Mach" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.MetersPerSecond">
      <apidata name="MetersPerSecond" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.SpeedUnit.MilesPerHour">
      <apidata name="MilesPerHour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.SpeedUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Temperature">
      <apidata name="Temperature" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Temperature" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Temperature" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Temperature.MaxValue" />
        <element api="F:Gemstone.Units.Temperature.MinValue" />
        <element api="M:Gemstone.Units.Temperature.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.ToCelsius" />
        <element api="M:Gemstone.Units.Temperature.ToFahrenheit" />
        <element api="M:Gemstone.Units.Temperature.ToNewton" />
        <element api="M:Gemstone.Units.Temperature.ToRankine" />
        <element api="M:Gemstone.Units.Temperature.ToDelisle" />
        <element api="M:Gemstone.Units.Temperature.ToRéaumur" />
        <element api="M:Gemstone.Units.Temperature.ToRømer" />
        <element api="M:Gemstone.Units.Temperature.ConvertTo(Gemstone.Units.TemperatureUnit)" />
        <element api="M:Gemstone.Units.Temperature.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Temperature.CompareTo(Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Temperature.Equals(Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.GetHashCode" />
        <element api="M:Gemstone.Units.Temperature.ToString" />
        <element api="M:Gemstone.Units.Temperature.ToString(System.String)" />
        <element api="M:Gemstone.Units.Temperature.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Temperature.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Temperature.Parse(System.String)" />
        <element api="M:Gemstone.Units.Temperature.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Temperature.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Temperature.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Temperature.TryParse(System.String,Gemstone.Units.Temperature@)" />
        <element api="M:Gemstone.Units.Temperature.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Temperature@)" />
        <element api="M:Gemstone.Units.Temperature.GetTypeCode" />
        <element api="M:Gemstone.Units.Temperature.op_Equality(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Inequality(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_LessThan(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_LessThanOrEqual(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_GreaterThan(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_GreaterThanOrEqual(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Implicit(System.Double)~Gemstone.Units.Temperature" />
        <element api="M:Gemstone.Units.Temperature.op_Implicit(Gemstone.Units.Temperature)~System.Double" />
        <element api="M:Gemstone.Units.Temperature.op_Modulus(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Addition(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Subtraction(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Multiply(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Division(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.op_Exponent(Gemstone.Units.Temperature,Gemstone.Units.Temperature)" />
        <element api="M:Gemstone.Units.Temperature.FromCelsius(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromFahrenheit(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromNewton(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromRankine(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromDelisle(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromRéaumur(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.FromRømer(System.Double)" />
        <element api="M:Gemstone.Units.Temperature.ConvertFrom(System.Double,Gemstone.Units.TemperatureUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.CompareTo(Gemstone.Units.Temperature)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Temperature" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ConvertFrom(System.Double,Gemstone.Units.TemperatureUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ConvertTo(Gemstone.Units.TemperatureUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Equals(Gemstone.Units.Temperature)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Temperature" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromCelsius(System.Double)">
      <apidata name="FromCelsius" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromDelisle(System.Double)">
      <apidata name="FromDelisle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromFahrenheit(System.Double)">
      <apidata name="FromFahrenheit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromNewton(System.Double)">
      <apidata name="FromNewton" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromRankine(System.Double)">
      <apidata name="FromRankine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromRéaumur(System.Double)">
      <apidata name="FromRéaumur" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.FromRømer(System.Double)">
      <apidata name="FromRømer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Temperature.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Temperature.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Addition(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Division(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Equality(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Exponent(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_GreaterThan(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_GreaterThanOrEqual(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Implicit(Gemstone.Units.Temperature)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Implicit(System.Double)~Gemstone.Units.Temperature">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Inequality(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_LessThan(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_LessThanOrEqual(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Modulus(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Multiply(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.op_Subtraction(Gemstone.Units.Temperature,Gemstone.Units.Temperature)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Temperature" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToCelsius">
      <apidata name="ToCelsius" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToDelisle">
      <apidata name="ToDelisle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToFahrenheit">
      <apidata name="ToFahrenheit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToNewton">
      <apidata name="ToNewton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToRankine">
      <apidata name="ToRankine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToRéaumur">
      <apidata name="ToRéaumur" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToRømer">
      <apidata name="ToRømer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.TryParse(System.String,Gemstone.Units.Temperature@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Temperature" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Temperature.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Temperature@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Temperature.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Temperature" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Temperature" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.TemperatureUnit">
      <apidata name="TemperatureUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.TemperatureUnit.Kelvin" />
        <element api="F:Gemstone.Units.TemperatureUnit.Celsius" />
        <element api="F:Gemstone.Units.TemperatureUnit.Fahrenheit" />
        <element api="F:Gemstone.Units.TemperatureUnit.Newton" />
        <element api="F:Gemstone.Units.TemperatureUnit.Rankine" />
        <element api="F:Gemstone.Units.TemperatureUnit.Delisle" />
        <element api="F:Gemstone.Units.TemperatureUnit.Réaumur" />
        <element api="F:Gemstone.Units.TemperatureUnit.Rømer" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Celsius">
      <apidata name="Celsius" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Delisle">
      <apidata name="Delisle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Fahrenheit">
      <apidata name="Fahrenheit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Kelvin">
      <apidata name="Kelvin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Newton">
      <apidata name="Newton" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Rankine">
      <apidata name="Rankine" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Réaumur">
      <apidata name="Réaumur" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TemperatureUnit.Rømer">
      <apidata name="Rømer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TemperatureUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Time">
      <apidata name="Time" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Time" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Time" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Time.SecondsPerTick" />
        <element api="F:Gemstone.Units.Time.SecondsPerMinute" />
        <element api="F:Gemstone.Units.Time.SecondsPerHour" />
        <element api="F:Gemstone.Units.Time.SecondsPerDay" />
        <element api="F:Gemstone.Units.Time.SecondsPerWeek" />
        <element api="F:Gemstone.Units.Time.MaxValue" />
        <element api="F:Gemstone.Units.Time.MinValue" />
        <element api="F:Gemstone.Units.Time.TimeNames" />
        <element api="M:Gemstone.Units.Time.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Time.#ctor(System.TimeSpan)" />
        <element api="M:Gemstone.Units.Time.ToAtomicUnitsOfTime" />
        <element api="M:Gemstone.Units.Time.ToPlanckTime" />
        <element api="M:Gemstone.Units.Time.ToKe" />
        <element api="M:Gemstone.Units.Time.ToMinutes" />
        <element api="M:Gemstone.Units.Time.ToHours" />
        <element api="M:Gemstone.Units.Time.ToDays" />
        <element api="M:Gemstone.Units.Time.ToWeeks" />
        <element api="M:Gemstone.Units.Time.ToTicks" />
        <element api="M:Gemstone.Units.Time.ConvertTo(Gemstone.Units.TimeUnit)" />
        <element api="M:Gemstone.Units.Time.ToString" />
        <element api="M:Gemstone.Units.Time.ToString(System.Int32,System.Double)" />
        <element api="M:Gemstone.Units.Time.ToString(System.Int32,System.String[],System.Double)" />
        <element api="M:Gemstone.Units.Time.ToString(System.String)" />
        <element api="M:Gemstone.Units.Time.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Time.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Time.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Time.CompareTo(Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.CompareTo(System.TimeSpan)" />
        <element api="M:Gemstone.Units.Time.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Time.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Time.Equals(Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.Equals(System.TimeSpan)" />
        <element api="M:Gemstone.Units.Time.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Time.GetHashCode" />
        <element api="M:Gemstone.Units.Time.Parse(System.String)" />
        <element api="M:Gemstone.Units.Time.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Time.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Time.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Time.TryParse(System.String,Gemstone.Units.Time@)" />
        <element api="M:Gemstone.Units.Time.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Time@)" />
        <element api="M:Gemstone.Units.Time.GetTypeCode" />
        <element api="M:Gemstone.Units.Time.op_Equality(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Inequality(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_LessThan(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_LessThanOrEqual(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_GreaterThan(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_GreaterThanOrEqual(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Implicit(System.Double)~Gemstone.Units.Time" />
        <element api="M:Gemstone.Units.Time.op_Implicit(System.TimeSpan)~Gemstone.Units.Time" />
        <element api="M:Gemstone.Units.Time.op_Implicit(Gemstone.Units.Time)~System.Double" />
        <element api="M:Gemstone.Units.Time.op_Implicit(Gemstone.Units.Time)~System.TimeSpan" />
        <element api="M:Gemstone.Units.Time.op_Modulus(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Addition(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Subtraction(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Multiply(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Division(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.op_Exponent(Gemstone.Units.Time,Gemstone.Units.Time)" />
        <element api="M:Gemstone.Units.Time.FromAtomicUnitsOfTime(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromPlanckTime(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromKe(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromMinutes(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromHours(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromDays(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromWeeks(System.Double)" />
        <element api="M:Gemstone.Units.Time.FromTicks(Gemstone.Ticks)" />
        <element api="M:Gemstone.Units.Time.ConvertFrom(System.Double,Gemstone.Units.TimeUnit)" />
        <element api="M:Gemstone.Units.Time.SecondsPerMonth(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Units.Time.SecondsPerYear(System.Int32)" />
        <element api="M:Gemstone.Units.Time.ToElapsedTimeString(System.Double,System.Int32,System.String[],System.Double)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.CompareTo(Gemstone.Units.Time)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Time" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.CompareTo(System.TimeSpan)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ConvertFrom(System.Double,Gemstone.Units.TimeUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.TimeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ConvertTo(Gemstone.Units.TimeUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.TimeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Equals(Gemstone.Units.Time)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Time" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Equals(System.TimeSpan)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromAtomicUnitsOfTime(System.Double)">
      <apidata name="FromAtomicUnitsOfTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromDays(System.Double)">
      <apidata name="FromDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromHours(System.Double)">
      <apidata name="FromHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromKe(System.Double)">
      <apidata name="FromKe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromMinutes(System.Double)">
      <apidata name="FromMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromPlanckTime(System.Double)">
      <apidata name="FromPlanckTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromTicks(Gemstone.Ticks)">
      <apidata name="FromTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Ticks" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.FromWeeks(System.Double)">
      <apidata name="FromWeeks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Addition(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Division(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Equality(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Exponent(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Time.op_GreaterThan(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_GreaterThanOrEqual(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Implicit(Gemstone.Units.Time)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Implicit(Gemstone.Units.Time)~System.TimeSpan">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Implicit(System.Double)~Gemstone.Units.Time">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Implicit(System.TimeSpan)~Gemstone.Units.Time">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Inequality(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_LessThan(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_LessThanOrEqual(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Modulus(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Multiply(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.op_Subtraction(Gemstone.Units.Time,Gemstone.Units.Time)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Time" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Time" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.SecondsPerDay">
      <apidata name="SecondsPerDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>86400</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.SecondsPerHour">
      <apidata name="SecondsPerHour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>3600</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.SecondsPerMinute">
      <apidata name="SecondsPerMinute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>60</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.SecondsPerMonth(System.Int32,System.Int32)">
      <apidata name="SecondsPerMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="year">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="month">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.SecondsPerTick">
      <apidata name="SecondsPerTick" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <value>1E-07</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.SecondsPerWeek">
      <apidata name="SecondsPerWeek" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>604800</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.SecondsPerYear(System.Int32)">
      <apidata name="SecondsPerYear" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="year">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Time.TimeNames">
      <apidata name="TimeNames" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToAtomicUnitsOfTime">
      <apidata name="ToAtomicUnitsOfTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToDays">
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToElapsedTimeString(System.Double,System.Int32,System.String[],System.Double)">
      <apidata name="ToElapsedTimeString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="secondPrecision">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToHours">
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToKe">
      <apidata name="ToKe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToMinutes">
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToPlanckTime">
      <apidata name="ToPlanckTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString(System.Int32,System.Double)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="secondPrecision">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString(System.Int32,System.String[],System.Double)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="secondPrecision">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="minimumSubSecondResolution" optional="true">
          <type api="T:System.Double" ref="false" />
          <argument>
            <type api="T:System.Double" ref="false" />
            <value>0.001</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToTicks">
      <apidata name="ToTicks" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gemstone.Ticks" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.ToWeeks">
      <apidata name="ToWeeks" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.TryParse(System.String,Gemstone.Units.Time@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Time" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Time.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Time@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Time.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Time" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Time" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.TimeUnit">
      <apidata name="TimeUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.TimeUnit.Seconds" />
        <element api="F:Gemstone.Units.TimeUnit.Minutes" />
        <element api="F:Gemstone.Units.TimeUnit.Hours" />
        <element api="F:Gemstone.Units.TimeUnit.Days" />
        <element api="F:Gemstone.Units.TimeUnit.Weeks" />
        <element api="F:Gemstone.Units.TimeUnit.Ticks" />
        <element api="F:Gemstone.Units.TimeUnit.AtomicUnitsOfTime" />
        <element api="F:Gemstone.Units.TimeUnit.PlanckTime" />
        <element api="F:Gemstone.Units.TimeUnit.Ke" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.AtomicUnitsOfTime">
      <apidata name="AtomicUnitsOfTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Days">
      <apidata name="Days" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Hours">
      <apidata name="Hours" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Ke">
      <apidata name="Ke" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Minutes">
      <apidata name="Minutes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.PlanckTime">
      <apidata name="PlanckTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Seconds">
      <apidata name="Seconds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Ticks">
      <apidata name="Ticks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.TimeUnit.Weeks">
      <apidata name="Weeks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.TimeUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Voltage">
      <apidata name="Voltage" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Voltage" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Voltage" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Voltage.MaxValue" />
        <element api="F:Gemstone.Units.Voltage.MinValue" />
        <element api="M:Gemstone.Units.Voltage.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Voltage.ToAbvolts" />
        <element api="M:Gemstone.Units.Voltage.ToStatvolts" />
        <element api="M:Gemstone.Units.Voltage.ConvertTo(Gemstone.Units.VoltageUnit)" />
        <element api="M:Gemstone.Units.Voltage.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Voltage.CompareTo(Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Voltage.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Voltage.Equals(Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Voltage.GetHashCode" />
        <element api="M:Gemstone.Units.Voltage.ToString" />
        <element api="M:Gemstone.Units.Voltage.ToString(System.String)" />
        <element api="M:Gemstone.Units.Voltage.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Voltage.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Voltage.Parse(System.String)" />
        <element api="M:Gemstone.Units.Voltage.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Voltage.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Voltage.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Voltage.TryParse(System.String,Gemstone.Units.Voltage@)" />
        <element api="M:Gemstone.Units.Voltage.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Voltage@)" />
        <element api="M:Gemstone.Units.Voltage.GetTypeCode" />
        <element api="M:Gemstone.Units.Voltage.op_Equality(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Inequality(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_LessThan(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_LessThanOrEqual(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_GreaterThan(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_GreaterThanOrEqual(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Implicit(System.Double)~Gemstone.Units.Voltage" />
        <element api="M:Gemstone.Units.Voltage.op_Implicit(Gemstone.Units.Voltage)~System.Double" />
        <element api="M:Gemstone.Units.Voltage.op_Modulus(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Addition(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Subtraction(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Multiply(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Division(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.op_Exponent(Gemstone.Units.Voltage,Gemstone.Units.Voltage)" />
        <element api="M:Gemstone.Units.Voltage.FromAbvolts(System.Double)" />
        <element api="M:Gemstone.Units.Voltage.FromStatvolts(System.Double)" />
        <element api="M:Gemstone.Units.Voltage.ConvertFrom(System.Double,Gemstone.Units.VoltageUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.CompareTo(Gemstone.Units.Voltage)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Voltage" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ConvertFrom(System.Double,Gemstone.Units.VoltageUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ConvertTo(Gemstone.Units.VoltageUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Equals(Gemstone.Units.Voltage)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Voltage" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.FromAbvolts(System.Double)">
      <apidata name="FromAbvolts" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.FromStatvolts(System.Double)">
      <apidata name="FromStatvolts" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Voltage.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Voltage.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Addition(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Division(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Equality(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Exponent(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_GreaterThan(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_GreaterThanOrEqual(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Implicit(Gemstone.Units.Voltage)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Implicit(System.Double)~Gemstone.Units.Voltage">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Inequality(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_LessThan(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_LessThanOrEqual(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Modulus(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Multiply(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.op_Subtraction(Gemstone.Units.Voltage,Gemstone.Units.Voltage)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Voltage" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToAbvolts">
      <apidata name="ToAbvolts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToStatvolts">
      <apidata name="ToStatvolts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.TryParse(System.String,Gemstone.Units.Voltage@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Voltage" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Voltage.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Voltage@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Voltage.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Voltage" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Voltage" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.VoltageUnit">
      <apidata name="VoltageUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.VoltageUnit.Volts" />
        <element api="F:Gemstone.Units.VoltageUnit.Abvolts" />
        <element api="F:Gemstone.Units.VoltageUnit.Statvolts" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VoltageUnit.Abvolts">
      <apidata name="Abvolts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VoltageUnit.Statvolts">
      <apidata name="Statvolts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VoltageUnit.Volts">
      <apidata name="Volts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VoltageUnit" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.Volume">
      <apidata name="Volume" group="type" subgroup="structure" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IConvertible" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Volume" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Units.Volume" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:Gemstone.Units.Volume.MaxValue" />
        <element api="F:Gemstone.Units.Volume.MinValue" />
        <element api="M:Gemstone.Units.Volume.#ctor(System.Double)" />
        <element api="M:Gemstone.Units.Volume.ToLiters" />
        <element api="M:Gemstone.Units.Volume.ToTeaspoons" />
        <element api="M:Gemstone.Units.Volume.ToMetricTeaspoons" />
        <element api="M:Gemstone.Units.Volume.ToTablespoons" />
        <element api="M:Gemstone.Units.Volume.ToMetricTablespoons" />
        <element api="M:Gemstone.Units.Volume.ToCups" />
        <element api="M:Gemstone.Units.Volume.ToMetricCups" />
        <element api="M:Gemstone.Units.Volume.ToFluidOunces" />
        <element api="M:Gemstone.Units.Volume.ToPints" />
        <element api="M:Gemstone.Units.Volume.ToQuarts" />
        <element api="M:Gemstone.Units.Volume.ToGallons" />
        <element api="M:Gemstone.Units.Volume.ToCubicInches" />
        <element api="M:Gemstone.Units.Volume.ToCubicFeet" />
        <element api="M:Gemstone.Units.Volume.ConvertTo(Gemstone.Units.VolumeUnit)" />
        <element api="M:Gemstone.Units.Volume.CompareTo(System.Object)" />
        <element api="M:Gemstone.Units.Volume.CompareTo(Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.CompareTo(System.Double)" />
        <element api="M:Gemstone.Units.Volume.Equals(System.Object)" />
        <element api="M:Gemstone.Units.Volume.Equals(Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.Equals(System.Double)" />
        <element api="M:Gemstone.Units.Volume.GetHashCode" />
        <element api="M:Gemstone.Units.Volume.ToString" />
        <element api="M:Gemstone.Units.Volume.ToString(System.String)" />
        <element api="M:Gemstone.Units.Volume.ToString(System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Volume.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Volume.Parse(System.String)" />
        <element api="M:Gemstone.Units.Volume.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Gemstone.Units.Volume.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Volume.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Gemstone.Units.Volume.TryParse(System.String,Gemstone.Units.Volume@)" />
        <element api="M:Gemstone.Units.Volume.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Volume@)" />
        <element api="M:Gemstone.Units.Volume.GetTypeCode" />
        <element api="M:Gemstone.Units.Volume.op_Equality(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Inequality(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_LessThan(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_LessThanOrEqual(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_GreaterThan(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_GreaterThanOrEqual(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Implicit(System.Double)~Gemstone.Units.Volume" />
        <element api="M:Gemstone.Units.Volume.op_Implicit(Gemstone.Units.Volume)~System.Double" />
        <element api="M:Gemstone.Units.Volume.op_Modulus(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Addition(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Subtraction(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Multiply(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Division(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.op_Exponent(Gemstone.Units.Volume,Gemstone.Units.Volume)" />
        <element api="M:Gemstone.Units.Volume.FromLiters(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromTeaspoons(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromMetricTeaspoons(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromTablespoons(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromMetricTablespoons(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromCups(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromMetricCups(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromFluidOunces(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromPints(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromQuarts(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromGallons(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromCubicInches(System.Double)" />
        <element api="M:Gemstone.Units.Volume.FromCubicFeet(System.Double)" />
        <element api="M:Gemstone.Units.Volume.ConvertFrom(System.Double,Gemstone.Units.VolumeUnit)" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault``1(System.Object,System.Object)" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.EnumExtensions.EnumExtensions.GetEnumValueOrDefault(System.Object,System.Type,System.Object)" source="extension">
          <apidata name="GetEnumValueOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="defaultValue" optional="true">
              <type api="T:System.Object" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gemstone.EnumExtensions" />
            <type api="T:Gemstone.EnumExtensions.EnumExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.CompareTo(Gemstone.Units.Volume)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Volume" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.CompareTo(System.Double)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ConvertFrom(System.Double,Gemstone.Units.VolumeUnit)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="sourceUnit">
          <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ConvertTo(Gemstone.Units.VolumeUnit)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetUnit">
          <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Equals(Gemstone.Units.Volume)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Units.Volume" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Equals(System.Double)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromCubicFeet(System.Double)">
      <apidata name="FromCubicFeet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromCubicInches(System.Double)">
      <apidata name="FromCubicInches" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromCups(System.Double)">
      <apidata name="FromCups" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromFluidOunces(System.Double)">
      <apidata name="FromFluidOunces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromGallons(System.Double)">
      <apidata name="FromGallons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromLiters(System.Double)">
      <apidata name="FromLiters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromMetricCups(System.Double)">
      <apidata name="FromMetricCups" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromMetricTablespoons(System.Double)">
      <apidata name="FromMetricTablespoons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromMetricTeaspoons(System.Double)">
      <apidata name="FromMetricTeaspoons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromPints(System.Double)">
      <apidata name="FromPints" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromQuarts(System.Double)">
      <apidata name="FromQuarts" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromTablespoons(System.Double)">
      <apidata name="FromTablespoons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.FromTeaspoons(System.Double)">
      <apidata name="FromTeaspoons" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.GetTypeCode">
      <apidata name="GetTypeCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.GetTypeCode">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Volume.MaxValue">
      <apidata name="MaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.Volume.MinValue">
      <apidata name="MinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Addition(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Division(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Equality(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Exponent(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Exponent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Units.Volume.op_GreaterThan(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_GreaterThanOrEqual(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Implicit(Gemstone.Units.Volume)~System.Double">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Implicit(System.Double)~Gemstone.Units.Volume">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Inequality(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_LessThan(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_LessThanOrEqual(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Modulus(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Multiply(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.op_Subtraction(Gemstone.Units.Volume,Gemstone.Units.Volume)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
        <parameter name="value2">
          <type api="T:Gemstone.Units.Volume" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToCubicFeet">
      <apidata name="ToCubicFeet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToCubicInches">
      <apidata name="ToCubicInches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToCups">
      <apidata name="ToCups" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToFluidOunces">
      <apidata name="ToFluidOunces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToGallons">
      <apidata name="ToGallons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToLiters">
      <apidata name="ToLiters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToMetricCups">
      <apidata name="ToMetricCups" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToMetricTablespoons">
      <apidata name="ToMetricTablespoons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToMetricTeaspoons">
      <apidata name="ToMetricTeaspoons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToPints">
      <apidata name="ToPints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToQuarts">
      <apidata name="ToQuarts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IConvertible.ToString(System.IFormatProvider)">
          <type api="T:System.IConvertible" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToTablespoons">
      <apidata name="ToTablespoons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.ToTeaspoons">
      <apidata name="ToTeaspoons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.TryParse(System.String,Gemstone.Units.Volume@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Volume" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="M:Gemstone.Units.Volume.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Gemstone.Units.Volume@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/Units/Volume.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Gemstone.Units.Volume" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.Volume" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Units.VolumeUnit">
      <apidata name="VolumeUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Units.VolumeUnit.CubicMeters" />
        <element api="F:Gemstone.Units.VolumeUnit.Liters" />
        <element api="F:Gemstone.Units.VolumeUnit.Teaspoons" />
        <element api="F:Gemstone.Units.VolumeUnit.MetricTeaspoons" />
        <element api="F:Gemstone.Units.VolumeUnit.Tablespoons" />
        <element api="F:Gemstone.Units.VolumeUnit.MetricTablespoons" />
        <element api="F:Gemstone.Units.VolumeUnit.Cups" />
        <element api="F:Gemstone.Units.VolumeUnit.MetricCups" />
        <element api="F:Gemstone.Units.VolumeUnit.FluidOunces" />
        <element api="F:Gemstone.Units.VolumeUnit.Pints" />
        <element api="F:Gemstone.Units.VolumeUnit.Quarts" />
        <element api="F:Gemstone.Units.VolumeUnit.Gallons" />
        <element api="F:Gemstone.Units.VolumeUnit.CubicInches" />
        <element api="F:Gemstone.Units.VolumeUnit.CubicFeet" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.CubicFeet">
      <apidata name="CubicFeet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.CubicInches">
      <apidata name="CubicInches" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.CubicMeters">
      <apidata name="CubicMeters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Cups">
      <apidata name="Cups" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.FluidOunces">
      <apidata name="FluidOunces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Gallons">
      <apidata name="Gallons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Liters">
      <apidata name="Liters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.MetricCups">
      <apidata name="MetricCups" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.MetricTablespoons">
      <apidata name="MetricTablespoons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.MetricTeaspoons">
      <apidata name="MetricTeaspoons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Pints">
      <apidata name="Pints" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Quarts">
      <apidata name="Quarts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Tablespoons">
      <apidata name="Tablespoons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Units.VolumeUnit.Teaspoons">
      <apidata name="Teaspoons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.Units" />
        <type api="T:Gemstone.Units.VolumeUnit" ref="false" />
      </containers>
    </api>
    <api id="N:Gemstone.WordExtensions">
      <apidata name="Gemstone.WordExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.WordExtensions.WordExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.WordExtensions.WordExtensions">
      <apidata name="WordExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignWord(System.Int16)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignWord(System.UInt16)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignDoubleWord(System.Int32)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignDoubleWord(System.UInt32)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignQuadWord(System.Int64)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.AlignQuadWord(System.UInt64)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.HighNibble(System.Byte)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.HighByte(System.UInt16)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.HighWord(System.UInt32)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.HighDoubleWord(System.UInt64)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.LowNibble(System.Byte)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.LowByte(System.UInt16)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.LowWord(System.UInt32)" />
        <element api="M:Gemstone.WordExtensions.WordExtensions.LowDoubleWord(System.UInt64)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignDoubleWord(System.Int32)">
      <apidata name="AlignDoubleWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doubleWord">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignDoubleWord(System.UInt32)">
      <apidata name="AlignDoubleWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doubleWord">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignQuadWord(System.Int64)">
      <apidata name="AlignQuadWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="quadWord">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignQuadWord(System.UInt64)">
      <apidata name="AlignQuadWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="quadWord">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignWord(System.Int16)">
      <apidata name="AlignWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="word">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.AlignWord(System.UInt16)">
      <apidata name="AlignWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="word">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.HighByte(System.UInt16)">
      <apidata name="HighByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="word">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.HighDoubleWord(System.UInt64)">
      <apidata name="HighDoubleWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="quadWord">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.HighNibble(System.Byte)">
      <apidata name="HighNibble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.HighWord(System.UInt32)">
      <apidata name="HighWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doubleWord">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.LowByte(System.UInt16)">
      <apidata name="LowByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="word">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.LowDoubleWord(System.UInt64)">
      <apidata name="LowDoubleWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="quadWord">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.LowNibble(System.Byte)">
      <apidata name="LowNibble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.WordExtensions.WordExtensions.LowWord(System.UInt32)">
      <apidata name="LowWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone/WordExtensions/WordExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doubleWord">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Common" module="Gemstone.Common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gemstone.WordExtensions" />
        <type api="T:Gemstone.WordExtensions.WordExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>