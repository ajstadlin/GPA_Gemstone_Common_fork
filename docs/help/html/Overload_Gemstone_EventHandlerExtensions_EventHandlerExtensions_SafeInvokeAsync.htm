<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>EventHandlerExtensions.SafeInvokeAsync Method</title><meta name="Title" content="SafeInvokeAsync Method" /><meta name="Microsoft.Help.Id" content="Overload:Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvokeAsync" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="EventHandlerExtensions.SafeInvokeAsync method" /><meta name="System.Keywords" content="SafeInvokeAsync method" /><meta name="Microsoft.Help.F1" content="Gemstone.EventHandlerExtensions.EventHandlerExtensions.SafeInvokeAsync" /><meta name="Microsoft.Help.F1" content="EventHandlerExtensions.SafeInvokeAsync" /><meta name="Microsoft.Help.F1" content="SafeInvokeAsync" /><meta name="container" content="Gemstone.EventHandlerExtensions" /><meta name="file" content="Overload_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync" /><meta name="guid" content="Overload_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Gemstone Common Library<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/About.htm" title="Gemstone Common Library" tocid="roottoc">Gemstone Common Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Gemstone_EventHandlerExtensions.htm" title="Gemstone.EventHandlerExtensions" tocid="N_Gemstone_EventHandlerExtensions">Gemstone.EventHandlerExtensions</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Gemstone_EventHandlerExtensions_EventHandlerExtensions.htm" title="EventHandlerExtensions Class" tocid="T_Gemstone_EventHandlerExtensions_EventHandlerExtensions">EventHandlerExtensions Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Gemstone_EventHandlerExtensions_EventHandlerExtensions.htm" title="EventHandlerExtensions Methods" tocid="Methods_T_Gemstone_EventHandlerExtensions_EventHandlerExtensions">EventHandlerExtensions Methods</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync.htm" title="SafeInvokeAsync Method" tocid="Overload_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync">SafeInvokeAsync Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_4.htm" title="SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, TEventArgs, Boolean) Method" tocid="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_4">SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, TEventArgs, Boolean) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_1.htm" title="SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Action&lt;Exception, Delegate&gt;, Object, TEventArgs, Boolean) Method" tocid="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_1">SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Action&lt;Exception, Delegate&gt;, Object, TEventArgs, Boolean) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2.htm" title="SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Action&lt;Exception&gt;, Object, TEventArgs, Boolean) Method" tocid="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2">SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Action&lt;Exception&gt;, Object, TEventArgs, Boolean) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_3.htm" title="SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, Action&lt;Exception, Delegate&gt;, Object, TEventArgs, Boolean) Method" tocid="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_3">SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, Action&lt;Exception, Delegate&gt;, Object, TEventArgs, Boolean) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_2.htm" title="SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, Action&lt;Exception&gt;, Object, TEventArgs, Boolean) Method" tocid="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_2">SafeInvokeAsync&lt;TEventHandler, TEventArgs&gt;(TEventHandler, Object, Action&lt;Exception&gt;, Object, TEventArgs, Boolean) Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></td><td class="titleColumn"><h1>Event<wbr />Handler<wbr />Extensions<span id="LSTADF3BEBB_0" data-languageSpecificText="cpp=::|nu=."></span>Safe<wbr />Invoke<wbr />Async Method</h1></td></tr></table><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Overload List</span></div><div id="IDACASection" class="collapsibleSection"><table id="OverloadList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_4.htm">SafeInvokeAsync<span id="LSTADF3BEBB_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEventHandler, TEventArgs<span id="LSTADF3BEBB_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TEventHandler, Object, TEventArgs, Boolean)</a></td><td>
            Safely invokes event propagation asynchronously, continuing even if an attached user handler throws an exception.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_1.htm">SafeInvokeAsync<span id="LSTADF3BEBB_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEventHandler, TEventArgs<span id="LSTADF3BEBB_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TEventHandler, Action<span id="LSTADF3BEBB_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Exception, Delegate<span id="LSTADF3BEBB_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Object, TEventArgs, Boolean)</a></td><td>
            Safely invokes event propagation asynchronously with custom exception handler that accepts user handler delegate, continuing even if an attached user handler throws an exception.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2.htm">SafeInvokeAsync<span id="LSTADF3BEBB_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEventHandler, TEventArgs<span id="LSTADF3BEBB_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TEventHandler, Action<span id="LSTADF3BEBB_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Exception<span id="LSTADF3BEBB_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Object, TEventArgs, Boolean)</a></td><td>
            Safely invokes event propagation asynchronously with custom exception handler, continuing even if an attached user handler throws an exception.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_3.htm">SafeInvokeAsync<span id="LSTADF3BEBB_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEventHandler, TEventArgs<span id="LSTADF3BEBB_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TEventHandler, Object, Action<span id="LSTADF3BEBB_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Exception, Delegate<span id="LSTADF3BEBB_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Object, TEventArgs, Boolean)</a></td><td>
            Safely invokes event propagation asynchronously with custom event lock and exception handler that accepts user handler delegate, continuing even if an attached user handler throws an exception.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Gemstone_EventHandlerExtensions_EventHandlerExtensions_SafeInvokeAsync__2_2.htm">SafeInvokeAsync<span id="LSTADF3BEBB_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEventHandler, TEventArgs<span id="LSTADF3BEBB_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TEventHandler, Object, Action<span id="LSTADF3BEBB_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Exception<span id="LSTADF3BEBB_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Object, TEventArgs, Boolean)</a></td><td>
            Safely invokes event propagation asynchronously with custom exception handler, continuing even if an attached user handler throws an exception.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Gemstone_EventHandlerExtensions_EventHandlerExtensions.htm">EventHandlerExtensions Class</a></div><div><a href="N_Gemstone_EventHandlerExtensions.htm">Gemstone.EventHandlerExtensions Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>